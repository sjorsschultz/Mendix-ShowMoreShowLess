{"dependencies":[{"name":"./XMLHttpRequest","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}},{"start":{"line":13,"column":23},"end":{"line":13,"column":50}}],"key":"QTDeH3VQPtkyaHVgPCVwYEv83UE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var originalXHROpen = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open;\n  var originalXHRSend = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send;\n  var originalXHRSetRequestHeader = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader;\n  var openCallback;\n  var sendCallback;\n  var requestHeaderCallback;\n  var headerReceivedCallback;\n  var responseCallback;\n  var _isInterceptorEnabled = false;\n  var XHRInterceptor = {\n    setOpenCallback: function setOpenCallback(callback) {\n      openCallback = callback;\n    },\n    setSendCallback: function setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {\n      headerReceivedCallback = callback;\n    },\n    setResponseCallback: function setResponseCallback(callback) {\n      responseCallback = callback;\n    },\n    setRequestHeaderCallback: function setRequestHeaderCallback(callback) {\n      requestHeaderCallback = callback;\n    },\n    isInterceptorEnabled: function isInterceptorEnabled() {\n      return _isInterceptorEnabled;\n    },\n    enableInterception: function enableInterception() {\n      if (_isInterceptorEnabled) {\n        return;\n      }\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open = function (method, url) {\n        if (openCallback) {\n          openCallback(method, url, this);\n        }\n        originalXHROpen.apply(this, arguments);\n      };\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader = function (header, value) {\n        if (requestHeaderCallback) {\n          requestHeaderCallback(header, value, this);\n        }\n        originalXHRSetRequestHeader.apply(this, arguments);\n      };\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send = function (data) {\n        var _this = this;\n        if (sendCallback) {\n          sendCallback(data, this);\n        }\n        if (this.addEventListener) {\n          this.addEventListener('readystatechange', function () {\n            if (!_isInterceptorEnabled) {\n              return;\n            }\n            if (_this.readyState === _this.HEADERS_RECEIVED) {\n              var contentTypeString = _this.getResponseHeader('Content-Type');\n              var contentLengthString = _this.getResponseHeader('Content-Length');\n              var _responseContentType, _responseSize;\n              if (contentTypeString) {\n                _responseContentType = contentTypeString.split(';')[0];\n              }\n              if (contentLengthString) {\n                _responseSize = parseInt(contentLengthString, 10);\n              }\n              if (headerReceivedCallback) {\n                headerReceivedCallback(_responseContentType, _responseSize, _this.getAllResponseHeaders(), _this);\n              }\n            }\n            if (_this.readyState === _this.DONE) {\n              if (responseCallback) {\n                responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);\n              }\n            }\n          }, false);\n        }\n        originalXHRSend.apply(this, arguments);\n      };\n      _isInterceptorEnabled = true;\n    },\n    disableInterception: function disableInterception() {\n      if (!_isInterceptorEnabled) {\n        return;\n      }\n      _isInterceptorEnabled = false;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send = originalXHRSend;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open = originalXHROpen;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader = originalXHRSetRequestHeader;\n      responseCallback = null;\n      openCallback = null;\n      sendCallback = null;\n      headerReceivedCallback = null;\n      requestHeaderCallback = null;\n    }\n  };\n  module.exports = XHRInterceptor;\n});","lineCount":99,"map":[[2,2,11,0],[2,14,11,12],[4,2,15,0],[4,6,15,6,"originalXHROpen"],[4,21,15,21],[4,24,15,24,"_$$_REQUIRE"],[4,35,15,24],[4,36,15,24,"_dependencyMap"],[4,50,15,24],[4,75,15,39,"prototype"],[4,84,15,48],[4,85,15,49,"open"],[4,89,15,53],[5,2,17,0],[5,6,17,6,"originalXHRSend"],[5,21,17,21],[5,24,17,24,"_$$_REQUIRE"],[5,35,17,24],[5,36,17,24,"_dependencyMap"],[5,50,17,24],[5,75,17,39,"prototype"],[5,84,17,48],[5,85,17,49,"send"],[5,89,17,53],[6,2,19,0],[6,6,19,6,"originalXHRSetRequestHeader"],[6,33,19,33],[6,36,19,36,"_$$_REQUIRE"],[6,47,19,36],[6,48,19,36,"_dependencyMap"],[6,62,19,36],[6,87,19,51,"prototype"],[6,96,19,60],[6,97,19,61,"setRequestHeader"],[6,113,19,77],[7,2,54,0],[7,6,54,4,"openCallback"],[7,18,54,51],[8,2,55,0],[8,6,55,4,"sendCallback"],[8,18,55,51],[9,2,56,0],[9,6,56,4,"requestHeaderCallback"],[9,27,56,69],[10,2,57,0],[10,6,57,4,"headerReceivedCallback"],[10,28,57,71],[11,2,58,0],[11,6,58,4,"responseCallback"],[11,22,58,59],[12,2,60,0],[12,6,60,4,"isInterceptorEnabled"],[12,27,60,24],[12,30,60,27],[12,35,60,32],[13,2,69,0],[13,6,69,6,"XHRInterceptor"],[13,20,69,20],[13,23,69,23],[14,4,73,2,"setOpenCallback"],[14,19,73,17],[14,30,73,2,"setOpenCallback"],[14,45,73,17,"setOpenCallback"],[14,46,73,18,"callback"],[14,54,73,54],[14,56,73,56],[15,6,74,4,"openCallback"],[15,18,74,16],[15,21,74,19,"callback"],[15,29,74,27],[16,4,75,2],[16,5,75,3],[17,4,80,2,"setSendCallback"],[17,19,80,17],[17,30,80,2,"setSendCallback"],[17,45,80,17,"setSendCallback"],[17,46,80,18,"callback"],[17,54,80,54],[17,56,80,56],[18,6,81,4,"sendCallback"],[18,18,81,16],[18,21,81,19,"callback"],[18,29,81,27],[19,4,82,2],[19,5,82,3],[20,4,87,2,"setHeaderReceivedCallback"],[20,29,87,27],[20,40,87,2,"setHeaderReceivedCallback"],[20,65,87,27,"setHeaderReceivedCallback"],[20,66,87,28,"callback"],[20,74,87,74],[20,76,87,76],[21,6,88,4,"headerReceivedCallback"],[21,28,88,26],[21,31,88,29,"callback"],[21,39,88,37],[22,4,89,2],[22,5,89,3],[23,4,94,2,"setResponseCallback"],[23,23,94,21],[23,34,94,2,"setResponseCallback"],[23,53,94,21,"setResponseCallback"],[23,54,94,22,"callback"],[23,62,94,62],[23,64,94,64],[24,6,95,4,"responseCallback"],[24,22,95,20],[24,25,95,23,"callback"],[24,33,95,31],[25,4,96,2],[25,5,96,3],[26,4,101,2,"setRequestHeaderCallback"],[26,28,101,26],[26,39,101,2,"setRequestHeaderCallback"],[26,63,101,26,"setRequestHeaderCallback"],[26,64,101,27,"callback"],[26,72,101,72],[26,74,101,74],[27,6,102,4,"requestHeaderCallback"],[27,27,102,25],[27,30,102,28,"callback"],[27,38,102,36],[28,4,103,2],[28,5,103,3],[29,4,105,2,"isInterceptorEnabled"],[29,24,105,22],[29,35,105,2,"isInterceptorEnabled"],[29,55,105,22,"isInterceptorEnabled"],[29,56,105,22],[29,58,105,34],[30,6,106,4],[30,13,106,11,"isInterceptorEnabled"],[30,34,106,31],[31,4,107,2],[31,5,107,3],[32,4,109,2,"enableInterception"],[32,22,109,20],[32,33,109,2,"enableInterception"],[32,51,109,20,"enableInterception"],[32,52,109,20],[32,54,109,23],[33,6,110,4],[33,10,110,8,"isInterceptorEnabled"],[33,31,110,28],[33,33,110,30],[34,8,111,6],[35,6,112,4],[36,6,117,4,"_$$_REQUIRE"],[36,17,117,4],[36,18,117,4,"_dependencyMap"],[36,32,117,4],[36,57,117,19,"prototype"],[36,66,117,28],[36,67,117,29,"open"],[36,71,117,33],[36,74,117,36],[36,84,117,46,"method"],[36,90,117,60],[36,92,117,62,"url"],[36,95,117,73],[36,97,117,75],[37,8,118,6],[37,12,118,10,"openCallback"],[37,24,118,22],[37,26,118,24],[38,10,119,8,"openCallback"],[38,22,119,20],[38,23,119,21,"method"],[38,29,119,27],[38,31,119,29,"url"],[38,34,119,32],[38,36,119,34],[38,40,119,38],[38,41,119,39],[39,8,120,6],[40,8,121,6,"originalXHROpen"],[40,23,121,21],[40,24,121,22,"apply"],[40,29,121,27],[40,30,121,28],[40,34,121,32],[40,36,121,34,"arguments"],[40,45,121,43],[40,46,121,44],[41,6,122,4],[41,7,122,5],[42,6,128,4,"_$$_REQUIRE"],[42,17,128,4],[42,18,128,4,"_dependencyMap"],[42,32,128,4],[42,57,128,19,"prototype"],[42,66,128,28],[42,67,128,29,"setRequestHeader"],[42,83,128,45],[42,86,128,48],[42,96,129,6,"header"],[42,102,129,20],[42,104,130,6,"value"],[42,109,130,19],[42,111,131,6],[43,8,132,6],[43,12,132,10,"requestHeaderCallback"],[43,33,132,31],[43,35,132,33],[44,10,133,8,"requestHeaderCallback"],[44,31,133,29],[44,32,133,30,"header"],[44,38,133,36],[44,40,133,38,"value"],[44,45,133,43],[44,47,133,45],[44,51,133,49],[44,52,133,50],[45,8,134,6],[46,8,135,6,"originalXHRSetRequestHeader"],[46,35,135,33],[46,36,135,34,"apply"],[46,41,135,39],[46,42,135,40],[46,46,135,44],[46,48,135,46,"arguments"],[46,57,135,55],[46,58,135,56],[47,6,136,4],[47,7,136,5],[48,6,142,4,"_$$_REQUIRE"],[48,17,142,4],[48,18,142,4,"_dependencyMap"],[48,32,142,4],[48,57,142,19,"prototype"],[48,66,142,28],[48,67,142,29,"send"],[48,71,142,33],[48,74,142,36],[48,84,142,46,"data"],[48,88,142,58],[48,90,142,60],[49,8,142,60],[49,12,142,60,"_this"],[49,17,142,60],[50,8,143,6],[50,12,143,10,"sendCallback"],[50,24,143,22],[50,26,143,24],[51,10,144,8,"sendCallback"],[51,22,144,20],[51,23,144,21,"data"],[51,27,144,25],[51,29,144,27],[51,33,144,31],[51,34,144,32],[52,8,145,6],[53,8,146,6],[53,12,146,10],[53,16,146,14],[53,17,146,15,"addEventListener"],[53,33,146,31],[53,35,146,33],[54,10,147,8],[54,14,147,12],[54,15,147,13,"addEventListener"],[54,31,147,29],[54,32,148,10],[54,50,148,28],[54,52,149,10],[54,64,149,16],[55,12,150,12],[55,16,150,16],[55,17,150,17,"isInterceptorEnabled"],[55,38,150,37],[55,40,150,39],[56,14,151,14],[57,12,152,12],[58,12,153,12],[58,16,153,16,"_this"],[58,21,153,20],[58,22,153,21,"readyState"],[58,32,153,31],[58,37,153,36,"_this"],[58,42,153,40],[58,43,153,41,"HEADERS_RECEIVED"],[58,59,153,57],[58,61,153,59],[59,14,154,14],[59,18,154,20,"contentTypeString"],[59,35,154,37],[59,38,154,40,"_this"],[59,43,154,44],[59,44,154,45,"getResponseHeader"],[59,61,154,62],[59,62,154,63],[59,76,154,77],[59,77,154,78],[60,14,155,14],[60,18,155,20,"contentLengthString"],[60,37,155,39],[60,40,156,16,"_this"],[60,45,156,20],[60,46,156,21,"getResponseHeader"],[60,63,156,38],[60,64,156,39],[60,80,156,55],[60,81,156,56],[61,14,157,14],[61,18,157,18,"responseContentType"],[61,38,157,37],[61,40,157,39,"responseSize"],[61,53,157,51],[62,14,158,14],[62,18,158,18,"contentTypeString"],[62,35,158,35],[62,37,158,37],[63,16,159,16,"responseContentType"],[63,36,159,35],[63,39,159,38,"contentTypeString"],[63,56,159,55],[63,57,159,56,"split"],[63,62,159,61],[63,63,159,62],[63,66,159,65],[63,67,159,66],[63,68,159,67],[63,69,159,68],[63,70,159,69],[64,14,160,14],[65,14,161,14],[65,18,161,18,"contentLengthString"],[65,37,161,37],[65,39,161,39],[66,16,162,16,"responseSize"],[66,29,162,28],[66,32,162,31,"parseInt"],[66,40,162,39],[66,41,162,40,"contentLengthString"],[66,60,162,59],[66,62,162,61],[66,64,162,63],[66,65,162,64],[67,14,163,14],[68,14,164,14],[68,18,164,18,"headerReceivedCallback"],[68,40,164,40],[68,42,164,42],[69,16,165,16,"headerReceivedCallback"],[69,38,165,38],[69,39,166,18,"responseContentType"],[69,59,166,37],[69,61,167,18,"responseSize"],[69,74,167,30],[69,76,168,18,"_this"],[69,81,168,22],[69,82,168,23,"getAllResponseHeaders"],[69,103,168,44],[69,104,168,45],[69,105,168,46],[69,107,169,18,"_this"],[69,112,170,16],[69,113,170,17],[70,14,171,14],[71,12,172,12],[72,12,173,12],[72,16,173,16,"_this"],[72,21,173,20],[72,22,173,21,"readyState"],[72,32,173,31],[72,37,173,36,"_this"],[72,42,173,40],[72,43,173,41,"DONE"],[72,47,173,45],[72,49,173,47],[73,14,174,14],[73,18,174,18,"responseCallback"],[73,34,174,34],[73,36,174,36],[74,16,175,16,"responseCallback"],[74,32,175,32],[74,33,176,18,"_this"],[74,38,176,22],[74,39,176,23,"status"],[74,45,176,29],[74,47,177,18,"_this"],[74,52,177,22],[74,53,177,23,"timeout"],[74,60,177,30],[74,62,178,18,"_this"],[74,67,178,22],[74,68,178,23,"response"],[74,76,178,31],[74,78,179,18,"_this"],[74,83,179,22],[74,84,179,23,"responseURL"],[74,95,179,34],[74,97,180,18,"_this"],[74,102,180,22],[74,103,180,23,"responseType"],[74,115,180,35],[74,117,181,18,"_this"],[74,122,182,16],[74,123,182,17],[75,14,183,14],[76,12,184,12],[77,10,185,10],[77,11,185,11],[77,13,186,10],[77,18,187,8],[77,19,187,9],[78,8,188,6],[79,8,189,6,"originalXHRSend"],[79,23,189,21],[79,24,189,22,"apply"],[79,29,189,27],[79,30,189,28],[79,34,189,32],[79,36,189,34,"arguments"],[79,45,189,43],[79,46,189,44],[80,6,190,4],[80,7,190,5],[81,6,191,4,"isInterceptorEnabled"],[81,27,191,24],[81,30,191,27],[81,34,191,31],[82,4,192,2],[82,5,192,3],[83,4,195,2,"disableInterception"],[83,23,195,21],[83,34,195,2,"disableInterception"],[83,53,195,21,"disableInterception"],[83,54,195,21],[83,56,195,24],[84,6,196,4],[84,10,196,8],[84,11,196,9,"isInterceptorEnabled"],[84,32,196,29],[84,34,196,31],[85,8,197,6],[86,6,198,4],[87,6,199,4,"isInterceptorEnabled"],[87,27,199,24],[87,30,199,27],[87,35,199,32],[88,6,201,4,"_$$_REQUIRE"],[88,17,201,4],[88,18,201,4,"_dependencyMap"],[88,32,201,4],[88,57,201,19,"prototype"],[88,66,201,28],[88,67,201,29,"send"],[88,71,201,33],[88,74,201,36,"originalXHRSend"],[88,89,201,51],[89,6,203,4,"_$$_REQUIRE"],[89,17,203,4],[89,18,203,4,"_dependencyMap"],[89,32,203,4],[89,57,203,19,"prototype"],[89,66,203,28],[89,67,203,29,"open"],[89,71,203,33],[89,74,203,36,"originalXHROpen"],[89,89,203,51],[90,6,205,4,"_$$_REQUIRE"],[90,17,205,4],[90,18,205,4,"_dependencyMap"],[90,32,205,4],[90,57,205,19,"prototype"],[90,66,205,28],[90,67,205,29,"setRequestHeader"],[90,83,205,45],[90,86,205,48,"originalXHRSetRequestHeader"],[90,113,205,75],[91,6,206,4,"responseCallback"],[91,22,206,20],[91,25,206,23],[91,29,206,27],[92,6,207,4,"openCallback"],[92,18,207,16],[92,21,207,19],[92,25,207,23],[93,6,208,4,"sendCallback"],[93,18,208,16],[93,21,208,19],[93,25,208,23],[94,6,209,4,"headerReceivedCallback"],[94,28,209,26],[94,31,209,29],[94,35,209,33],[95,6,210,4,"requestHeaderCallback"],[95,27,210,25],[95,30,210,28],[95,34,210,32],[96,4,211,2],[97,2,212,0],[97,3,212,1],[98,2,214,0,"module"],[98,8,214,6],[98,9,214,7,"exports"],[98,16,214,14],[98,19,214,17,"XHRInterceptor"],[98,33,214,31],[99,0,214,32],[99,3]],"functionMap":{"names":["<global>","setOpenCallback","setSendCallback","setHeaderReceivedCallback","setResponseCallback","setRequestHeaderCallback","isInterceptorEnabled","enableInterception","XMLHttpRequest.prototype.open","XMLHttpRequest.prototype.setRequestHeader","XMLHttpRequest.prototype.send","addEventListener$argument_1","disableInterception"],"mappings":"AAA;ECwE;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EME;GNE;EOE;oCCQ;KDK;gDEM;KFQ;oCGM;UCO;WDoC;KHK;GPE;EYG;GZgB"}},"type":"js/module"}]}