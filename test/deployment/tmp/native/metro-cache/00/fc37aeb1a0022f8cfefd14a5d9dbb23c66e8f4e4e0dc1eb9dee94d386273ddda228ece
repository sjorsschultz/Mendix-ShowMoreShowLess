{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":2348}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":43,"index":43}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":508},"end":{"line":15,"column":53,"index":561}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":440},"end":{"line":14,"column":67,"index":507}},{"start":{"line":14,"column":0,"index":440},"end":{"line":14,"column":67,"index":507}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":340},"end":{"line":12,"column":52,"index":392}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo="}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":393},"end":{"line":13,"column":46,"index":439}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE="}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":238},"end":{"line":10,"column":50,"index":288}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0="}},{"name":"./updateHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":289},"end":{"line":11,"column":50,"index":339}}],"key":"lArlpaD/5d+RB4jQyU++60NVCc0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDetectorUpdater = useDetectorUpdater;\n  var _react = _$$_REQUIRE(_dependencyMap[1], \"react\");\n  var _findNodeHandle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../../../findNodeHandle\"));\n  // Returns a function that's responsible for updating the attached gestures\n  // If the view has changed, it will reattach the handlers to the new view\n  // If the view remains the same, it will update the handlers with the new config\n  function useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n    var forceRender = (0, _$$_REQUIRE(_dependencyMap[3], \"./utils\").useForceRender)();\n    var updateAttachedGestures = (0, _react.useCallback)(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    function (skipConfigUpdate) {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      var viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      var didUnderlyingViewChange = viewTag !== state.previousViewTag;\n      if (didUnderlyingViewChange || (0, _$$_REQUIRE(_dependencyMap[4], \"./needsToReattach\").needsToReattach)(preparedGesture, gesturesToAttach)) {\n        (0, _$$_REQUIRE(_dependencyMap[3], \"./utils\").validateDetectorChildren)(state.viewRef);\n        (0, _$$_REQUIRE(_dependencyMap[5], \"./dropHandlers\").dropHandlers)(preparedGesture);\n        (0, _$$_REQUIRE(_dependencyMap[6], \"./attachHandlers\").attachHandlers)({\n          preparedGesture: preparedGesture,\n          gestureConfig: gestureConfig,\n          gesturesToAttach: gesturesToAttach,\n          webEventHandlersRef: webEventHandlersRef,\n          viewTag: viewTag\n        });\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        (0, _$$_REQUIRE(_dependencyMap[7], \"./updateHandlers\").updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n    return updateAttachedGestures;\n  }\n});","lineCount":41,"map":[[7,2,1,0],[7,6,1,0,"_react"],[7,12,1,0],[7,15,1,0,"_$$_REQUIRE"],[7,26,1,0],[7,27,1,0,"_dependencyMap"],[7,41,1,0],[8,2,15,0],[8,6,15,0,"_findNodeHandle"],[8,21,15,0],[8,24,15,0,"_interopRequireDefault"],[8,46,15,0],[8,47,15,0,"_$$_REQUIRE"],[8,58,15,0],[8,59,15,0,"_dependencyMap"],[8,73,15,0],[9,2,17,0],[10,2,18,0],[11,2,19,0],[12,2,20,7],[12,11,20,16,"useDetectorUpdater"],[12,29,20,34,"useDetectorUpdater"],[12,30,21,2,"state"],[12,35,21,29],[12,37,22,2,"preparedGesture"],[12,52,22,39],[12,54,23,2,"gesturesToAttach"],[12,70,23,33],[12,72,24,2,"gestureConfig"],[12,85,24,46],[12,87,25,2,"webEventHandlersRef"],[12,106,25,55],[12,108,26,2],[13,4,27,2],[13,8,27,8,"forceRender"],[13,19,27,19],[13,22,27,22],[13,26,27,22,"useForceRender"],[13,56,27,22],[13,57,27,22,"useForceRender"],[13,82,27,36],[13,84,27,37],[13,85,27,38],[14,4,28,2],[14,8,28,8,"updateAttachedGestures"],[14,30,28,30],[14,33,28,33],[14,37,28,33,"useCallback"],[14,55,28,44],[15,4,29,4],[16,4,30,4],[16,14,30,5,"skipConfigUpdate"],[16,30,30,31],[16,32,30,36],[17,6,31,6],[18,6,32,6],[18,10,32,12,"viewTag"],[18,17,32,19],[18,20,32,22],[18,24,32,22,"findNodeHandle"],[18,47,32,36],[18,49,32,37,"state"],[18,54,32,42],[18,55,32,43,"viewRef"],[18,62,32,50],[18,63,32,61],[19,6,33,6],[19,10,33,12,"didUnderlyingViewChange"],[19,33,33,35],[19,36,33,38,"viewTag"],[19,43,33,45],[19,48,33,50,"state"],[19,53,33,55],[19,54,33,56,"previousViewTag"],[19,69,33,71],[20,6,35,6],[20,10,36,8,"didUnderlyingViewChange"],[20,33,36,31],[20,37,37,8],[20,41,37,8,"needsToReattach"],[20,71,37,8],[20,72,37,8,"needsToReattach"],[20,108,37,23],[20,110,37,24,"preparedGesture"],[20,125,37,39],[20,127,37,41,"gesturesToAttach"],[20,143,37,57],[20,144,37,58],[20,146,38,8],[21,8,39,8],[21,12,39,8,"validateDetectorChildren"],[21,42,39,8],[21,43,39,8,"validateDetectorChildren"],[21,78,39,32],[21,80,39,33,"state"],[21,85,39,38],[21,86,39,39,"viewRef"],[21,93,39,46],[21,94,39,47],[22,8,40,8],[22,12,40,8,"dropHandlers"],[22,42,40,8],[22,43,40,8,"dropHandlers"],[22,73,40,20],[22,75,40,21,"preparedGesture"],[22,90,40,36],[22,91,40,37],[23,8,41,8],[23,12,41,8,"attachHandlers"],[23,42,41,8],[23,43,41,8,"attachHandlers"],[23,77,41,22],[23,79,41,23],[24,10,42,10,"preparedGesture"],[24,25,42,25],[24,27,42,10,"preparedGesture"],[24,42,42,25],[25,10,43,10,"gestureConfig"],[25,23,43,23],[25,25,43,10,"gestureConfig"],[25,38,43,23],[26,10,44,10,"gesturesToAttach"],[26,26,44,26],[26,28,44,10,"gesturesToAttach"],[26,44,44,26],[27,10,45,10,"webEventHandlersRef"],[27,29,45,29],[27,31,45,10,"webEventHandlersRef"],[27,50,45,29],[28,10,46,10,"viewTag"],[28,17,46,17],[28,19,46,10,"viewTag"],[29,8,47,8],[29,9,47,9],[29,10,47,10],[30,8,49,8],[30,12,49,12,"didUnderlyingViewChange"],[30,35,49,35],[30,37,49,37],[31,10,50,10,"state"],[31,15,50,15],[31,16,50,16,"previousViewTag"],[31,31,50,31],[31,34,50,34,"viewTag"],[31,41,50,41],[32,10,51,10,"state"],[32,15,51,15],[32,16,51,16,"forceRebuildReanimatedEvent"],[32,43,51,43],[32,46,51,46],[32,50,51,50],[33,10,52,10,"forceRender"],[33,21,52,21],[33,22,52,22],[33,23,52,23],[34,8,53,8],[35,6,54,6],[35,7,54,7],[35,13,54,13],[35,17,54,17],[35,18,54,18,"skipConfigUpdate"],[35,34,54,34],[35,36,54,36],[36,8,55,8],[36,12,55,8,"updateHandlers"],[36,42,55,8],[36,43,55,8,"updateHandlers"],[36,77,55,22],[36,79,55,23,"preparedGesture"],[36,94,55,38],[36,96,55,40,"gestureConfig"],[36,109,55,53],[36,111,55,55,"gesturesToAttach"],[36,127,55,71],[36,128,55,72],[37,6,56,6],[38,4,57,4],[38,5,57,5],[38,7,58,4],[38,8,59,6,"forceRender"],[38,19,59,17],[38,21,60,6,"gestureConfig"],[38,34,60,19],[38,36,61,6,"gesturesToAttach"],[38,52,61,22],[38,54,62,6,"preparedGesture"],[38,69,62,21],[38,71,63,6,"state"],[38,76,63,11],[38,78,64,6,"webEventHandlersRef"],[38,97,64,25],[38,98,66,2],[38,99,66,3],[39,4,68,2],[39,11,68,9,"updateAttachedGestures"],[39,33,68,31],[40,2,69,0],[41,0,69,1],[41,3]],"functionMap":{"names":["<global>","useDetectorUpdater","updateAttachedGestures"],"mappings":"AAA;OCmB;ICU;KD2B;CDY"}},"type":"js/module"}]}