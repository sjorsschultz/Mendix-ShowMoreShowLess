{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isWorkletFunction = exports.SensorType = exports.ReduceMotion = exports.KeyboardState = exports.InterfaceOrientation = exports.IOSReferenceFrame = void 0;\n  var _worklet_2197229600445_init_data = {\n    code: \"function isWorkletFunction_commonTypesTs1(value){return typeof value==='function'&&!!value.__workletHash;}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-reanimated\\\\src\\\\commonTypes.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isWorkletFunction_commonTypesTs1\\\",\\\"value\\\",\\\"__workletHash\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-reanimated/src/commonTypes.ts\\\"],\\\"mappings\\\":\\\"AA6JO,SAAAA,gCAIoEA,CAAAC,KAAA,EAIzE,MACE,OAAO,CAAAA,KAAK,GAAK,UAAU,EAC3B,CAAC,CAAEA,KAAK,CAAwCC,aAAa,CAEjE\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  /**\n   * A value that can be used both on the [JavaScript\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#javascript-thread)\n   * and the [UI\n   * thread](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#ui-thread).\n   *\n   * Shared values are defined using\n   * [useSharedValue](https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue)\n   * hook. You access and modify shared values by their `.value` property.\n   */\n  /**\n   * Due to pattern of `MaybeSharedValue` type present in `AnimatedProps`\n   * (`AnimatedStyle`), contravariance breaks types for animated styles etc.\n   * Instead of refactoring the code with small chances of success, we just\n   * disable contravariance for `SharedValue` in this problematic case.\n   */\n  // The below type is used for HostObjects returned by the JSI API that don't have\n  // any accessible fields or methods but can carry data that is accessed from the\n  // c++ side. We add a field to the type to make it possible for typescript to recognize\n  // which JSI methods accept those types as arguments and to be able to correctly type\n  // check other methods that may use them. However, this field is not actually defined\n  // nor should be used for anything else as assigning any data to those objects will\n  // throw an error.\n  // In case of objects with depth or arrays of objects or arrays of arrays etc.\n  // we add this utility type that makes it a `SharaebleRef` of the outermost type.\n  /**\n   * This function allows you to determine if a given function is a worklet. It\n   * only works with Reanimated Babel plugin enabled. Unless you are doing\n   * something with internals of Reanimated you shouldn't need to use this\n   * function.\n   *\n   * ### Note\n   *\n   * Do not call it before the worklet is declared, as it will always return false\n   * then. E.g.:\n   *\n   * ```ts\n   * isWorkletFunction(myWorklet); // Will always return false.\n   *\n   * function myWorklet() {\n   *   'worklet';\n   * }\n   * ```\n   *\n   * ### Maintainer note\n   *\n   * This function works well on the JS thread performance-wise, since the JIT can\n   * inline it. However, on other threads it will not get optimized and we will\n   * get a function call overhead. We want to change it in the future, but it's\n   * not feasible at the moment.\n   */\n  var isWorkletFunction = exports.isWorkletFunction = function () {\n    var _e = [new global.Error(), 1, -27];\n    var isWorkletFunction = function isWorkletFunction(value) {\n      // Since host objects always return true for `in` operator, we have to use dot notation to check if the property exists.\n      // See https://github.com/facebook/hermes/blob/340726ef8cf666a7cce75bc60b02fa56b3e54560/lib/VM/JSObject.cpp#L1276.\n      return typeof value === 'function' && !!value.__workletHash;\n    };\n    isWorkletFunction.__closure = {};\n    isWorkletFunction.__workletHash = 2197229600445;\n    isWorkletFunction.__initData = _worklet_2197229600445_init_data;\n    isWorkletFunction.__stackDetails = _e;\n    return isWorkletFunction;\n  }();\n  var SensorType = exports.SensorType = /*#__PURE__*/function (SensorType) {\n    SensorType[SensorType[\"ACCELEROMETER\"] = 1] = \"ACCELEROMETER\";\n    SensorType[SensorType[\"GYROSCOPE\"] = 2] = \"GYROSCOPE\";\n    SensorType[SensorType[\"GRAVITY\"] = 3] = \"GRAVITY\";\n    SensorType[SensorType[\"MAGNETIC_FIELD\"] = 4] = \"MAGNETIC_FIELD\";\n    SensorType[SensorType[\"ROTATION\"] = 5] = \"ROTATION\";\n    return SensorType;\n  }({});\n  var IOSReferenceFrame = exports.IOSReferenceFrame = /*#__PURE__*/function (IOSReferenceFrame) {\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryZVertical\"] = 0] = \"XArbitraryZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XArbitraryCorrectedZVertical\"] = 1] = \"XArbitraryCorrectedZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XMagneticNorthZVertical\"] = 2] = \"XMagneticNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"XTrueNorthZVertical\"] = 3] = \"XTrueNorthZVertical\";\n    IOSReferenceFrame[IOSReferenceFrame[\"Auto\"] = 4] = \"Auto\";\n    return IOSReferenceFrame;\n  }({});\n  /**\n   * A function called upon animation completion. If the animation is cancelled,\n   * the callback will receive `false` as the argument; otherwise, it will receive\n   * `true`.\n   */\n  var InterfaceOrientation = exports.InterfaceOrientation = /*#__PURE__*/function (InterfaceOrientation) {\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_0\"] = 0] = \"ROTATION_0\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_90\"] = 90] = \"ROTATION_90\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_180\"] = 180] = \"ROTATION_180\";\n    InterfaceOrientation[InterfaceOrientation[\"ROTATION_270\"] = 270] = \"ROTATION_270\";\n    return InterfaceOrientation;\n  }({});\n  var KeyboardState = exports.KeyboardState = /*#__PURE__*/function (KeyboardState) {\n    KeyboardState[KeyboardState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    KeyboardState[KeyboardState[\"OPENING\"] = 1] = \"OPENING\";\n    KeyboardState[KeyboardState[\"OPEN\"] = 2] = \"OPEN\";\n    KeyboardState[KeyboardState[\"CLOSING\"] = 3] = \"CLOSING\";\n    KeyboardState[KeyboardState[\"CLOSED\"] = 4] = \"CLOSED\";\n    return KeyboardState;\n  }({});\n  /**\n   * @param x - A number representing X coordinate relative to the parent\n   *   component.\n   * @param y - A number representing Y coordinate relative to the parent\n   *   component.\n   * @param width - A number representing the width of the component.\n   * @param height - A number representing the height of the component.\n   * @param pageX - A number representing X coordinate relative to the screen.\n   * @param pageY - A number representing Y coordinate relative to the screen.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/measure#returns\n   */\n  /**\n   * @param System - If the `Reduce motion` accessibility setting is enabled on\n   *   the device, disable the animation. Otherwise, enable the animation.\n   * @param Always - Disable the animation.\n   * @param Never - Enable the animation.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/guides/accessibility\n   */\n  var ReduceMotion = exports.ReduceMotion = /*#__PURE__*/function (ReduceMotion) {\n    ReduceMotion[\"System\"] = \"system\";\n    ReduceMotion[\"Always\"] = \"always\";\n    ReduceMotion[\"Never\"] = \"never\";\n    return ReduceMotion;\n  }({}); // Ideally we want AnimatedStyle to not be generic, but there are\n  // so many dependencies on it being generic that it's not feasible at the moment.\n  /** @deprecated Please use {@link AnimatedStyle} type instead. */\n  /** @deprecated This type is no longer relevant. */\n});","lineCount":141,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"isWorkletFunction"],[7,27,1,13],[7,30,1,13,"exports"],[7,37,1,13],[7,38,1,13,"SensorType"],[7,48,1,13],[7,51,1,13,"exports"],[7,58,1,13],[7,59,1,13,"ReduceMotion"],[7,71,1,13],[7,74,1,13,"exports"],[7,81,1,13],[7,82,1,13,"KeyboardState"],[7,95,1,13],[7,98,1,13,"exports"],[7,105,1,13],[7,106,1,13,"InterfaceOrientation"],[7,126,1,13],[7,129,1,13,"exports"],[7,136,1,13],[7,137,1,13,"IOSReferenceFrame"],[7,154,1,13],[8,2,1,13],[8,6,1,13,"_worklet_2197229600445_init_data"],[8,38,1,13],[9,4,1,13,"code"],[9,8,1,13],[10,4,1,13,"location"],[10,12,1,13],[11,4,1,13,"sourceMap"],[11,13,1,13],[12,4,1,13,"version"],[12,11,1,13],[13,2,1,13],[14,2,16,0],[15,0,17,0],[16,0,18,0],[17,0,19,0],[18,0,20,0],[19,0,21,0],[20,0,22,0],[21,0,23,0],[22,0,24,0],[23,0,25,0],[24,2,38,0],[25,0,39,0],[26,0,40,0],[27,0,41,0],[28,0,42,0],[29,0,43,0],[30,2,62,0],[31,2,63,0],[32,2,64,0],[33,2,65,0],[34,2,66,0],[35,2,67,0],[36,2,68,0],[37,2,73,0],[38,2,74,0],[39,2,132,0],[40,0,133,0],[41,0,134,0],[42,0,135,0],[43,0,136,0],[44,0,137,0],[45,0,138,0],[46,0,139,0],[47,0,140,0],[48,0,141,0],[49,0,142,0],[50,0,143,0],[51,0,144,0],[52,0,145,0],[53,0,146,0],[54,0,147,0],[55,0,148,0],[56,0,149,0],[57,0,150,0],[58,0,151,0],[59,0,152,0],[60,0,153,0],[61,0,154,0],[62,0,155,0],[63,0,156,0],[64,0,157,0],[65,2,132,0],[65,6,132,0,"isWorkletFunction"],[65,23,132,0],[65,26,132,0,"exports"],[65,33,132,0],[65,34,132,0,"isWorkletFunction"],[65,51,132,0],[65,54,158,7],[66,4,158,7],[66,8,158,7,"_e"],[66,10,158,7],[66,18,158,7,"global"],[66,24,158,7],[66,25,158,7,"Error"],[66,30,158,7],[67,4,158,7],[67,8,158,7,"isWorkletFunction"],[67,25,158,7],[67,37,158,7,"isWorkletFunction"],[67,55,162,2,"value"],[67,60,162,16],[67,62,162,75],[68,6,164,2],[69,6,165,2],[70,6,166,2],[70,13,167,4],[70,20,167,11,"value"],[70,25,167,16],[70,30,167,21],[70,40,167,31],[70,44,168,4],[70,45,168,5],[70,46,168,7,"value"],[70,51,168,12],[70,52,168,52,"__workletHash"],[70,65,168,65],[71,4,170,0],[71,5,170,1],[72,4,170,1,"isWorkletFunction"],[72,21,170,1],[72,22,170,1,"__closure"],[72,31,170,1],[73,4,170,1,"isWorkletFunction"],[73,21,170,1],[73,22,170,1,"__workletHash"],[73,35,170,1],[74,4,170,1,"isWorkletFunction"],[74,21,170,1],[74,22,170,1,"__initData"],[74,32,170,1],[74,35,170,1,"_worklet_2197229600445_init_data"],[74,67,170,1],[75,4,170,1,"isWorkletFunction"],[75,21,170,1],[75,22,170,1,"__stackDetails"],[75,36,170,1],[75,39,170,1,"_e"],[75,41,170,1],[76,4,170,1],[76,11,170,1,"isWorkletFunction"],[76,28,170,1],[77,2,170,1],[77,3,158,7],[78,2,158,7],[78,6,228,12,"SensorType"],[78,16,228,22],[78,19,228,22,"exports"],[78,26,228,22],[78,27,228,22,"SensorType"],[78,37,228,22],[78,63,228,12,"SensorType"],[78,73,228,22],[79,4,228,12,"SensorType"],[79,14,228,22],[79,15,228,12,"SensorType"],[79,25,228,22],[80,4,228,12,"SensorType"],[80,14,228,22],[80,15,228,12,"SensorType"],[80,25,228,22],[81,4,228,12,"SensorType"],[81,14,228,22],[81,15,228,12,"SensorType"],[81,25,228,22],[82,4,228,12,"SensorType"],[82,14,228,22],[82,15,228,12,"SensorType"],[82,25,228,22],[83,4,228,12,"SensorType"],[83,14,228,22],[83,15,228,12,"SensorType"],[83,25,228,22],[84,4,228,22],[84,11,228,12,"SensorType"],[84,21,228,22],[85,2,228,22],[86,2,228,22],[86,6,235,12,"IOSReferenceFrame"],[86,23,235,29],[86,26,235,29,"exports"],[86,33,235,29],[86,34,235,29,"IOSReferenceFrame"],[86,51,235,29],[86,77,235,12,"IOSReferenceFrame"],[86,94,235,29],[87,4,235,12,"IOSReferenceFrame"],[87,21,235,29],[87,22,235,12,"IOSReferenceFrame"],[87,39,235,29],[88,4,235,12,"IOSReferenceFrame"],[88,21,235,29],[88,22,235,12,"IOSReferenceFrame"],[88,39,235,29],[89,4,235,12,"IOSReferenceFrame"],[89,21,235,29],[89,22,235,12,"IOSReferenceFrame"],[89,39,235,29],[90,4,235,12,"IOSReferenceFrame"],[90,21,235,29],[90,22,235,12,"IOSReferenceFrame"],[90,39,235,29],[91,4,235,12,"IOSReferenceFrame"],[91,21,235,29],[91,22,235,12,"IOSReferenceFrame"],[91,39,235,29],[92,4,235,29],[92,11,235,12,"IOSReferenceFrame"],[92,28,235,29],[93,2,235,29],[94,2,256,0],[95,0,257,0],[96,0,258,0],[97,0,259,0],[98,0,260,0],[99,2,256,0],[99,6,286,12,"InterfaceOrientation"],[99,26,286,32],[99,29,286,32,"exports"],[99,36,286,32],[99,37,286,32,"InterfaceOrientation"],[99,57,286,32],[99,83,286,12,"InterfaceOrientation"],[99,103,286,32],[100,4,286,12,"InterfaceOrientation"],[100,24,286,32],[100,25,286,12,"InterfaceOrientation"],[100,45,286,32],[101,4,286,12,"InterfaceOrientation"],[101,24,286,32],[101,25,286,12,"InterfaceOrientation"],[101,45,286,32],[102,4,286,12,"InterfaceOrientation"],[102,24,286,32],[102,25,286,12,"InterfaceOrientation"],[102,45,286,32],[103,4,286,12,"InterfaceOrientation"],[103,24,286,32],[103,25,286,12,"InterfaceOrientation"],[103,45,286,32],[104,4,286,32],[104,11,286,12,"InterfaceOrientation"],[104,31,286,32],[105,2,286,32],[106,2,286,32],[106,6,297,12,"KeyboardState"],[106,19,297,25],[106,22,297,25,"exports"],[106,29,297,25],[106,30,297,25,"KeyboardState"],[106,43,297,25],[106,69,297,12,"KeyboardState"],[106,82,297,25],[107,4,297,12,"KeyboardState"],[107,17,297,25],[107,18,297,12,"KeyboardState"],[107,31,297,25],[108,4,297,12,"KeyboardState"],[108,17,297,25],[108,18,297,12,"KeyboardState"],[108,31,297,25],[109,4,297,12,"KeyboardState"],[109,17,297,25],[109,18,297,12,"KeyboardState"],[109,31,297,25],[110,4,297,12,"KeyboardState"],[110,17,297,25],[110,18,297,12,"KeyboardState"],[110,31,297,25],[111,4,297,12,"KeyboardState"],[111,17,297,25],[111,18,297,12,"KeyboardState"],[111,31,297,25],[112,4,297,25],[112,11,297,12,"KeyboardState"],[112,24,297,25],[113,2,297,25],[114,2,310,0],[115,0,311,0],[116,0,312,0],[117,0,313,0],[118,0,314,0],[119,0,315,0],[120,0,316,0],[121,0,317,0],[122,0,318,0],[123,0,319,0],[124,0,320,0],[125,2,335,0],[126,0,336,0],[127,0,337,0],[128,0,338,0],[129,0,339,0],[130,0,340,0],[131,0,341,0],[132,2,335,0],[132,6,342,12,"ReduceMotion"],[132,18,342,24],[132,21,342,24,"exports"],[132,28,342,24],[132,29,342,24,"ReduceMotion"],[132,41,342,24],[132,67,342,12,"ReduceMotion"],[132,79,342,24],[133,4,342,12,"ReduceMotion"],[133,16,342,24],[134,4,342,12,"ReduceMotion"],[134,16,342,24],[135,4,342,12,"ReduceMotion"],[135,16,342,24],[136,4,342,24],[136,11,342,12,"ReduceMotion"],[136,23,342,24],[137,2,342,24],[137,9,377,0],[138,2,378,0],[139,2,387,0],[140,2,390,0],[141,0,390,0],[141,3]],"functionMap":{"names":["<global>","isWorkletFunction"],"mappings":"AAA;OC6J;CDY"}},"type":"js/module"}]}