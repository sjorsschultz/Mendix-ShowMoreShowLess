{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":160},"end":{"line":4,"column":34,"index":194}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s="}},{"name":"../../../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":56},"end":{"line":2,"column":55,"index":111}}],"key":"ZDu7aL2iuT3Od7iyX13y9sY9XZQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useMountReactions = useMountReactions;\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  function shouldUpdateDetector(relation, gesture) {\n    if (relation === undefined) {\n      return false;\n    }\n    for (var tag of (0, _$$_REQUIRE(_dependencyMap[1], \"../../utils\").transformIntoHandlerTags)(relation)) {\n      if (tag === gesture.handlerTag) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function useMountReactions(updateDetector, state) {\n    (0, _react.useEffect)(function () {\n      return _$$_REQUIRE(_dependencyMap[2], \"../../../mountRegistry\").MountRegistry.addMountListener(function (gesture) {\n        // At this point the ref in the gesture config should be updated, so we can check if one of the gestures\n        // set in a relation with the gesture got mounted. If so, we need to update the detector to propagate\n        // the changes to the native side.\n        for (var attachedGesture of state.attachedGestures) {\n          var blocksHandlers = attachedGesture.config.blocksHandlers;\n          var requireToFail = attachedGesture.config.requireToFail;\n          var simultaneousWith = attachedGesture.config.simultaneousWith;\n          if (shouldUpdateDetector(blocksHandlers, gesture) || shouldUpdateDetector(requireToFail, gesture) || shouldUpdateDetector(simultaneousWith, gesture)) {\n            updateDetector();\n\n            // We can safely return here, if any other gestures should be updated, they will be by the above call\n            return;\n          }\n        }\n      });\n    }, [updateDetector, state]);\n  }\n});","lineCount":38,"map":[[6,2,4,0],[6,6,4,0,"_react"],[6,12,4,0],[6,15,4,0,"_$$_REQUIRE"],[6,26,4,0],[6,27,4,0,"_dependencyMap"],[6,41,4,0],[7,2,7,0],[7,11,7,9,"shouldUpdateDetector"],[7,31,7,29,"shouldUpdateDetector"],[7,32,8,2,"relation"],[7,40,8,36],[7,42,9,2,"gesture"],[7,49,9,33],[7,51,10,2],[8,4,11,2],[8,8,11,6,"relation"],[8,16,11,14],[8,21,11,19,"undefined"],[8,30,11,28],[8,32,11,30],[9,6,12,4],[9,13,12,11],[9,18,12,16],[10,4,13,2],[11,4,15,2],[11,9,15,7],[11,13,15,13,"tag"],[11,16,15,16],[11,20,15,20],[11,24,15,20,"transformIntoHandlerTags"],[11,54,15,20],[11,55,15,20,"transformIntoHandlerTags"],[11,94,15,44],[11,96,15,45,"relation"],[11,104,15,53],[11,105,15,54],[11,107,15,56],[12,6,16,4],[12,10,16,8,"tag"],[12,13,16,11],[12,18,16,16,"gesture"],[12,25,16,23],[12,26,16,24,"handlerTag"],[12,36,16,34],[12,38,16,36],[13,8,17,6],[13,15,17,13],[13,19,17,17],[14,6,18,4],[15,4,19,2],[16,4,21,2],[16,11,21,9],[16,16,21,14],[17,2,22,0],[18,2,24,7],[18,11,24,16,"useMountReactions"],[18,28,24,33,"useMountReactions"],[18,29,25,2,"updateDetector"],[18,43,25,28],[18,45,26,2,"state"],[18,50,26,29],[18,52,27,2],[19,4,28,2],[19,8,28,2,"useEffect"],[19,24,28,11],[19,26,28,12],[19,38,28,18],[20,6,29,4],[20,13,29,11,"MountRegistry"],[20,43,29,11],[20,44,29,11,"MountRegistry"],[20,83,29,24],[20,84,29,25,"addMountListener"],[20,100,29,41],[20,101,29,42],[20,111,29,43,"gesture"],[20,118,29,50],[20,120,29,55],[21,8,30,6],[22,8,31,6],[23,8,32,6],[24,8,33,6],[24,13,33,11],[24,17,33,17,"attachedGesture"],[24,32,33,32],[24,36,33,36,"state"],[24,41,33,41],[24,42,33,42,"attachedGestures"],[24,58,33,58],[24,60,33,60],[25,10,34,8],[25,14,34,14,"blocksHandlers"],[25,28,34,28],[25,31,34,31,"attachedGesture"],[25,46,34,46],[25,47,34,47,"config"],[25,53,34,53],[25,54,34,54,"blocksHandlers"],[25,68,34,68],[26,10,35,8],[26,14,35,14,"requireToFail"],[26,27,35,27],[26,30,35,30,"attachedGesture"],[26,45,35,45],[26,46,35,46,"config"],[26,52,35,52],[26,53,35,53,"requireToFail"],[26,66,35,66],[27,10,36,8],[27,14,36,14,"simultaneousWith"],[27,30,36,30],[27,33,36,33,"attachedGesture"],[27,48,36,48],[27,49,36,49,"config"],[27,55,36,55],[27,56,36,56,"simultaneousWith"],[27,72,36,72],[28,10,38,8],[28,14,39,10,"shouldUpdateDetector"],[28,34,39,30],[28,35,39,31,"blocksHandlers"],[28,49,39,45],[28,51,39,47,"gesture"],[28,58,39,54],[28,59,39,55],[28,63,40,10,"shouldUpdateDetector"],[28,83,40,30],[28,84,40,31,"requireToFail"],[28,97,40,44],[28,99,40,46,"gesture"],[28,106,40,53],[28,107,40,54],[28,111,41,10,"shouldUpdateDetector"],[28,131,41,30],[28,132,41,31,"simultaneousWith"],[28,148,41,47],[28,150,41,49,"gesture"],[28,157,41,56],[28,158,41,57],[28,160,42,10],[29,12,43,10,"updateDetector"],[29,26,43,24],[29,27,43,25],[29,28,43,26],[31,12,45,10],[32,12,46,10],[33,10,47,8],[34,8,48,6],[35,6,49,4],[35,7,49,5],[35,8,49,6],[36,4,50,2],[36,5,50,3],[36,7,50,5],[36,8,50,6,"updateDetector"],[36,22,50,20],[36,24,50,22,"state"],[36,29,50,27],[36,30,50,28],[36,31,50,29],[37,2,51,0],[38,0,51,1],[38,3]],"functionMap":{"names":["<global>","shouldUpdateDetector","useMountReactions","useEffect$argument_0","MountRegistry.addMountListener$argument_0"],"mappings":"AAA;ACM;CDe;OEE;YCI;0CCC;KDoB;GDC;CFC"}},"type":"js/module"}]}