{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":228,"column":44,"index":8737}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":228,"column":44,"index":8737}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"query-string","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":42,"index":167},"end":{"line":7,"column":65,"index":190}}],"key":"CQ4f6+ZdkmuRCkqw6zIINc/cka0="}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":26,"index":275},"end":{"line":9,"column":60,"index":309}}],"key":"XXyPbgw7BQ4s5X/Hs9Zl3De2oag="}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}},{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}},{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}}],"key":"x373vX1U7UCQUMl5g8AN3pEqZu0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"query-string\"));\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  var _getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return _getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = function getNormalizedConfigs(options) {\n    if (!(options != null && options.screens)) return {};\n    var cached = cachedNormalizedConfigs.get(options == null ? void 0 : options.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _$$_REQUIRE(_dependencyMap[3], \"./validatePathConfig.js\").validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = _getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function _loop2() {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _currentOptions$route, _parts2;\n          var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(function (_ref4) {\n            var _ref5 = _slicedToArray(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n          }));\n          if ((_parts2 = parts) != null && _parts2.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            var _parts3;\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = Object.assign({}, currentParams);\n            (_parts3 = parts\n            // eslint-disable-next-line no-loop-func\n            ) == null || _parts3.forEach(function (_ref6) {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        var _parts;\n        path += (_parts = parts) == null ? void 0 : _parts.map(function (_ref) {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, function (char) {\n              return encodeURIComponent(char);\n            });\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(function (_ref2) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options != null && options.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = function createConfigItem(config, parentParts) {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts4 = (0, _$$_REQUIRE(_dependencyMap[4], \"./getPatternParts.js\").getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [].concat(_toConsumableArray(parentParts), _toConsumableArray(_parts4))\n        };\n      }\n      return {\n        parts: _parts4\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [].concat(_toConsumableArray(parentParts || []), _toConsumableArray(config.path ? (0, _$$_REQUIRE(_dependencyMap[4], \"./getPatternParts.js\").getPatternParts)(config.path) : [])) : config.path ? (0, _$$_REQUIRE(_dependencyMap[4], \"./getPatternParts.js\").getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts: parts,\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n  var createNormalizedConfigs = function createNormalizedConfigs(options, parts) {\n    return Object.fromEntries(Object.entries(options).map(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        name = _ref8[0],\n        c = _ref8[1];\n      var result = createConfigItem(c, parts);\n      return [name, result];\n    }));\n  };\n});","lineCount":274,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13],[5,6,1,13,"_slicedToArray"],[5,20,1,13],[5,23,1,13,"_$$_REQUIRE"],[5,34,1,13],[5,35,1,13,"_dependencyMap"],[5,49,1,13],[6,2,3,0,"Object"],[6,8,3,6],[6,9,3,7,"defineProperty"],[6,23,3,21],[6,24,3,22,"exports"],[6,31,3,29],[6,33,3,31],[6,45,3,43],[6,47,3,45],[7,4,4,2,"value"],[7,9,4,7],[7,11,4,9],[8,2,5,0],[8,3,5,1],[8,4,5,2],[9,2,6,0,"exports"],[9,9,6,7],[9,10,6,8,"getPathFromState"],[9,26,6,24],[9,29,6,27,"getPathFromState"],[9,45,6,43],[10,2,7,0],[10,6,7,4,"queryString"],[10,17,7,15],[10,20,7,18,"_interopRequireWildcard"],[10,43,7,41],[10,44,7,42,"require"],[10,55,7,49],[10,56,7,49,"_dependencyMap"],[10,70,7,49],[10,89,7,64],[10,90,7,65],[10,91,7,66],[11,2,10,0],[11,11,10,9,"_getRequireWildcardCache"],[11,35,10,33,"_getRequireWildcardCache"],[11,36,10,34,"e"],[11,37,10,35],[11,39,10,37],[12,4,10,39],[12,8,10,43],[12,18,10,53],[12,22,10,57],[12,29,10,64,"WeakMap"],[12,36,10,71],[12,38,10,73],[12,45,10,80],[12,49,10,84],[13,4,10,86],[13,8,10,90,"r"],[13,9,10,91],[13,12,10,94],[13,16,10,98,"WeakMap"],[13,23,10,105],[13,24,10,106],[13,25,10,107],[14,6,10,109,"t"],[14,7,10,110],[14,10,10,113],[14,14,10,117,"WeakMap"],[14,21,10,124],[14,22,10,125],[14,23,10,126],[15,4,10,128],[15,11,10,135],[15,12,10,136,"_getRequireWildcardCache"],[15,36,10,160],[15,39,10,163],[15,48,10,136,"_getRequireWildcardCache"],[15,72,10,160,"_getRequireWildcardCache"],[15,73,10,173,"e"],[15,74,10,174],[15,76,10,176],[16,6,10,178],[16,13,10,185,"e"],[16,14,10,186],[16,17,10,189,"t"],[16,18,10,190],[16,21,10,193,"r"],[16,22,10,194],[17,4,10,196],[17,5,10,197],[17,7,10,199,"e"],[17,8,10,200],[17,9,10,201],[18,2,10,203],[19,2,11,0],[19,11,11,9,"_interopRequireWildcard"],[19,34,11,32,"_interopRequireWildcard"],[19,35,11,33,"e"],[19,36,11,34],[19,38,11,36,"r"],[19,39,11,37],[19,41,11,39],[20,4,11,41],[20,8,11,45],[20,9,11,46,"r"],[20,10,11,47],[20,14,11,51,"e"],[20,15,11,52],[20,19,11,56,"e"],[20,20,11,57],[20,21,11,58,"__esModule"],[20,31,11,68],[20,33,11,70],[20,40,11,77,"e"],[20,41,11,78],[21,4,11,80],[21,8,11,84],[21,12,11,88],[21,17,11,93,"e"],[21,18,11,94],[21,22,11,98],[21,30,11,106],[21,34,11,110],[21,41,11,117,"e"],[21,42,11,118],[21,46,11,122],[21,56,11,132],[21,60,11,136],[21,67,11,143,"e"],[21,68,11,144],[21,70,11,146],[21,77,11,153],[22,6,11,155,"default"],[22,13,11,162],[22,15,11,164,"e"],[23,4,11,166],[23,5,11,167],[24,4,11,169],[24,8,11,173,"t"],[24,9,11,174],[24,12,11,177,"_getRequireWildcardCache"],[24,36,11,201],[24,37,11,202,"r"],[24,38,11,203],[24,39,11,204],[25,4,11,206],[25,8,11,210,"t"],[25,9,11,211],[25,13,11,215,"t"],[25,14,11,216],[25,15,11,217,"has"],[25,18,11,220],[25,19,11,221,"e"],[25,20,11,222],[25,21,11,223],[25,23,11,225],[25,30,11,232,"t"],[25,31,11,233],[25,32,11,234,"get"],[25,35,11,237],[25,36,11,238,"e"],[25,37,11,239],[25,38,11,240],[26,4,11,242],[26,8,11,246,"n"],[26,9,11,247],[26,12,11,250],[27,8,11,252,"__proto__"],[27,17,11,261],[27,19,11,263],[28,6,11,268],[28,7,11,269],[29,6,11,271,"a"],[29,7,11,272],[29,10,11,275,"Object"],[29,16,11,281],[29,17,11,282,"defineProperty"],[29,31,11,296],[29,35,11,300,"Object"],[29,41,11,306],[29,42,11,307,"getOwnPropertyDescriptor"],[29,66,11,331],[30,4,11,333],[30,9,11,338],[30,13,11,342,"u"],[30,14,11,343],[30,18,11,347,"e"],[30,19,11,348],[30,21,11,350],[30,25,11,354],[30,34,11,363],[30,39,11,368,"u"],[30,40,11,369],[30,44,11,373],[30,45,11,374],[30,46,11,375],[30,47,11,376,"hasOwnProperty"],[30,61,11,390],[30,62,11,391,"call"],[30,66,11,395],[30,67,11,396,"e"],[30,68,11,397],[30,70,11,399,"u"],[30,71,11,400],[30,72,11,401],[30,74,11,403],[31,6,11,405],[31,10,11,409,"i"],[31,11,11,410],[31,14,11,413,"a"],[31,15,11,414],[31,18,11,417,"Object"],[31,24,11,423],[31,25,11,424,"getOwnPropertyDescriptor"],[31,49,11,448],[31,50,11,449,"e"],[31,51,11,450],[31,53,11,452,"u"],[31,54,11,453],[31,55,11,454],[31,58,11,457],[31,62,11,461],[32,6,11,463,"i"],[32,7,11,464],[32,12,11,469,"i"],[32,13,11,470],[32,14,11,471,"get"],[32,17,11,474],[32,21,11,478,"i"],[32,22,11,479],[32,23,11,480,"set"],[32,26,11,483],[32,27,11,484],[32,30,11,487,"Object"],[32,36,11,493],[32,37,11,494,"defineProperty"],[32,51,11,508],[32,52,11,509,"n"],[32,53,11,510],[32,55,11,512,"u"],[32,56,11,513],[32,58,11,515,"i"],[32,59,11,516],[32,60,11,517],[32,63,11,520,"n"],[32,64,11,521],[32,65,11,522,"u"],[32,66,11,523],[32,67,11,524],[32,70,11,527,"e"],[32,71,11,528],[32,72,11,529,"u"],[32,73,11,530],[32,74,11,531],[33,4,11,533],[34,4,11,535],[34,11,11,542,"n"],[34,12,11,543],[34,13,11,544,"default"],[34,20,11,551],[34,23,11,554,"e"],[34,24,11,555],[34,26,11,557,"t"],[34,27,11,558],[34,31,11,562,"t"],[34,32,11,563],[34,33,11,564,"set"],[34,36,11,567],[34,37,11,568,"e"],[34,38,11,569],[34,40,11,571,"n"],[34,41,11,572],[34,42,11,573],[34,44,11,575,"n"],[34,45,11,576],[35,2,11,578],[36,2,12,0],[36,6,12,6,"getActiveRoute"],[36,21,12,20],[36,24,12,23],[36,33,12,6,"getActiveRoute"],[36,47,12,20,"getActiveRoute"],[36,48,12,23,"state"],[36,53,12,28],[36,55,12,32],[37,4,13,2],[37,8,13,8,"route"],[37,13,13,13],[37,16,13,16],[37,23,13,23,"state"],[37,28,13,28],[37,29,13,29,"index"],[37,34,13,34],[37,39,13,39],[37,47,13,47],[37,50,13,50,"state"],[37,55,13,55],[37,56,13,56,"routes"],[37,62,13,62],[37,63,13,63,"state"],[37,68,13,68],[37,69,13,69,"index"],[37,74,13,74],[37,75,13,75],[37,78,13,78,"state"],[37,83,13,83],[37,84,13,84,"routes"],[37,90,13,90],[37,91,13,91,"state"],[37,96,13,96],[37,97,13,97,"routes"],[37,103,13,103],[37,104,13,104,"length"],[37,110,13,110],[37,113,13,113],[37,114,13,114],[37,115,13,115],[38,4,14,2],[38,8,14,6,"route"],[38,13,14,11],[38,14,14,12,"state"],[38,19,14,17],[38,21,14,19],[39,6,15,4],[39,13,15,11,"getActiveRoute"],[39,28,15,25],[39,29,15,26,"route"],[39,34,15,31],[39,35,15,32,"state"],[39,40,15,37],[39,41,15,38],[40,4,16,2],[41,4,17,2],[41,11,17,9,"route"],[41,16,17,14],[42,2,18,0],[42,3,18,1],[43,2,19,0],[43,6,19,6,"cachedNormalizedConfigs"],[43,29,19,29],[43,32,19,32],[43,36,19,36,"WeakMap"],[43,43,19,43],[43,44,19,44],[43,45,19,45],[44,2,20,0],[44,6,20,6,"getNormalizedConfigs"],[44,26,20,26],[44,29,20,29],[44,38,20,6,"getNormalizedConfigs"],[44,58,20,26,"getNormalizedConfigs"],[44,59,20,29,"options"],[44,66,20,36],[44,68,20,40],[45,4,21,2],[45,8,21,6],[45,10,21,7,"options"],[45,17,21,14],[45,29,21,7,"options"],[45,36,21,14],[45,37,21,16,"screens"],[45,44,21,23],[45,47,21,25],[45,54,21,32],[45,55,21,33],[45,56,21,34],[46,4,22,2],[46,8,22,8,"cached"],[46,14,22,14],[46,17,22,17,"cachedNormalizedConfigs"],[46,40,22,40],[46,41,22,41,"get"],[46,44,22,44],[46,45,22,45,"options"],[46,52,22,52],[46,72,22,45,"options"],[46,79,22,52],[46,80,22,54,"screens"],[46,87,22,61],[46,88,22,62],[47,4,23,2],[47,8,23,6,"cached"],[47,14,23,12],[47,16,23,14],[47,23,23,21,"cached"],[47,29,23,27],[48,4,24,2],[48,8,24,8,"normalizedConfigs"],[48,25,24,25],[48,28,24,28,"createNormalizedConfigs"],[48,51,24,51],[48,52,24,52,"options"],[48,59,24,59],[48,60,24,60,"screens"],[48,67,24,67],[48,68,24,68],[49,4,25,2,"cachedNormalizedConfigs"],[49,27,25,25],[49,28,25,26,"set"],[49,31,25,29],[49,32,25,30,"options"],[49,39,25,37],[49,40,25,38,"screens"],[49,47,25,45],[49,49,25,47,"normalizedConfigs"],[49,66,25,64],[49,67,25,65],[50,4,26,2],[50,11,26,9,"normalizedConfigs"],[50,28,26,26],[51,2,27,0],[51,3,27,1],[53,2,29,0],[54,0,30,0],[55,0,31,0],[56,0,32,0],[57,0,33,0],[58,0,34,0],[59,0,35,0],[60,0,36,0],[61,0,37,0],[62,0,38,0],[63,0,39,0],[64,0,40,0],[65,0,41,0],[66,0,42,0],[67,0,43,0],[68,0,44,0],[69,0,45,0],[70,0,46,0],[71,0,47,0],[72,0,48,0],[73,0,49,0],[74,0,50,0],[75,0,51,0],[76,0,52,0],[77,0,53,0],[78,0,54,0],[79,0,55,0],[80,0,56,0],[81,0,57,0],[82,2,58,0],[82,11,58,9,"getPathFromState"],[82,27,58,25,"getPathFromState"],[82,28,58,26,"state"],[82,33,58,31],[82,35,58,33,"options"],[82,42,58,40],[82,44,58,42],[83,4,59,2],[83,8,59,6,"state"],[83,13,59,11],[83,17,59,15],[83,21,59,19],[83,23,59,21],[84,6,60,4],[84,12,60,10,"Error"],[84,17,60,15],[84,18,60,16],[84,26,60,24,"String"],[84,32,60,30],[84,33,60,31,"state"],[84,38,60,36],[84,39,60,37],[84,104,60,102],[84,105,60,103],[85,4,61,2],[86,4,62,2],[86,8,62,6,"options"],[86,15,62,13],[86,17,62,15],[87,6,63,4],[87,7,63,5],[87,8,63,6],[87,10,63,8,"_$$_REQUIRE"],[87,21,63,8],[87,22,63,8,"_dependencyMap"],[87,36,63,8],[87,68,63,28,"validatePathConfig"],[87,86,63,46],[87,88,63,48,"options"],[87,95,63,55],[87,96,63,56],[88,4,64,2],[89,4,65,2],[89,8,65,8,"configs"],[89,15,65,15],[89,18,65,18,"getNormalizedConfigs"],[89,38,65,38],[89,39,65,39,"options"],[89,46,65,46],[89,47,65,47],[90,4,66,2],[90,8,66,6,"path"],[90,12,66,10],[90,15,66,13],[90,18,66,16],[91,4,67,2],[91,8,67,6,"current"],[91,15,67,13],[91,18,67,16,"state"],[91,23,67,21],[92,4,68,2],[92,8,68,8,"allParams"],[92,17,68,17],[92,20,68,20],[92,21,68,21],[92,22,68,22],[93,4,68,23],[93,8,68,23,"_loop"],[93,13,68,23],[93,25,68,23,"_loop"],[93,31,68,23],[93,33,69,18],[94,6,70,4],[94,10,70,8,"index"],[94,15,70,13],[94,18,70,16],[94,25,70,23,"current"],[94,32,70,30],[94,33,70,31,"index"],[94,38,70,36],[94,43,70,41],[94,51,70,49],[94,54,70,52,"current"],[94,61,70,59],[94,62,70,60,"index"],[94,67,70,65],[94,70,70,68],[94,71,70,69],[95,6,71,4],[95,10,71,8,"route"],[95,15,71,13],[95,18,71,16,"current"],[95,25,71,23],[95,26,71,24,"routes"],[95,32,71,30],[95,33,71,31,"index"],[95,38,71,36],[95,39,71,37],[96,6,72,4],[96,10,72,8,"parts"],[96,15,72,13],[97,6,73,4],[97,10,73,8,"focusedParams"],[97,23,73,21],[98,6,74,4],[98,10,74,8,"currentOptions"],[98,24,74,22],[98,27,74,25,"configs"],[98,34,74,32],[99,6,75,4],[99,10,75,10,"focusedRoute"],[99,22,75,22],[99,25,75,25,"getActiveRoute"],[99,40,75,39],[99,41,75,40,"state"],[99,46,75,45],[99,47,75,46],[101,6,77,4],[102,6,78,4],[102,10,78,10,"nestedRouteNames"],[102,26,78,26],[102,29,78,29],[102,31,78,31],[103,6,79,4],[103,10,79,8,"hasNext"],[103,17,79,15],[103,20,79,18],[103,24,79,22],[104,6,79,23],[104,10,79,23,"_loop2"],[104,16,79,23],[104,28,79,23,"_loop2"],[104,35,79,23],[104,37,80,52],[105,8,81,6,"parts"],[105,13,81,11],[105,16,81,14,"currentOptions"],[105,30,81,28],[105,31,81,29,"route"],[105,36,81,34],[105,37,81,35,"name"],[105,41,81,39],[105,42,81,40],[105,43,81,41,"parts"],[105,48,81,46],[106,8,82,6,"nestedRouteNames"],[106,24,82,22],[106,25,82,23,"push"],[106,29,82,27],[106,30,82,28,"route"],[106,35,82,33],[106,36,82,34,"name"],[106,40,82,38],[106,41,82,39],[107,8,83,6],[107,12,83,10,"route"],[107,17,83,15],[107,18,83,16,"params"],[107,24,83,22],[107,26,83,24],[108,10,83,24],[108,14,83,24,"_currentOptions$route"],[108,35,83,24],[108,37,83,24,"_parts2"],[108,44,83,24],[109,10,84,8],[109,14,84,14,"stringify"],[109,23,84,23],[109,27,84,23,"_currentOptions$route"],[109,48,84,23],[109,51,84,26,"currentOptions"],[109,65,84,40],[109,66,84,41,"route"],[109,71,84,46],[109,72,84,47,"name"],[109,76,84,51],[109,77,84,52],[109,98,84,26,"_currentOptions$route"],[109,119,84,26],[109,120,84,54,"stringify"],[109,129,84,63],[110,10,85,8],[110,14,85,14,"currentParams"],[110,27,85,27],[110,30,85,30,"Object"],[110,36,85,36],[110,37,85,37,"fromEntries"],[110,48,85,48],[110,49,85,49,"Object"],[110,55,85,55],[110,56,85,56,"entries"],[110,63,85,63],[110,64,85,64,"route"],[110,69,85,69],[110,70,85,70,"params"],[110,76,85,76],[110,77,85,77],[110,78,85,78,"map"],[110,81,85,81],[110,82,85,82],[110,92,85,82,"_ref4"],[110,97,85,82],[111,12,85,82],[111,16,85,82,"_ref5"],[111,21,85,82],[111,24,85,82,"_slicedToArray"],[111,38,85,82],[111,39,85,82,"_ref4"],[111,44,85,82],[112,14,85,84,"key"],[112,17,85,87],[112,20,85,87,"_ref5"],[112,25,85,87],[113,14,85,89,"value"],[113,19,85,94],[113,22,85,94,"_ref5"],[113,27,85,94],[114,12,85,94],[114,19,85,100],[114,20,85,101,"key"],[114,23,85,104],[114,25,85,106,"stringify"],[114,34,85,115],[114,46,85,106,"stringify"],[114,55,85,115],[114,56,85,118,"key"],[114,59,85,121],[114,60,85,122],[114,63,85,125,"stringify"],[114,72,85,134],[114,73,85,135,"key"],[114,76,85,138],[114,77,85,139],[114,78,85,140,"value"],[114,83,85,145],[114,84,85,146],[114,87,85,149,"String"],[114,93,85,155],[114,94,85,156,"value"],[114,99,85,161],[114,100,85,162],[114,101,85,163],[115,10,85,163],[115,12,85,164],[115,13,85,165],[116,10,86,8],[116,15,86,8,"_parts2"],[116,22,86,8],[116,25,86,12,"parts"],[116,30,86,17],[116,43,86,12,"_parts2"],[116,50,86,12],[116,51,86,19,"length"],[116,57,86,25],[116,59,86,27],[117,12,87,10,"Object"],[117,18,87,16],[117,19,87,17,"assign"],[117,25,87,23],[117,26,87,24,"allParams"],[117,35,87,33],[117,37,87,35,"currentParams"],[117,50,87,48],[117,51,87,49],[118,10,88,8],[119,10,89,8],[119,14,89,12,"focusedRoute"],[119,26,89,24],[119,31,89,29,"route"],[119,36,89,34],[119,38,89,36],[120,12,89,36],[120,16,89,36,"_parts3"],[120,23,89,36],[121,12,90,10],[122,12,91,10],[123,12,92,10,"focusedParams"],[123,25,92,23],[123,28,92,23,"Object"],[123,34,92,23],[123,35,92,23,"assign"],[123,41,92,23],[123,46,93,15,"currentParams"],[123,59,93,28],[123,60,94,11],[124,12,95,10],[124,13,95,10,"_parts3"],[124,20,95,10],[124,23,95,10,"parts"],[125,12,96,10],[126,12,96,10],[126,25,95,10,"_parts3"],[126,32,95,10],[126,33,97,12,"forEach"],[126,40,97,19],[126,41,97,20],[126,51,97,20,"_ref6"],[126,56,97,20],[126,58,99,16],[127,14,99,16],[127,18,98,12,"param"],[127,23,98,17],[127,26,98,17,"_ref6"],[127,31,98,17],[127,32,98,12,"param"],[127,37,98,17],[128,14,100,12],[128,18,100,16,"param"],[128,23,100,21],[128,25,100,23],[129,16,101,14],[130,16,102,14],[130,20,102,18,"focusedParams"],[130,33,102,31],[130,35,102,33],[131,18,103,16],[132,18,104,16],[132,25,104,23,"focusedParams"],[132,38,104,36],[132,39,104,37,"param"],[132,44,104,42],[132,45,104,43],[133,16,105,14],[134,14,106,12],[135,12,107,10],[135,13,107,11],[135,14,107,12],[136,10,108,8],[137,8,109,6],[139,8,111,6],[140,8,112,6],[140,12,112,10],[140,13,112,11,"currentOptions"],[140,27,112,25],[140,28,112,26,"route"],[140,33,112,31],[140,34,112,32,"name"],[140,38,112,36],[140,39,112,37],[140,40,112,38,"screens"],[140,47,112,45],[140,51,112,49,"route"],[140,56,112,54],[140,57,112,55,"state"],[140,62,112,60],[140,67,112,65,"undefined"],[140,76,112,74],[140,78,112,76],[141,10,113,8,"hasNext"],[141,17,113,15],[141,20,113,18],[141,25,113,23],[142,8,114,6],[142,9,114,7],[142,15,114,13],[143,10,115,8,"index"],[143,15,115,13],[143,18,115,16],[143,25,115,23,"route"],[143,30,115,28],[143,31,115,29,"state"],[143,36,115,34],[143,37,115,35,"index"],[143,42,115,40],[143,47,115,45],[143,55,115,53],[143,58,115,56,"route"],[143,63,115,61],[143,64,115,62,"state"],[143,69,115,67],[143,70,115,68,"index"],[143,75,115,73],[143,78,115,76,"route"],[143,83,115,81],[143,84,115,82,"state"],[143,89,115,87],[143,90,115,88,"routes"],[143,96,115,94],[143,97,115,95,"length"],[143,103,115,101],[143,106,115,104],[143,107,115,105],[144,10,116,8],[144,14,116,14,"nextRoute"],[144,23,116,23],[144,26,116,26,"route"],[144,31,116,31],[144,32,116,32,"state"],[144,37,116,37],[144,38,116,38,"routes"],[144,44,116,44],[144,45,116,45,"index"],[144,50,116,50],[144,51,116,51],[145,10,117,8],[145,14,117,14,"nestedConfig"],[145,26,117,26],[145,29,117,29,"currentOptions"],[145,43,117,43],[145,44,117,44,"route"],[145,49,117,49],[145,50,117,50,"name"],[145,54,117,54],[145,55,117,55],[145,56,117,56,"screens"],[145,63,117,63],[147,10,119,8],[148,10,120,8],[148,14,120,12,"nestedConfig"],[148,26,120,24],[148,30,120,28,"nextRoute"],[148,39,120,37],[148,40,120,38,"name"],[148,44,120,42],[148,48,120,46,"nestedConfig"],[148,60,120,58],[148,62,120,60],[149,12,121,10,"route"],[149,17,121,15],[149,20,121,18,"nextRoute"],[149,29,121,27],[150,12,122,10,"currentOptions"],[150,26,122,24],[150,29,122,27,"nestedConfig"],[150,41,122,39],[151,10,123,8],[151,11,123,9],[151,17,123,15],[152,12,124,10],[153,12,125,10,"hasNext"],[153,19,125,17],[153,22,125,20],[153,27,125,25],[154,10,126,8],[155,8,127,6],[156,6,128,4],[156,7,128,5],[157,6,80,4],[157,13,80,11,"route"],[157,18,80,16],[157,19,80,17,"name"],[157,23,80,21],[157,27,80,25,"currentOptions"],[157,41,80,39],[157,45,80,43,"hasNext"],[157,52,80,50],[158,8,80,50,"_loop2"],[158,14,80,50],[159,6,80,50],[160,6,129,4],[160,10,129,8,"currentOptions"],[160,24,129,22],[160,25,129,23,"route"],[160,30,129,28],[160,31,129,29,"name"],[160,35,129,33],[160,36,129,34],[160,41,129,39,"undefined"],[160,50,129,48],[160,52,129,50],[161,8,129,50],[161,12,129,50,"_parts"],[161,18,129,50],[162,8,130,6,"path"],[162,12,130,10],[162,17,130,10,"_parts"],[162,23,130,10],[162,26,130,14,"parts"],[162,31,130,19],[162,52,130,14,"_parts"],[162,58,130,14],[162,59,130,21,"map"],[162,62,130,24],[162,63,130,25],[162,73,130,25,"_ref"],[162,77,130,25],[162,79,134,12],[163,10,134,12],[163,14,131,8,"segment"],[163,21,131,15],[163,24,131,15,"_ref"],[163,28,131,15],[163,29,131,8,"segment"],[163,36,131,15],[164,12,132,8,"param"],[164,17,132,13],[164,20,132,13,"_ref"],[164,24,132,13],[164,25,132,8,"param"],[164,30,132,13],[165,12,133,8,"optional"],[165,20,133,16],[165,23,133,16,"_ref"],[165,27,133,16],[165,28,133,8,"optional"],[165,36,133,16],[166,10,135,8],[167,10,136,8],[168,10,137,8],[169,10,138,8],[169,14,138,12,"segment"],[169,21,138,19],[169,26,138,24],[169,29,138,27],[169,31,138,29],[170,12,139,10],[170,19,139,17,"route"],[170,24,139,22],[170,25,139,23,"name"],[170,29,139,27],[171,10,140,8],[173,10,142,8],[174,10,143,8],[174,14,143,12,"param"],[174,19,143,17],[174,21,143,19],[175,12,144,10],[175,16,144,16,"value"],[175,21,144,21],[175,24,144,24,"allParams"],[175,33,144,33],[175,34,144,34,"param"],[175,39,144,39],[175,40,144,40],[176,12,145,10],[176,16,145,14,"value"],[176,21,145,19],[176,26,145,24,"undefined"],[176,35,145,33],[176,39,145,37,"optional"],[176,47,145,45],[176,49,145,47],[177,14,146,12],[178,14,147,12],[178,21,147,19],[178,23,147,21],[179,12,148,10],[181,12,150,10],[182,12,151,10],[183,12,152,10],[183,19,152,17,"String"],[183,25,152,23],[183,26,152,24,"value"],[183,31,152,29],[183,32,152,30],[183,33,152,31,"replace"],[183,40,152,38],[183,41,152,39],[183,74,152,72],[183,76,152,74],[183,86,152,74,"char"],[183,90,152,78],[184,14,152,78],[184,21,152,82,"encodeURIComponent"],[184,39,152,100],[184,40,152,101,"char"],[184,44,152,105],[184,45,152,106],[185,12,152,106],[185,14,152,107],[186,10,153,8],[187,10,154,8],[187,17,154,15,"encodeURIComponent"],[187,35,154,33],[187,36,154,34,"segment"],[187,43,154,41],[187,44,154,42],[188,8,155,6],[188,9,155,7],[188,10,155,8],[188,11,155,9,"join"],[188,15,155,13],[188,16,155,14],[188,19,155,17],[188,20,155,18],[189,6,156,4],[189,7,156,5],[189,13,156,11],[190,8,157,6,"path"],[190,12,157,10],[190,16,157,14,"encodeURIComponent"],[190,34,157,32],[190,35,157,33,"route"],[190,40,157,38],[190,41,157,39,"name"],[190,45,157,43],[190,46,157,44],[191,6,158,4],[192,6,159,4],[192,10,159,8],[192,11,159,9,"focusedParams"],[192,24,159,22],[192,28,159,26,"focusedRoute"],[192,40,159,38],[192,41,159,39,"params"],[192,47,159,45],[192,49,159,47],[193,8,160,6,"focusedParams"],[193,21,160,19],[193,24,160,22,"Object"],[193,30,160,28],[193,31,160,29,"fromEntries"],[193,42,160,40],[193,43,160,41,"Object"],[193,49,160,47],[193,50,160,48,"entries"],[193,57,160,55],[193,58,160,56,"focusedRoute"],[193,70,160,68],[193,71,160,69,"params"],[193,77,160,75],[193,78,160,76],[193,79,160,77,"map"],[193,82,160,80],[193,83,160,81],[193,93,160,81,"_ref2"],[193,98,160,81],[194,10,160,81],[194,14,160,81,"_ref3"],[194,19,160,81],[194,22,160,81,"_slicedToArray"],[194,36,160,81],[194,37,160,81,"_ref2"],[194,42,160,81],[195,12,160,83,"key"],[195,15,160,86],[195,18,160,86,"_ref3"],[195,23,160,86],[196,12,160,88,"value"],[196,17,160,93],[196,20,160,93,"_ref3"],[196,25,160,93],[197,10,160,93],[197,17,160,99],[197,18,160,100,"key"],[197,21,160,103],[197,23,160,105,"String"],[197,29,160,111],[197,30,160,112,"value"],[197,35,160,117],[197,36,160,118],[197,37,160,119],[198,8,160,119],[198,10,160,120],[198,11,160,121],[199,6,161,4],[200,6,162,4],[200,10,162,8,"route"],[200,15,162,13],[200,16,162,14,"state"],[200,21,162,19],[200,23,162,21],[201,8,163,6,"path"],[201,12,163,10],[201,16,163,14],[201,19,163,17],[202,6,164,4],[202,7,164,5],[202,13,164,11],[202,17,164,15,"focusedParams"],[202,30,164,28],[202,32,164,30],[203,8,165,6],[203,13,165,11],[203,17,165,17,"param"],[203,22,165,22],[203,26,165,26,"focusedParams"],[203,39,165,39],[203,41,165,41],[204,10,166,8],[204,14,166,12,"focusedParams"],[204,27,166,25],[204,28,166,26,"param"],[204,33,166,31],[204,34,166,32],[204,39,166,37],[204,50,166,48],[204,52,166,50],[205,12,167,10],[206,12,168,10],[206,19,168,17,"focusedParams"],[206,32,168,30],[206,33,168,31,"param"],[206,38,168,36],[206,39,168,37],[207,10,169,8],[208,8,170,6],[209,8,171,6],[209,12,171,12,"query"],[209,17,171,17],[209,20,171,20,"queryString"],[209,31,171,31],[209,32,171,32,"stringify"],[209,41,171,41],[209,42,171,42,"focusedParams"],[209,55,171,55],[209,57,171,57],[210,10,172,8,"sort"],[210,14,172,12],[210,16,172,14],[211,8,173,6],[211,9,173,7],[211,10,173,8],[212,8,174,6],[212,12,174,10,"query"],[212,17,174,15],[212,19,174,17],[213,10,175,8,"path"],[213,14,175,12],[213,18,175,16],[213,22,175,20,"query"],[213,27,175,25],[213,29,175,27],[214,8,176,6],[215,6,177,4],[216,6,178,4,"current"],[216,13,178,11],[216,16,178,14,"route"],[216,21,178,19],[216,22,178,20,"state"],[216,27,178,25],[217,4,179,2],[217,5,179,3],[218,4,69,2],[218,11,69,9,"current"],[218,18,69,16],[219,6,69,16,"_loop"],[219,11,69,16],[220,4,69,16],[222,4,181,2],[223,4,182,2],[223,8,182,6,"options"],[223,15,182,13],[223,27,182,6,"options"],[223,34,182,13],[223,35,182,15,"path"],[223,39,182,19],[223,41,182,21],[224,6,183,4,"path"],[224,10,183,8],[224,13,183,11],[224,16,183,14,"options"],[224,23,183,21],[224,24,183,22,"path"],[224,28,183,26],[224,32,183,30,"path"],[224,36,183,34],[224,38,183,36],[225,4,184,2],[227,4,186,2],[228,4,187,2,"path"],[228,8,187,6],[228,11,187,9,"path"],[228,15,187,13],[228,16,187,14,"replace"],[228,23,187,21],[228,24,187,22],[228,30,187,28],[228,32,187,30],[228,35,187,33],[228,36,187,34],[229,4,188,2,"path"],[229,8,188,6],[229,11,188,9,"path"],[229,15,188,13],[229,16,188,14,"length"],[229,22,188,20],[229,25,188,23],[229,26,188,24],[229,29,188,27,"path"],[229,33,188,31],[229,34,188,32,"replace"],[229,41,188,39],[229,42,188,40],[229,47,188,45],[229,49,188,47],[229,51,188,49],[229,52,188,50],[229,55,188,53,"path"],[229,59,188,57],[231,4,190,2],[232,4,191,2],[233,4,192,2],[233,8,192,6],[233,9,192,7,"path"],[233,13,192,11],[233,14,192,12,"startsWith"],[233,24,192,22],[233,25,192,23],[233,28,192,26],[233,29,192,27],[233,31,192,29],[234,6,193,4,"path"],[234,10,193,8],[234,13,193,11],[234,17,193,15,"path"],[234,21,193,19],[234,23,193,21],[235,4,194,2],[236,4,195,2],[236,11,195,9,"path"],[236,15,195,13],[237,2,196,0],[238,2,197,0],[238,6,197,6,"createConfigItem"],[238,22,197,22],[238,25,197,25],[238,34,197,6,"createConfigItem"],[238,50,197,22,"createConfigItem"],[238,51,197,26,"config"],[238,57,197,32],[238,59,197,34,"parentParts"],[238,70,197,45],[238,72,197,50],[239,4,198,2],[239,8,198,6],[239,15,198,13,"config"],[239,21,198,19],[239,26,198,24],[239,34,198,32],[239,36,198,34],[240,6,199,4],[241,6,200,4],[241,10,200,10,"parts"],[241,17,200,15],[241,20,200,18],[241,21,200,19],[241,22,200,20],[241,24,200,22,"_$$_REQUIRE"],[241,35,200,22],[241,36,200,22,"_dependencyMap"],[241,50,200,22],[241,79,200,39,"getPatternParts"],[241,94,200,54],[241,96,200,56,"config"],[241,102,200,62],[241,103,200,63],[242,6,201,4],[242,10,201,8,"parentParts"],[242,21,201,19],[242,23,201,21],[243,8,202,6],[243,15,202,13],[244,10,203,8,"parts"],[244,15,203,13],[244,20,203,13,"concat"],[244,26,203,13],[244,27,203,13,"_toConsumableArray"],[244,45,203,13],[244,46,203,19,"parentParts"],[244,57,203,30],[244,60,203,30,"_toConsumableArray"],[244,78,203,30],[244,79,203,35,"parts"],[244,86,203,40],[245,8,204,6],[245,9,204,7],[246,6,205,4],[247,6,206,4],[247,13,206,11],[248,8,207,6,"parts"],[248,13,207,11],[248,15,207,6,"parts"],[249,6,208,4],[249,7,208,5],[250,4,209,2],[251,4,210,2],[251,8,210,6,"config"],[251,14,210,12],[251,15,210,13,"exact"],[251,20,210,18],[251,24,210,22,"config"],[251,30,210,28],[251,31,210,29,"path"],[251,35,210,33],[251,40,210,38,"undefined"],[251,49,210,47],[251,51,210,49],[252,6,211,4],[252,12,211,10],[252,16,211,14,"Error"],[252,21,211,19],[252,22,211,20],[252,172,211,170],[252,173,211,171],[253,4,212,2],[255,4,214,2],[256,4,215,2],[257,4,216,2],[257,8,216,8,"parts"],[257,13,216,13],[257,16,216,16,"config"],[257,22,216,22],[257,23,216,23,"exact"],[257,28,216,28],[257,33,216,33],[257,37,216,37],[257,43,216,37,"concat"],[257,49,216,37],[257,50,216,37,"_toConsumableArray"],[257,68,216,37],[257,69,216,45,"parentParts"],[257,80,216,56],[257,84,216,60],[257,86,216,62],[257,89,216,62,"_toConsumableArray"],[257,107,216,62],[257,108,216,69,"config"],[257,114,216,75],[257,115,216,76,"path"],[257,119,216,80],[257,122,216,83],[257,123,216,84],[257,124,216,85],[257,126,216,87,"_$$_REQUIRE"],[257,137,216,87],[257,138,216,87,"_dependencyMap"],[257,152,216,87],[257,181,216,104,"getPatternParts"],[257,196,216,119],[257,198,216,121,"config"],[257,204,216,127],[257,205,216,128,"path"],[257,209,216,132],[257,210,216,133],[257,213,216,136],[257,215,216,138],[257,220,216,143,"config"],[257,226,216,149],[257,227,216,150,"path"],[257,231,216,154],[257,234,216,157],[257,235,216,158],[257,236,216,159],[257,238,216,161,"_$$_REQUIRE"],[257,249,216,161],[257,250,216,161,"_dependencyMap"],[257,264,216,161],[257,293,216,178,"getPatternParts"],[257,308,216,193],[257,310,216,195,"config"],[257,316,216,201],[257,317,216,202,"path"],[257,321,216,206],[257,322,216,207],[257,325,216,210,"undefined"],[257,334,216,219],[258,4,217,2],[258,8,217,8,"screens"],[258,15,217,15],[258,18,217,18,"config"],[258,24,217,24],[258,25,217,25,"screens"],[258,32,217,32],[258,35,217,35,"createNormalizedConfigs"],[258,58,217,58],[258,59,217,59,"config"],[258,65,217,65],[258,66,217,66,"screens"],[258,73,217,73],[258,75,217,75,"parts"],[258,80,217,80],[258,81,217,81],[258,84,217,84,"undefined"],[258,93,217,93],[259,4,218,2],[259,11,218,9],[260,6,219,4,"parts"],[260,11,219,9],[260,13,219,4,"parts"],[260,18,219,9],[261,6,220,4,"stringify"],[261,15,220,13],[261,17,220,15,"config"],[261,23,220,21],[261,24,220,22,"stringify"],[261,33,220,31],[262,6,221,4,"screens"],[262,13,221,11],[262,15,221,4,"screens"],[263,4,222,2],[263,5,222,3],[264,2,223,0],[264,3,223,1],[265,2,224,0],[265,6,224,6,"createNormalizedConfigs"],[265,29,224,29],[265,32,224,32],[265,41,224,6,"createNormalizedConfigs"],[265,64,224,29,"createNormalizedConfigs"],[265,65,224,33,"options"],[265,72,224,40],[265,74,224,42,"parts"],[265,79,224,47],[266,4,224,47],[266,11,224,52,"Object"],[266,17,224,58],[266,18,224,59,"fromEntries"],[266,29,224,70],[266,30,224,71,"Object"],[266,36,224,77],[266,37,224,78,"entries"],[266,44,224,85],[266,45,224,86,"options"],[266,52,224,93],[266,53,224,94],[266,54,224,95,"map"],[266,57,224,98],[266,58,224,99],[266,68,224,99,"_ref7"],[266,73,224,99],[266,75,224,114],[267,6,224,114],[267,10,224,114,"_ref8"],[267,15,224,114],[267,18,224,114,"_slicedToArray"],[267,32,224,114],[267,33,224,114,"_ref7"],[267,38,224,114],[268,8,224,101,"name"],[268,12,224,105],[268,15,224,105,"_ref8"],[268,20,224,105],[269,8,224,107,"c"],[269,9,224,108],[269,12,224,108,"_ref8"],[269,17,224,108],[270,6,225,2],[270,10,225,8,"result"],[270,16,225,14],[270,19,225,17,"createConfigItem"],[270,35,225,33],[270,36,225,34,"c"],[270,37,225,35],[270,39,225,37,"parts"],[270,44,225,42],[270,45,225,43],[271,6,226,2],[271,13,226,9],[271,14,226,10,"name"],[271,18,226,14],[271,20,226,16,"result"],[271,26,226,22],[271,27,226,23],[272,4,227,0],[272,5,227,1],[272,6,227,2],[272,7,227,3],[273,2,227,3],[274,0,227,4],[274,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;ACS,4MD;AEC,mkBF;uBGC;CHM;6BIE;CJO;AK+B;kFC2B,iFD;oBEY;WFU;yBGuB;0ECsB,gCD;OHG;iFCK,sCD;CLoC;yBUC;CV0B;gCWC,mEL;CKG,EX"}},"type":"js/module"}]}