{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"X490zePjq+0IljAc8X0qcBg0iTo="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM="}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":29,"column":0,"index":918},"end":{"line":29,"column":77,"index":995}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":565,"column":0,"index":19529}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":26,"column":70,"index":808}},{"start":{"line":26,"column":0,"index":738},"end":{"line":26,"column":70,"index":808}},{"start":{"line":26,"column":0,"index":738},"end":{"line":26,"column":70,"index":808}},{"start":{"line":26,"column":0,"index":738},"end":{"line":26,"column":70,"index":808}},{"start":{"line":26,"column":0,"index":738},"end":{"line":26,"column":70,"index":808}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps="}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE="}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":809},"end":{"line":27,"column":43,"index":852}},{"start":{"line":27,"column":0,"index":809},"end":{"line":27,"column":43,"index":852}},{"start":{"line":27,"column":0,"index":809},"end":{"line":27,"column":43,"index":852}},{"start":{"line":27,"column":0,"index":809},"end":{"line":27,"column":43,"index":852}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0,"index":996},"end":{"line":30,"column":55,"index":1051}},{"start":{"line":30,"column":0,"index":996},"end":{"line":30,"column":55,"index":1051}},{"start":{"line":30,"column":0,"index":996},"end":{"line":30,"column":55,"index":1051}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE="}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0,"index":1052},"end":{"line":31,"column":49,"index":1101}},{"start":{"line":31,"column":0,"index":1052},"end":{"line":31,"column":49,"index":1101}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":28,"column":0,"index":853},"end":{"line":28,"column":64,"index":917}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../RNGestureHandlerModule\"));\n  var _findNodeHandle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../findNodeHandle\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../GestureHandlerRootViewContext\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\");\n  var _UIManagerAny$getView;\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _$$_REQUIRE(_dependencyMap[14], \"./customDirectEventTypes\").customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = (_UIManagerAny$getView = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants')) != null ? _UIManagerAny$getView : UIManagerAny.getConstants == null ? void 0 : UIManagerAny.getConstants();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _$$_REQUIRE(_dependencyMap[16], \"../State\").State.UNDETERMINED, undefined), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.BEGAN, 'onBegan'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.FAILED, 'onFailed'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.CANCELLED, 'onCancelled'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.ACTIVE, 'onActivated'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.END, 'onEnded');\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null || _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null || _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null || _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null || _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function (_this$props, _this$props2) {\n              var onGestureEvent = (_this$props = _this.props) == null ? void 0 : _this$props.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = (_this$props2 = _this.props) == null ? void 0 : _this$props2.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _$$_REQUIRE(_dependencyMap[17], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n          (0, _$$_REQUIRE(_dependencyMap[20], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n            _$$_REQUIRE(_dependencyMap[21], \"../mountRegistry\").MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[22], \"./getNextHandlerTag\").getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = React.createRef();\n        _this.isMountedRef = React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _$$_REQUIRE(_dependencyMap[20], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null || _this$inspectorToggle.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").unregisterOldGestureHandler)(this.handlerTag);\n          }\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _$$_REQUIRE(_dependencyMap[18], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n          _$$_REQUIRE(_dependencyMap[21], \"../mountRegistry\").MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _$$_REQUIRE(_dependencyMap[20], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _$$_REQUIRE(_dependencyMap[19], \"./utils\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          if (__DEV__ && !this.context && !(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[23], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\"));\n          }\n          return React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":389,"map":[[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopRequireWildcard"],[14,37,1,0],[14,38,1,0,"_$$_REQUIRE"],[14,49,1,0],[14,50,1,0,"_dependencyMap"],[14,64,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"_$$_REQUIRE"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,9,0],[16,6,9,0,"_RNGestureHandlerModule"],[16,29,9,0],[16,32,9,0,"_interopRequireDefault"],[16,54,9,0],[16,55,9,0,"_$$_REQUIRE"],[16,66,9,0],[16,67,9,0,"_dependencyMap"],[16,81,9,0],[17,2,24,0],[17,6,24,0,"_findNodeHandle"],[17,21,24,0],[17,24,24,0,"_interopRequireDefault"],[17,46,24,0],[17,47,24,0,"_$$_REQUIRE"],[17,58,24,0],[17,59,24,0,"_dependencyMap"],[17,73,24,0],[18,2,29,0],[18,6,29,0,"_GestureHandlerRootViewContext"],[18,36,29,0],[18,39,29,0,"_interopRequireDefault"],[18,61,29,0],[18,62,29,0,"_$$_REQUIRE"],[18,73,29,0],[18,74,29,0,"_dependencyMap"],[18,88,29,0],[19,2,29,77],[19,6,29,77,"_jsxRuntime"],[19,17,29,77],[19,20,29,77,"_$$_REQUIRE"],[19,31,29,77],[19,32,29,77,"_dependencyMap"],[19,46,29,77],[20,2,29,77],[20,6,29,77,"_UIManagerAny$getView"],[20,27,29,77],[21,2,29,77],[21,11,29,77,"_getRequireWildcardCache"],[21,36,29,77,"e"],[21,37,29,77],[21,66,29,77,"WeakMap"],[21,73,29,77],[21,92,29,77,"r"],[21,93,29,77],[21,100,29,77,"WeakMap"],[21,107,29,77],[21,111,29,77,"t"],[21,112,29,77],[21,119,29,77,"WeakMap"],[21,126,29,77],[21,138,29,77,"_getRequireWildcardCache"],[21,162,29,77],[21,174,29,77,"_getRequireWildcardCache"],[21,199,29,77,"e"],[21,200,29,77],[21,211,29,77,"e"],[21,212,29,77],[21,215,29,77,"t"],[21,216,29,77],[21,219,29,77,"r"],[21,220,29,77],[21,225,29,77,"e"],[21,226,29,77],[22,2,29,77],[22,11,29,77,"_interopRequireWildcard"],[22,35,29,77,"e"],[22,36,29,77],[22,38,29,77,"r"],[22,39,29,77],[22,48,29,77,"r"],[22,49,29,77],[22,53,29,77,"e"],[22,54,29,77],[22,58,29,77,"e"],[22,59,29,77],[22,60,29,77,"__esModule"],[22,70,29,77],[22,79,29,77,"e"],[22,80,29,77],[22,95,29,77,"e"],[22,96,29,77],[22,119,29,77,"e"],[22,120,29,77],[22,145,29,77,"e"],[22,146,29,77],[22,157,29,77,"default"],[22,164,29,77],[22,166,29,77,"e"],[22,167,29,77],[22,175,29,77,"t"],[22,176,29,77],[22,179,29,77,"_getRequireWildcardCache"],[22,203,29,77],[22,204,29,77,"r"],[22,205,29,77],[22,212,29,77,"t"],[22,213,29,77],[22,217,29,77,"t"],[22,218,29,77],[22,219,29,77,"has"],[22,222,29,77],[22,223,29,77,"e"],[22,224,29,77],[22,234,29,77,"t"],[22,235,29,77],[22,236,29,77,"get"],[22,239,29,77],[22,240,29,77,"e"],[22,241,29,77],[22,248,29,77,"n"],[22,249,29,77],[22,254,29,77,"__proto__"],[22,263,29,77],[22,273,29,77,"a"],[22,274,29,77],[22,277,29,77,"Object"],[22,283,29,77],[22,284,29,77,"defineProperty"],[22,298,29,77],[22,302,29,77,"Object"],[22,308,29,77],[22,309,29,77,"getOwnPropertyDescriptor"],[22,333,29,77],[22,344,29,77,"u"],[22,345,29,77],[22,349,29,77,"e"],[22,350,29,77],[22,370,29,77,"u"],[22,371,29,77],[22,378,29,77,"hasOwnProperty"],[22,392,29,77],[22,393,29,77,"call"],[22,397,29,77],[22,398,29,77,"e"],[22,399,29,77],[22,401,29,77,"u"],[22,402,29,77],[22,411,29,77,"i"],[22,412,29,77],[22,415,29,77,"a"],[22,416,29,77],[22,419,29,77,"Object"],[22,425,29,77],[22,426,29,77,"getOwnPropertyDescriptor"],[22,450,29,77],[22,451,29,77,"e"],[22,452,29,77],[22,454,29,77,"u"],[22,455,29,77],[22,465,29,77,"i"],[22,466,29,77],[22,471,29,77,"i"],[22,472,29,77],[22,473,29,77,"get"],[22,476,29,77],[22,480,29,77,"i"],[22,481,29,77],[22,482,29,77,"set"],[22,485,29,77],[22,489,29,77,"Object"],[22,495,29,77],[22,496,29,77,"defineProperty"],[22,510,29,77],[22,511,29,77,"n"],[22,512,29,77],[22,514,29,77,"u"],[22,515,29,77],[22,517,29,77,"i"],[22,518,29,77],[22,522,29,77,"n"],[22,523,29,77],[22,524,29,77,"u"],[22,525,29,77],[22,529,29,77,"e"],[22,530,29,77],[22,531,29,77,"u"],[22,532,29,77],[22,544,29,77,"n"],[22,545,29,77],[22,546,29,77,"default"],[22,553,29,77],[22,556,29,77,"e"],[22,557,29,77],[22,559,29,77,"t"],[22,560,29,77],[22,564,29,77,"t"],[22,565,29,77],[22,566,29,77,"set"],[22,569,29,77],[22,570,29,77,"e"],[22,571,29,77],[22,573,29,77,"n"],[22,574,29,77],[22,577,29,77,"n"],[22,578,29,77],[23,2,29,77],[23,11,29,77,"_callSuper"],[23,22,29,77,"t"],[23,23,29,77],[23,25,29,77,"o"],[23,26,29,77],[23,28,29,77,"e"],[23,29,29,77],[23,40,29,77,"o"],[23,41,29,77],[23,48,29,77,"_getPrototypeOf2"],[23,64,29,77],[23,65,29,77,"default"],[23,72,29,77],[23,74,29,77,"o"],[23,75,29,77],[23,82,29,77,"_possibleConstructorReturn2"],[23,109,29,77],[23,110,29,77,"default"],[23,117,29,77],[23,119,29,77,"t"],[23,120,29,77],[23,122,29,77,"_isNativeReflectConstruct"],[23,147,29,77],[23,152,29,77,"Reflect"],[23,159,29,77],[23,160,29,77,"construct"],[23,169,29,77],[23,170,29,77,"o"],[23,171,29,77],[23,173,29,77,"e"],[23,174,29,77],[23,186,29,77,"_getPrototypeOf2"],[23,202,29,77],[23,203,29,77,"default"],[23,210,29,77],[23,212,29,77,"t"],[23,213,29,77],[23,215,29,77,"constructor"],[23,226,29,77],[23,230,29,77,"o"],[23,231,29,77],[23,232,29,77,"apply"],[23,237,29,77],[23,238,29,77,"t"],[23,239,29,77],[23,241,29,77,"e"],[23,242,29,77],[24,2,29,77],[24,11,29,77,"_isNativeReflectConstruct"],[24,37,29,77],[24,51,29,77,"t"],[24,52,29,77],[24,56,29,77,"Boolean"],[24,63,29,77],[24,64,29,77,"prototype"],[24,73,29,77],[24,74,29,77,"valueOf"],[24,81,29,77],[24,82,29,77,"call"],[24,86,29,77],[24,87,29,77,"Reflect"],[24,94,29,77],[24,95,29,77,"construct"],[24,104,29,77],[24,105,29,77,"Boolean"],[24,112,29,77],[24,145,29,77,"t"],[24,146,29,77],[24,159,29,77,"_isNativeReflectConstruct"],[24,184,29,77],[24,196,29,77,"_isNativeReflectConstruct"],[24,222,29,77],[24,235,29,77,"t"],[24,236,29,77],[25,2,33,0],[25,6,33,6,"UIManagerAny"],[25,18,33,18],[25,21,33,21,"UIManager"],[25,43,33,37],[26,2,35,0,"customDirectEventTypes"],[26,33,35,0],[26,34,35,0,"customDirectEventTypes"],[26,84,35,22],[26,85,35,23,"topGestureHandlerEvent"],[26,107,35,45],[26,110,35,48],[27,4,36,2,"registrationName"],[27,20,36,18],[27,22,36,20],[28,2,37,0],[28,3,37,1],[29,2,39,0],[29,6,39,6,"customGHEventsConfigFabricAndroid"],[29,39,39,39],[29,42,39,42],[30,4,40,2,"topOnGestureHandlerEvent"],[30,28,40,26],[30,30,40,28],[31,6,40,30,"registrationName"],[31,22,40,46],[31,24,40,48],[32,4,40,72],[32,5,40,73],[33,4,41,2,"topOnGestureHandlerStateChange"],[33,34,41,32],[33,36,41,34],[34,6,42,4,"registrationName"],[34,22,42,20],[34,24,42,22],[35,4,43,2],[36,2,44,0],[36,3,44,1],[37,2,46,0],[37,6,46,6,"customGHEventsConfig"],[37,26,46,26],[37,29,46,26,"Object"],[37,35,46,26],[37,36,46,26,"assign"],[37,42,46,26],[38,4,47,2,"onGestureHandlerEvent"],[38,25,47,23],[38,27,47,25],[39,6,47,27,"registrationName"],[39,22,47,43],[39,24,47,45],[40,4,47,69],[40,5,47,70],[41,4,48,2,"onGestureHandlerStateChange"],[41,31,48,29],[41,33,48,31],[42,6,49,4,"registrationName"],[42,22,49,20],[42,24,49,22],[43,4,50,2],[44,2,50,3],[44,5,60,6],[44,9,60,6,"isFabric"],[44,40,60,6],[44,41,60,6,"isFabric"],[44,61,60,14],[44,63,60,15],[44,64,60,16],[44,68,61,4,"Platform"],[44,89,61,12],[44,90,61,13,"OS"],[44,92,61,15],[44,97,61,20],[44,106,61,29],[44,110,62,4,"customGHEventsConfigFabricAndroid"],[44,143,62,37],[44,144,63,1],[46,2,65,0],[47,2,66,0],[48,2,67,0],[49,2,68,0],[50,2,69,0,"UIManagerAny"],[50,14,69,12],[50,15,69,13,"genericDirectEventTypes"],[50,38,69,36],[50,41,69,36,"Object"],[50,47,69,36],[50,48,69,36,"assign"],[50,54,69,36],[50,59,70,5,"UIManagerAny"],[50,71,70,17],[50,72,70,18,"genericDirectEventTypes"],[50,95,70,41],[50,97,71,5,"customGHEventsConfig"],[50,117,71,25],[50,118,72,1],[51,2,73,0],[52,2,74,0],[53,2,75,0],[54,2,76,0],[54,6,76,6,"UIManagerConstants"],[54,24,76,24],[54,28,76,24,"_UIManagerAny$getView"],[54,49,76,24],[54,52,77,2,"UIManagerAny"],[54,64,77,14],[54,65,77,15,"getViewManagerConfig"],[54,85,77,35],[54,105,77,2,"UIManagerAny"],[54,117,77,14],[54,118,77,15,"getViewManagerConfig"],[54,138,77,35],[54,139,77,38],[54,153,77,52],[54,154,77,53],[54,166,77,53,"_UIManagerAny$getView"],[54,187,77,53],[54,190,78,2,"UIManagerAny"],[54,202,78,14],[54,203,78,15,"getConstants"],[54,215,78,27],[54,235,78,2,"UIManagerAny"],[54,247,78,14],[54,248,78,15,"getConstants"],[54,260,78,27],[54,261,78,30],[54,262,78,31],[55,2,80,0],[55,6,80,4,"UIManagerConstants"],[55,24,80,22],[55,26,80,24],[56,4,81,2,"UIManagerConstants"],[56,22,81,20],[56,23,81,21,"genericDirectEventTypes"],[56,46,81,44],[56,49,81,44,"Object"],[56,55,81,44],[56,56,81,44,"assign"],[56,62,81,44],[56,67,82,7,"UIManagerConstants"],[56,85,82,25],[56,86,82,26,"genericDirectEventTypes"],[56,109,82,49],[56,111,83,7,"customGHEventsConfig"],[56,131,83,27],[56,132,84,3],[57,2,85,0],[59,2,87,0],[60,2,88,0],[60,6,88,0,"_UIManagerAny$setJSRe"],[60,27,88,0],[60,30,95,4,"UIManagerAny"],[60,42,95,16],[60,43,89,2,"setJSResponder"],[60,57,89,16],[61,4,89,18,"oldSetJSResponder"],[61,21,89,35],[61,24,89,35,"_UIManagerAny$setJSRe"],[61,45,89,35],[61,59,89,38],[61,71,89,44],[62,6,90,4],[63,4,90,4],[63,5,91,3],[63,8,91,3,"_UIManagerAny$setJSRe"],[63,29,91,3],[64,4,91,3,"_UIManagerAny$clearJS"],[64,25,91,3],[64,28,95,4,"UIManagerAny"],[64,40,95,16],[64,41,92,2,"clearJSResponder"],[64,57,92,18],[65,4,92,20,"oldClearJSResponder"],[65,23,92,39],[65,26,92,39,"_UIManagerAny$clearJS"],[65,47,92,39],[65,61,92,42],[65,73,92,48],[66,6,93,4],[67,4,93,4],[67,5,94,3],[67,8,94,3,"_UIManagerAny$clearJS"],[67,29,94,3],[68,2,96,0,"UIManagerAny"],[68,14,96,12],[68,15,96,13,"setJSResponder"],[68,29,96,27],[68,32,96,30],[68,42,96,31,"tag"],[68,45,96,42],[68,47,96,44,"blockNativeResponder"],[68,67,96,73],[68,69,96,78],[69,4,97,2,"RNGestureHandlerModule"],[69,35,97,24],[69,36,97,25,"handleSetJSResponder"],[69,56,97,45],[69,57,97,46,"tag"],[69,60,97,49],[69,62,97,51,"blockNativeResponder"],[69,82,97,71],[69,83,97,72],[70,4,98,2,"oldSetJSResponder"],[70,21,98,19],[70,22,98,20,"tag"],[70,25,98,23],[70,27,98,25,"blockNativeResponder"],[70,47,98,45],[70,48,98,46],[71,2,99,0],[71,3,99,1],[72,2,100,0,"UIManagerAny"],[72,14,100,12],[72,15,100,13,"clearJSResponder"],[72,31,100,29],[72,34,100,32],[72,46,100,38],[73,4,101,2,"RNGestureHandlerModule"],[73,35,101,24],[73,36,101,25,"handleClearJSResponder"],[73,58,101,47],[73,59,101,48],[73,60,101,49],[74,4,102,2,"oldClearJSResponder"],[74,23,102,21],[74,24,102,22],[74,25,102,23],[75,2,103,0],[75,3,103,1],[76,2,105,0],[76,6,105,4,"allowTouches"],[76,18,105,16],[76,21,105,19],[76,25,105,23],[77,2,106,0],[77,6,106,6,"DEV_ON_ANDROID"],[77,20,106,20],[77,23,106,23,"__DEV__"],[77,30,106,30],[77,34,106,34,"Platform"],[77,55,106,42],[77,56,106,43,"OS"],[77,58,106,45],[77,63,106,50],[77,72,106,59],[78,2,107,0],[79,2,108,0],[80,2,109,0],[80,6,109,4,"DEV_ON_ANDROID"],[80,20,109,18],[80,22,109,20],[81,4,110,2,"DeviceEventEmitter"],[81,35,110,20],[81,36,110,21,"addListener"],[81,47,110,32],[81,48,110,33],[81,72,110,57],[81,74,110,59],[81,86,110,65],[82,6,111,4,"allowTouches"],[82,18,111,16],[82,21,111,19],[82,22,111,20,"allowTouches"],[82,34,111,32],[83,4,112,2],[83,5,112,3],[83,6,112,4],[84,2,113,0],[85,2,118,0],[85,11,118,9,"hasUnresolvedRefs"],[85,28,118,26,"hasUnresolvedRefs"],[85,29,119,2,"props"],[85,34,119,24],[85,36,120,2],[86,4,121,2],[87,4,122,2],[87,8,122,8,"extract"],[87,15,122,15],[87,18,122,18],[87,27,122,8,"extract"],[87,34,122,15,"extract"],[87,35,122,19,"refs"],[87,39,122,36],[87,41,122,41],[88,6,123,4],[88,10,123,8],[88,11,123,9,"Array"],[88,16,123,14],[88,17,123,15,"isArray"],[88,24,123,22],[88,25,123,23,"refs"],[88,29,123,27],[88,30,123,28],[88,32,123,30],[89,8,124,6],[89,15,124,13,"refs"],[89,19,124,17],[89,23,124,21,"refs"],[89,27,124,25],[89,28,124,26,"current"],[89,35,124,33],[89,40,124,38],[89,44,124,42],[90,6,125,4],[91,6,126,4],[91,13,126,11,"refs"],[91,17,126,15],[91,18,126,16,"some"],[91,22,126,20],[91,23,126,21],[91,33,126,22,"r"],[91,34,126,23],[92,8,126,23],[92,15,126,28,"r"],[92,16,126,29],[92,20,126,33,"r"],[92,21,126,34],[92,22,126,35,"current"],[92,29,126,42],[92,34,126,47],[92,38,126,51],[93,6,126,51],[93,8,126,52],[94,4,127,2],[94,5,127,3],[95,4,128,2],[95,11,128,9,"extract"],[95,18,128,16],[95,19,128,17,"props"],[95,24,128,22],[95,25,128,23],[95,47,128,45],[95,48,128,46],[95,49,128,47],[95,53,128,51,"extract"],[95,60,128,58],[95,61,128,59,"props"],[95,66,128,64],[95,67,128,65],[95,76,128,74],[95,77,128,75],[95,78,128,76],[96,2,129,0],[97,2,131,0],[97,6,131,6,"stateToPropMappings"],[97,25,131,25],[97,32,131,25,"_defineProperty2"],[97,48,131,25],[97,49,131,25,"default"],[97,56,131,25],[97,62,131,25,"_defineProperty2"],[97,78,131,25],[97,79,131,25,"default"],[97,86,131,25],[97,92,131,25,"_defineProperty2"],[97,108,131,25],[97,109,131,25,"default"],[97,116,131,25],[97,122,131,25,"_defineProperty2"],[97,138,131,25],[97,139,131,25,"default"],[97,146,131,25],[97,152,131,25,"_defineProperty2"],[97,168,131,25],[97,169,131,25,"default"],[97,176,131,25],[97,182,131,25,"_defineProperty2"],[97,198,131,25],[97,199,131,25,"default"],[97,206,131,25],[97,212,132,3,"State"],[97,243,132,3],[97,244,132,3,"State"],[97,261,132,8],[97,262,132,9,"UNDETERMINED"],[97,274,132,21],[97,276,132,24,"undefined"],[97,285,132,33],[97,288,133,3,"State"],[97,319,133,3],[97,320,133,3,"State"],[97,337,133,8],[97,338,133,9,"BEGAN"],[97,343,133,14],[97,345,133,17],[97,354,133,26],[97,357,134,3,"State"],[97,388,134,3],[97,389,134,3,"State"],[97,406,134,8],[97,407,134,9,"FAILED"],[97,413,134,15],[97,415,134,18],[97,425,134,28],[97,428,135,3,"State"],[97,459,135,3],[97,460,135,3,"State"],[97,477,135,8],[97,478,135,9,"CANCELLED"],[97,487,135,18],[97,489,135,21],[97,502,135,34],[97,505,136,3,"State"],[97,536,136,3],[97,537,136,3,"State"],[97,554,136,8],[97,555,136,9,"ACTIVE"],[97,561,136,15],[97,563,136,18],[97,576,136,31],[97,579,137,3,"State"],[97,610,137,3],[97,611,137,3,"State"],[97,628,137,8],[97,629,137,9,"END"],[97,632,137,12],[97,634,137,15],[97,643,137,24],[97,644,138,10],[99,2,149,0],[101,2,163,0],[101,6,163,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[101,33,163,33],[101,36,163,36],[101,37,163,37],[103,2,165,0],[104,2,166,15],[104,11,166,24,"createHandler"],[104,24,166,37,"createHandler"],[104,25,166,37,"_ref"],[104,29,166,37],[104,31,175,76],[105,4,175,76],[105,8,170,2,"name"],[105,12,170,6],[105,15,170,6,"_ref"],[105,19,170,6],[105,20,170,2,"name"],[105,24,170,6],[106,6,170,6,"_ref$allowedProps"],[106,23,170,6],[106,26,170,6,"_ref"],[106,30,170,6],[106,31,171,2,"allowedProps"],[106,43,171,14],[107,6,171,2,"allowedProps"],[107,18,171,14],[107,21,171,14,"_ref$allowedProps"],[107,38,171,14],[107,52,171,17],[107,54,171,19],[107,57,171,19,"_ref$allowedProps"],[107,74,171,19],[108,6,171,19,"_ref$config"],[108,17,171,19],[108,20,171,19,"_ref"],[108,24,171,19],[108,25,172,2,"config"],[108,31,172,8],[109,6,172,2,"config"],[109,12,172,8],[109,15,172,8,"_ref$config"],[109,26,172,8],[109,40,172,11],[109,41,172,12],[109,42,172,13],[109,45,172,13,"_ref$config"],[109,56,172,13],[110,6,173,2,"transformProps"],[110,20,173,16],[110,23,173,16,"_ref"],[110,27,173,16],[110,28,173,2,"transformProps"],[110,42,173,16],[111,6,173,16,"_ref$customNativeProp"],[111,27,173,16],[111,30,173,16,"_ref"],[111,34,173,16],[111,35,174,2,"customNativeProps"],[111,52,174,19],[112,6,174,2,"customNativeProps"],[112,23,174,19],[112,26,174,19,"_ref$customNativeProp"],[112,47,174,19],[112,61,174,22],[112,63,174,24],[112,66,174,24,"_ref$customNativeProp"],[112,87,174,24],[113,4,174,24],[113,8,179,8,"Handler"],[113,15,179,15],[113,41,179,15,"_React$Component"],[113,57,179,15],[114,6,194,4],[114,15,194,4,"Handler"],[114,23,194,16,"props"],[114,28,194,48],[114,30,194,50],[115,8,194,50],[115,12,194,50,"_this"],[115,17,194,50],[116,8,194,50],[116,12,194,50,"_classCallCheck2"],[116,28,194,50],[116,29,194,50,"default"],[116,36,194,50],[116,44,194,50,"Handler"],[116,51,194,50],[117,8,195,6,"_this"],[117,13,195,6],[117,16,195,6,"_callSuper"],[117,26,195,6],[117,33,195,6,"Handler"],[117,40,195,6],[117,43,195,12,"props"],[117,48,195,17],[118,8,195,19,"_this"],[118,13,195,19],[118,14,277,12,"onGestureHandlerEvent"],[118,35,277,33],[118,38,277,36],[118,48,277,37,"event"],[118,53,277,59],[118,55,277,64],[119,10,278,6],[119,14,278,10,"event"],[119,19,278,15],[119,20,278,16,"nativeEvent"],[119,31,278,27],[119,32,278,28,"handlerTag"],[119,42,278,38],[119,47,278,43,"_this"],[119,52,278,43],[119,53,278,48,"handlerTag"],[119,63,278,58],[119,65,278,60],[120,12,279,8],[120,16,279,12],[120,23,279,19,"_this"],[120,28,279,19],[120,29,279,24,"props"],[120,34,279,29],[120,35,279,30,"onGestureEvent"],[120,49,279,44],[120,54,279,49],[120,64,279,59],[120,66,279,61],[121,14,280,10,"_this"],[121,19,280,10],[121,20,280,15,"props"],[121,25,280,20],[121,26,280,21,"onGestureEvent"],[121,40,280,35],[121,52,280,10,"_this"],[121,57,280,10],[121,58,280,15,"props"],[121,63,280,20],[121,64,280,21,"onGestureEvent"],[121,78,280,35],[121,79,280,38,"event"],[121,84,280,43],[121,85,280,44],[122,12,281,8],[123,10,282,6],[123,11,282,7],[123,17,282,13],[124,12,283,8,"_this"],[124,17,283,8],[124,18,283,13,"props"],[124,23,283,18],[124,24,283,19,"onGestureHandlerEvent"],[124,45,283,40],[124,57,283,8,"_this"],[124,62,283,8],[124,63,283,13,"props"],[124,68,283,18],[124,69,283,19,"onGestureHandlerEvent"],[124,90,283,40],[124,91,283,43,"event"],[124,96,283,48],[124,97,283,49],[125,10,284,6],[126,8,285,4],[126,9,285,5],[127,8,287,4],[128,8,287,4,"_this"],[128,13,287,4],[128,14,288,12,"onGestureHandlerStateChange"],[128,41,288,39],[128,44,288,42],[128,54,289,6,"event"],[128,59,289,39],[128,61,290,9],[129,10,291,6],[129,14,291,10,"event"],[129,19,291,15],[129,20,291,16,"nativeEvent"],[129,31,291,27],[129,32,291,28,"handlerTag"],[129,42,291,38],[129,47,291,43,"_this"],[129,52,291,43],[129,53,291,48,"handlerTag"],[129,63,291,58],[129,65,291,60],[130,12,292,8],[130,16,292,12],[130,23,292,19,"_this"],[130,28,292,19],[130,29,292,24,"props"],[130,34,292,29],[130,35,292,30,"onHandlerStateChange"],[130,55,292,50],[130,60,292,55],[130,70,292,65],[130,72,292,67],[131,14,293,10,"_this"],[131,19,293,10],[131,20,293,15,"props"],[131,25,293,20],[131,26,293,21,"onHandlerStateChange"],[131,46,293,41],[131,58,293,10,"_this"],[131,63,293,10],[131,64,293,15,"props"],[131,69,293,20],[131,70,293,21,"onHandlerStateChange"],[131,90,293,41],[131,91,293,44,"event"],[131,96,293,49],[131,97,293,50],[132,12,294,8],[133,12,296,8],[133,16,296,14,"state"],[133,21,296,42],[133,24,296,45,"event"],[133,29,296,50],[133,30,296,51,"nativeEvent"],[133,41,296,62],[133,42,296,63,"state"],[133,47,296,68],[134,12,297,8],[134,16,297,14,"stateEventName"],[134,30,297,28],[134,33,297,31,"stateToPropMappings"],[134,52,297,50],[134,53,297,51,"state"],[134,58,297,56],[134,59,297,57],[135,12,298,8],[135,16,298,14,"eventHandler"],[135,28,298,26],[135,31,298,29,"stateEventName"],[135,45,298,43],[135,49,298,47,"_this"],[135,54,298,47],[135,55,298,52,"props"],[135,60,298,57],[135,61,298,58,"stateEventName"],[135,75,298,72],[135,76,298,73],[136,12,299,8],[136,16,299,12,"eventHandler"],[136,28,299,24],[136,32,299,28],[136,39,299,35,"eventHandler"],[136,51,299,47],[136,56,299,52],[136,66,299,62],[136,68,299,64],[137,14,300,10,"eventHandler"],[137,26,300,22],[137,27,300,23,"event"],[137,32,300,28],[137,33,300,29],[138,12,301,8],[139,10,302,6],[139,11,302,7],[139,17,302,13],[140,12,303,8,"_this"],[140,17,303,8],[140,18,303,13,"props"],[140,23,303,18],[140,24,303,19,"onGestureHandlerStateChange"],[140,51,303,46],[140,63,303,8,"_this"],[140,68,303,8],[140,69,303,13,"props"],[140,74,303,18],[140,75,303,19,"onGestureHandlerStateChange"],[140,102,303,46],[140,103,303,49,"event"],[140,108,303,54],[140,109,303,55],[141,10,304,6],[142,8,305,4],[142,9,305,5],[143,8,305,5,"_this"],[143,13,305,5],[143,14,307,12,"refHandler"],[143,24,307,22],[143,27,307,25],[143,37,307,26,"node"],[143,41,307,35],[143,43,307,40],[144,10,308,6,"_this"],[144,15,308,6],[144,16,308,11,"viewNode"],[144,24,308,19],[144,27,308,22,"node"],[144,31,308,26],[145,10,310,6],[145,14,310,12,"child"],[145,19,310,17],[145,22,310,20,"React"],[145,27,310,25],[145,28,310,26,"Children"],[145,36,310,34],[145,37,310,35,"only"],[145,41,310,39],[145,42,310,40,"_this"],[145,47,310,40],[145,48,310,45,"props"],[145,53,310,50],[145,54,310,51,"children"],[145,62,310,59],[145,63,310,60],[146,10,311,6],[147,10,312,6],[147,14,312,14,"ref"],[147,17,312,17],[147,20,312,27,"child"],[147,25,312,32],[147,26,312,14,"ref"],[147,29,312,17],[148,10,313,6],[148,14,313,10,"ref"],[148,17,313,13],[148,22,313,18],[148,26,313,22],[148,28,313,24],[149,12,314,8],[149,16,314,12],[149,23,314,19,"ref"],[149,26,314,22],[149,31,314,27],[149,41,314,37],[149,43,314,39],[150,14,315,10,"ref"],[150,17,315,13],[150,18,315,14,"node"],[150,22,315,18],[150,23,315,19],[151,12,316,8],[151,13,316,9],[151,19,316,15],[152,14,317,10,"ref"],[152,17,317,13],[152,18,317,14,"current"],[152,25,317,21],[152,28,317,24,"node"],[152,32,317,28],[153,12,318,8],[154,10,319,6],[155,8,320,4],[155,9,320,5],[156,8,320,5,"_this"],[156,13,320,5],[156,14,322,12,"createGestureHandler"],[156,34,322,32],[156,37,322,35],[156,47,323,6,"newConfig"],[156,56,323,50],[156,58,324,9],[157,10,325,6,"_this"],[157,15,325,6],[157,16,325,11,"config"],[157,22,325,17],[157,25,325,20,"newConfig"],[157,34,325,29],[158,10,327,6,"RNGestureHandlerModule"],[158,41,327,28],[158,42,327,29,"createGestureHandler"],[158,62,327,49],[158,63,328,8,"name"],[158,67,328,12],[158,69,329,8,"_this"],[158,74,329,8],[158,75,329,13,"handlerTag"],[158,85,329,23],[158,87,330,8,"newConfig"],[158,96,331,6],[158,97,331,7],[159,8,332,4],[159,9,332,5],[160,8,332,5,"_this"],[160,13,332,5],[160,14,334,12,"attachGestureHandler"],[160,34,334,32],[160,37,334,35],[160,47,334,36,"newViewTag"],[160,57,334,54],[160,59,334,59],[161,10,335,6,"_this"],[161,15,335,6],[161,16,335,11,"viewTag"],[161,23,335,18],[161,26,335,21,"newViewTag"],[161,36,335,31],[162,10,337,6],[162,14,337,10,"Platform"],[162,35,337,18],[162,36,337,19,"OS"],[162,38,337,21],[162,43,337,26],[162,48,337,31],[162,50,337,33],[163,12,338,8],[164,12,340,10,"RNGestureHandlerModule"],[164,43,340,32],[164,44,340,33,"attachGestureHandler"],[164,64,340,53],[164,65,342,10,"_this"],[164,70,342,10],[164,71,342,15,"handlerTag"],[164,81,342,25],[164,83,343,10,"newViewTag"],[164,93,343,20],[164,95,344,10,"ActionType"],[164,126,344,10],[164,127,344,10,"ActionType"],[164,154,344,20],[164,155,344,21,"JS_FUNCTION_OLD_API"],[164,174,344,40],[165,12,344,42],[166,12,345,10,"_this"],[166,17,345,10],[166,18,345,15,"propsRef"],[166,26,346,8],[166,27,346,9],[167,10,347,6],[167,11,347,7],[167,17,347,13],[168,12,348,8],[168,16,348,8,"registerOldGestureHandler"],[168,47,348,8],[168,48,348,8,"registerOldGestureHandler"],[168,95,348,33],[168,97,348,34,"_this"],[168,102,348,34],[168,103,348,39,"handlerTag"],[168,113,348,49],[168,115,348,51],[169,14,349,10,"onGestureEvent"],[169,28,349,24],[169,30,349,26,"_this"],[169,35,349,26],[169,36,349,31,"onGestureHandlerEvent"],[169,57,349,52],[170,14,350,10,"onGestureStateChange"],[170,34,350,30],[170,36,350,32,"_this"],[170,41,350,32],[170,42,350,37,"onGestureHandlerStateChange"],[171,12,351,8],[171,13,351,9],[171,14,351,10],[172,12,353,8],[172,16,353,14,"actionType"],[172,26,353,24],[172,29,353,28],[172,39,353,28,"_this$props"],[172,50,353,28],[172,52,353,28,"_this$props2"],[172,64,353,28],[172,66,353,34],[173,14,354,10],[173,18,354,16,"onGestureEvent"],[173,32,354,30],[173,36,354,30,"_this$props"],[173,47,354,30],[173,50,354,33,"_this"],[173,55,354,33],[173,56,354,38,"props"],[173,61,354,43],[173,82,354,33,"_this$props"],[173,93,354,33],[173,94,354,45,"onGestureEvent"],[173,108,354,59],[174,14,355,10],[174,18,355,16,"isGestureHandlerWorklet"],[174,41,355,39],[174,44,356,12,"onGestureEvent"],[174,58,356,26],[174,63,357,13],[174,72,357,22],[174,76,357,26,"onGestureEvent"],[174,90,357,40],[174,94,358,14],[174,115,358,35],[174,119,358,39,"onGestureEvent"],[174,133,358,53],[174,134,358,54],[175,14,359,10],[175,18,359,16,"onHandlerStateChange"],[175,38,359,36],[175,42,359,36,"_this$props2"],[175,54,359,36],[175,57,359,39,"_this"],[175,62,359,39],[175,63,359,44,"props"],[175,68,359,49],[175,89,359,39,"_this$props2"],[175,101,359,39],[175,102,359,51,"onHandlerStateChange"],[175,122,359,71],[176,14,360,10],[176,18,360,16,"isStateChangeHandlerWorklet"],[176,45,360,43],[176,48,361,12,"onHandlerStateChange"],[176,68,361,32],[176,73,362,13],[176,82,362,22],[176,86,362,26,"onHandlerStateChange"],[176,106,362,46],[176,110,363,14],[176,131,363,35],[176,135,363,39,"onHandlerStateChange"],[176,155,363,59],[176,156,363,60],[177,14,364,10],[177,18,364,16,"isReanimatedHandler"],[177,37,364,35],[177,40,365,12,"isGestureHandlerWorklet"],[177,63,365,35],[177,67,365,39,"isStateChangeHandlerWorklet"],[177,94,365,66],[178,14,366,10],[178,18,366,14,"isReanimatedHandler"],[178,37,366,33],[178,39,366,35],[179,16,367,12],[180,16,368,12],[180,23,368,19,"ActionType"],[180,54,368,19],[180,55,368,19,"ActionType"],[180,82,368,29],[180,83,368,30,"REANIMATED_WORKLET"],[180,101,368,48],[181,14,369,10],[181,15,369,11],[181,21,369,17],[181,25,369,21,"onGestureEvent"],[181,39,369,35],[181,43,369,39],[181,55,369,51],[181,59,369,55,"onGestureEvent"],[181,73,369,69],[181,75,369,71],[182,16,370,12],[183,16,371,12],[183,23,371,19,"ActionType"],[183,54,371,19],[183,55,371,19,"ActionType"],[183,82,371,29],[183,83,371,30,"NATIVE_ANIMATED_EVENT"],[183,104,371,51],[184,14,372,10],[184,15,372,11],[184,21,372,17],[185,16,373,12],[186,16,374,12],[186,23,374,19,"ActionType"],[186,54,374,19],[186,55,374,19,"ActionType"],[186,82,374,29],[186,83,374,30,"JS_FUNCTION_OLD_API"],[186,102,374,49],[187,14,375,10],[188,12,376,8],[188,13,376,9],[188,14,376,11],[188,15,376,12],[189,12,378,8,"RNGestureHandlerModule"],[189,43,378,30],[189,44,378,31,"attachGestureHandler"],[189,64,378,51],[189,65,379,10,"_this"],[189,70,379,10],[189,71,379,15,"handlerTag"],[189,81,379,25],[189,83,380,10,"newViewTag"],[189,93,380,20],[189,95,381,10,"actionType"],[189,105,382,8],[189,106,382,9],[190,10,383,6],[191,10,385,6],[191,14,385,6,"scheduleFlushOperations"],[191,45,385,6],[191,46,385,6,"scheduleFlushOperations"],[191,80,385,29],[191,82,385,30],[191,83,385,31],[192,10,387,6],[192,14,387,6,"ghQueueMicrotask"],[192,45,387,6],[192,46,387,6,"ghQueueMicrotask"],[192,85,387,22],[192,87,387,23],[192,99,387,29],[193,12,388,8,"MountRegistry"],[193,43,388,8],[193,44,388,8,"MountRegistry"],[193,77,388,21],[193,78,388,22,"gestureHandlerWillMount"],[193,101,388,45],[193,102,388,45,"_this"],[193,107,388,50],[193,108,388,51],[194,10,389,6],[194,11,389,7],[194,12,389,8],[195,8,390,4],[195,9,390,5],[196,8,390,5,"_this"],[196,13,390,5],[196,14,392,12,"updateGestureHandler"],[196,34,392,32],[196,37,392,35],[196,47,393,6,"newConfig"],[196,56,393,50],[196,58,394,9],[197,10,395,6,"_this"],[197,15,395,6],[197,16,395,11,"config"],[197,22,395,17],[197,25,395,20,"newConfig"],[197,34,395,29],[198,10,397,6,"RNGestureHandlerModule"],[198,41,397,28],[198,42,397,29,"updateGestureHandler"],[198,62,397,49],[198,63,397,50,"_this"],[198,68,397,50],[198,69,397,55,"handlerTag"],[198,79,397,65],[198,81,397,67,"newConfig"],[198,90,397,76],[198,91,397,77],[199,10,398,6],[199,14,398,6,"scheduleFlushOperations"],[199,45,398,6],[199,46,398,6,"scheduleFlushOperations"],[199,80,398,29],[199,82,398,30],[199,83,398,31],[200,8,399,4],[200,9,399,5],[201,8,196,6,"_this"],[201,13,196,6],[201,14,196,11,"handlerTag"],[201,24,196,21],[201,27,196,24],[201,31,196,24,"getNextHandlerTag"],[201,62,196,24],[201,63,196,24,"getNextHandlerTag"],[201,103,196,41],[201,105,196,42],[201,106,196,43],[202,8,197,6,"_this"],[202,13,197,6],[202,14,197,11,"config"],[202,20,197,17],[202,23,197,20],[202,24,197,21],[202,25,197,22],[203,8,198,6,"_this"],[203,13,198,6],[203,14,198,11,"propsRef"],[203,22,198,19],[203,25,198,22,"React"],[203,30,198,27],[203,31,198,28,"createRef"],[203,40,198,37],[203,41,198,38],[203,42,198,39],[204,8,199,6,"_this"],[204,13,199,6],[204,14,199,11,"isMountedRef"],[204,26,199,23],[204,29,199,26,"React"],[204,34,199,31],[204,35,199,32,"createRef"],[204,44,199,41],[204,45,199,42],[204,46,199,43],[205,8,200,6,"_this"],[205,13,200,6],[205,14,200,11,"state"],[205,19,200,16],[205,22,200,19],[206,10,200,21,"allowTouches"],[206,22,200,33],[206,24,200,21,"allowTouches"],[207,8,200,34],[207,9,200,35],[208,8,201,6],[208,12,201,10,"props"],[208,17,201,15],[208,18,201,16,"id"],[208,20,201,18],[208,22,201,20],[209,10,202,8],[209,14,202,12,"handlerIDToTag"],[209,45,202,12],[209,46,202,12,"handlerIDToTag"],[209,82,202,26],[209,83,202,27,"props"],[209,88,202,32],[209,89,202,33,"id"],[209,91,202,35],[209,92,202,36],[209,97,202,41,"undefined"],[209,106,202,50],[209,108,202,52],[210,12,203,10],[210,18,203,16],[210,22,203,20,"Error"],[210,27,203,25],[210,28,203,26],[210,48,203,46,"props"],[210,53,203,51],[210,54,203,52,"id"],[210,56,203,54],[210,78,203,76],[210,79,203,77],[211,10,204,8],[212,10,205,8,"handlerIDToTag"],[212,41,205,8],[212,42,205,8,"handlerIDToTag"],[212,78,205,22],[212,79,205,23,"props"],[212,84,205,28],[212,85,205,29,"id"],[212,87,205,31],[212,88,205,32],[212,91,205,35,"_this"],[212,96,205,35],[212,97,205,40,"handlerTag"],[212,107,205,50],[213,8,206,6],[214,8,206,7],[214,15,206,7,"_this"],[214,20,206,7],[215,6,207,4],[216,6,207,5],[216,10,207,5,"_inherits2"],[216,20,207,5],[216,21,207,5,"default"],[216,28,207,5],[216,30,207,5,"Handler"],[216,37,207,5],[216,39,207,5,"_React$Component"],[216,55,207,5],[217,6,207,5],[217,17,207,5,"_createClass2"],[217,30,207,5],[217,31,207,5,"default"],[217,38,207,5],[217,40,207,5,"Handler"],[217,47,207,5],[218,8,207,5,"key"],[218,11,207,5],[219,8,207,5,"value"],[219,13,207,5],[219,15,209,4],[219,24,209,4,"componentDidMount"],[219,41,209,21,"componentDidMount"],[219,42,209,21],[219,44,209,24],[220,10,209,24],[220,14,209,24,"_this2"],[220,20,209,24],[221,10,210,6],[221,14,210,12,"props"],[221,19,210,34],[221,22,210,37],[221,26,210,41],[221,27,210,42,"props"],[221,32,210,47],[222,10,211,6],[222,14,211,10],[222,15,211,11,"isMountedRef"],[222,27,211,23],[222,28,211,24,"current"],[222,35,211,31],[222,38,211,34],[222,42,211,38],[223,10,213,6],[223,14,213,10,"DEV_ON_ANDROID"],[223,28,213,24],[223,30,213,26],[224,12,214,8],[224,16,214,12],[224,17,214,13,"inspectorToggleListener"],[224,40,214,36],[224,43,214,39,"DeviceEventEmitter"],[224,74,214,57],[224,75,214,58,"addListener"],[224,86,214,69],[224,87,215,10],[224,111,215,34],[224,113,216,10],[224,125,216,16],[225,14,217,12,"_this2"],[225,20,217,16],[225,21,217,17,"setState"],[225,29,217,25],[225,30,217,26],[225,40,217,27,"_"],[225,41,217,28],[226,16,217,28],[226,23,217,34],[227,18,217,36,"allowTouches"],[227,30,217,48],[227,32,217,36,"allowTouches"],[228,16,217,49],[228,17,217,50],[229,14,217,50],[229,15,217,51],[229,16,217,52],[230,14,218,12,"_this2"],[230,20,218,16],[230,21,218,17,"update"],[230,27,218,23],[230,28,218,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[230,55,218,51],[230,56,218,52],[231,12,219,10],[231,13,220,8],[231,14,220,9],[232,10,221,6],[233,10,222,6],[233,14,222,10,"hasUnresolvedRefs"],[233,31,222,27],[233,32,222,28,"props"],[233,37,222,33],[233,38,222,34],[233,40,222,36],[234,12,223,8],[235,12,224,8],[236,12,225,8],[237,12,226,8],[238,12,227,8],[239,12,228,8],[240,12,229,8],[240,16,229,8,"ghQueueMicrotask"],[240,47,229,8],[240,48,229,8,"ghQueueMicrotask"],[240,87,229,24],[240,89,229,25],[240,101,229,31],[241,14,230,10,"_this2"],[241,20,230,14],[241,21,230,15,"update"],[241,27,230,21],[241,28,230,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[241,55,230,49],[241,56,230,50],[242,12,231,8],[242,13,231,9],[242,14,231,10],[243,10,232,6],[244,10,234,6],[244,14,234,10],[244,15,234,11,"createGestureHandler"],[244,35,234,31],[244,36,235,8],[244,40,235,8,"filterConfig"],[244,71,235,8],[244,72,235,8,"filterConfig"],[244,95,235,20],[244,97,236,10,"transformProps"],[244,111,236,24],[244,114,236,27,"transformProps"],[244,128,236,41],[244,129,236,42],[244,133,236,46],[244,134,236,47,"props"],[244,139,236,52],[244,140,236,53],[244,143,236,56],[244,147,236,60],[244,148,236,61,"props"],[244,153,236,66],[244,158,236,66,"concat"],[244,164,236,66],[244,169,236,66,"_toConsumableArray2"],[244,188,236,66],[244,189,236,66,"default"],[244,196,236,66],[244,198,237,14,"allowedProps"],[244,210,237,26],[244,217,237,26,"_toConsumableArray2"],[244,236,237,26],[244,237,237,26,"default"],[244,244,237,26],[244,246,237,31,"customNativeProps"],[244,263,237,48],[244,267,238,10,"config"],[244,273,239,8],[244,274,240,6],[244,275,240,7],[245,10,242,6],[245,14,242,10],[245,15,242,11],[245,19,242,15],[245,20,242,16,"viewNode"],[245,28,242,24],[245,30,242,26],[246,12,243,8],[246,18,243,14],[246,22,243,18,"Error"],[246,27,243,23],[246,28,244,10],[246,75,244,57,"Handler"],[246,82,244,64],[246,83,244,65,"displayName"],[246,94,244,76],[246,154,245,8],[246,155,245,9],[247,10,246,6],[248,10,248,6],[248,14,248,10],[248,15,248,11,"attachGestureHandler"],[248,35,248,31],[248,36,248,32],[248,40,248,32,"findNodeHandle"],[248,63,248,46],[248,65,248,47],[248,69,248,51],[248,70,248,52,"viewNode"],[248,78,248,60],[248,79,248,71],[248,80,248,72],[248,81,248,73],[248,82,248,74],[249,8,249,4],[250,6,249,5],[251,8,249,5,"key"],[251,11,249,5],[252,8,249,5,"value"],[252,13,249,5],[252,15,251,4],[252,24,251,4,"componentDidUpdate"],[252,42,251,22,"componentDidUpdate"],[252,43,251,22],[252,45,251,25],[253,10,252,6],[253,14,252,12,"viewTag"],[253,21,252,19],[253,24,252,22],[253,28,252,22,"findNodeHandle"],[253,51,252,36],[253,53,252,37],[253,57,252,41],[253,58,252,42,"viewNode"],[253,66,252,50],[253,67,252,51],[254,10,253,6],[254,14,253,10],[254,18,253,14],[254,19,253,15,"viewTag"],[254,26,253,22],[254,31,253,27,"viewTag"],[254,38,253,34],[254,40,253,36],[255,12,254,8],[255,16,254,12],[255,17,254,13,"attachGestureHandler"],[255,37,254,33],[255,38,254,34,"viewTag"],[255,45,254,51],[255,46,254,52],[255,47,254,53],[255,48,254,54],[256,10,255,6],[257,10,256,6],[257,14,256,10],[257,15,256,11,"update"],[257,21,256,17],[257,22,256,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[257,49,256,45],[257,50,256,46],[258,8,257,4],[259,6,257,5],[260,8,257,5,"key"],[260,11,257,5],[261,8,257,5,"value"],[261,13,257,5],[261,15,259,4],[261,24,259,4,"componentWillUnmount"],[261,44,259,24,"componentWillUnmount"],[261,45,259,24],[261,47,259,27],[262,10,259,27],[262,14,259,27,"_this$inspectorToggle"],[262,35,259,27],[263,10,260,6],[263,11,260,6,"_this$inspectorToggle"],[263,32,260,6],[263,39,260,10],[263,40,260,11,"inspectorToggleListener"],[263,63,260,34],[263,76,260,6,"_this$inspectorToggle"],[263,97,260,6],[263,98,260,36,"remove"],[263,104,260,42],[263,105,260,43],[263,106,260,44],[264,10,261,6],[264,14,261,10],[264,15,261,11,"isMountedRef"],[264,27,261,23],[264,28,261,24,"current"],[264,35,261,31],[264,38,261,34],[264,43,261,39],[265,10,262,6],[265,14,262,10,"Platform"],[265,35,262,18],[265,36,262,19,"OS"],[265,38,262,21],[265,43,262,26],[265,48,262,31],[265,50,262,33],[266,12,263,8],[266,16,263,8,"unregisterOldGestureHandler"],[266,47,263,8],[266,48,263,8,"unregisterOldGestureHandler"],[266,97,263,35],[266,99,263,36],[266,103,263,40],[266,104,263,41,"handlerTag"],[266,114,263,51],[266,115,263,52],[267,10,264,6],[268,10,265,6,"RNGestureHandlerModule"],[268,41,265,28],[268,42,265,29,"dropGestureHandler"],[268,60,265,47],[268,61,265,48],[268,65,265,52],[268,66,265,53,"handlerTag"],[268,76,265,63],[268,77,265,64],[269,10,266,6],[269,14,266,6,"scheduleFlushOperations"],[269,45,266,6],[269,46,266,6,"scheduleFlushOperations"],[269,80,266,29],[269,82,266,30],[269,83,266,31],[270,10,267,6],[271,10,268,6],[271,14,268,12,"handlerID"],[271,23,268,41],[271,26,268,44],[271,30,268,48],[271,31,268,49,"props"],[271,36,268,54],[271,37,268,55,"id"],[271,39,268,57],[272,10,269,6],[272,14,269,10,"handlerID"],[272,23,269,19],[272,25,269,21],[273,12,270,8],[274,12,271,8],[274,19,271,15,"handlerIDToTag"],[274,50,271,15],[274,51,271,15,"handlerIDToTag"],[274,87,271,29],[274,88,271,30,"handlerID"],[274,97,271,39],[274,98,271,40],[275,10,272,6],[276,10,274,6,"MountRegistry"],[276,41,274,6],[276,42,274,6,"MountRegistry"],[276,75,274,19],[276,76,274,20,"gestureHandlerWillUnmount"],[276,101,274,45],[276,102,274,46],[276,106,274,50],[276,107,274,51],[277,8,275,4],[278,6,275,5],[279,8,275,5,"key"],[279,11,275,5],[280,8,275,5,"value"],[280,13,275,5],[280,15,401,4],[280,24,401,12,"update"],[280,30,401,18,"update"],[280,31,401,19,"remainingTries"],[280,45,401,41],[280,47,401,43],[281,10,401,43],[281,14,401,43,"_this3"],[281,20,401,43],[282,10,402,6],[282,14,402,10],[282,15,402,11],[282,19,402,15],[282,20,402,16,"isMountedRef"],[282,32,402,28],[282,33,402,29,"current"],[282,40,402,36],[282,42,402,38],[283,12,403,8],[284,10,404,6],[285,10,406,6],[285,14,406,12,"props"],[285,19,406,34],[285,22,406,37],[285,26,406,41],[285,27,406,42,"props"],[285,32,406,47],[287,10,408,6],[288,10,409,6],[289,10,410,6],[290,10,411,6],[290,14,411,10,"hasUnresolvedRefs"],[290,31,411,27],[290,32,411,28,"props"],[290,37,411,33],[290,38,411,34],[290,42,411,38,"remainingTries"],[290,56,411,52],[290,59,411,55],[290,60,411,56],[290,62,411,58],[291,12,412,8],[291,16,412,8,"ghQueueMicrotask"],[291,47,412,8],[291,48,412,8,"ghQueueMicrotask"],[291,87,412,24],[291,89,412,25],[291,101,412,31],[292,14,413,10,"_this3"],[292,20,413,14],[292,21,413,15,"update"],[292,27,413,21],[292,28,413,22,"remainingTries"],[292,42,413,36],[292,45,413,39],[292,46,413,40],[292,47,413,41],[293,12,414,8],[293,13,414,9],[293,14,414,10],[294,10,415,6],[294,11,415,7],[294,17,415,13],[295,12,416,8],[295,16,416,14,"newConfig"],[295,25,416,23],[295,28,416,26],[295,32,416,26,"filterConfig"],[295,63,416,26],[295,64,416,26,"filterConfig"],[295,87,416,38],[295,89,417,10,"transformProps"],[295,103,417,24],[295,106,417,27,"transformProps"],[295,120,417,41],[295,121,417,42],[295,125,417,46],[295,126,417,47,"props"],[295,131,417,52],[295,132,417,53],[295,135,417,56],[295,139,417,60],[295,140,417,61,"props"],[295,145,417,66],[295,150,417,66,"concat"],[295,156,417,66],[295,161,417,66,"_toConsumableArray2"],[295,180,417,66],[295,181,417,66,"default"],[295,188,417,66],[295,190,418,14,"allowedProps"],[295,202,418,26],[295,209,418,26,"_toConsumableArray2"],[295,228,418,26],[295,229,418,26,"default"],[295,236,418,26],[295,238,418,31,"customNativeProps"],[295,255,418,48],[295,259,419,10,"config"],[295,265,420,8],[295,266,420,9],[296,12,421,8],[296,16,421,12],[296,17,421,13],[296,21,421,13,"deepEqual"],[296,52,421,13],[296,53,421,13,"deepEqual"],[296,74,421,22],[296,76,421,23],[296,80,421,27],[296,81,421,28,"config"],[296,87,421,34],[296,89,421,36,"newConfig"],[296,98,421,45],[296,99,421,46],[296,101,421,48],[297,14,422,10],[297,18,422,14],[297,19,422,15,"updateGestureHandler"],[297,39,422,35],[297,40,422,36,"newConfig"],[297,49,422,45],[297,50,422,46],[298,12,423,8],[299,10,424,6],[300,8,425,4],[301,6,425,5],[302,8,425,5,"key"],[302,11,425,5],[303,8,425,5,"value"],[303,13,425,5],[303,15,427,4],[303,24,427,4,"setNativeProps"],[303,38,427,18,"setNativeProps"],[303,39,427,19,"updates"],[303,46,427,31],[303,48,427,33],[304,10,428,6],[304,14,428,12,"mergedProps"],[304,25,428,23],[304,28,428,23,"Object"],[304,34,428,23],[304,35,428,23,"assign"],[304,41,428,23],[304,46,428,31],[304,50,428,35],[304,51,428,36,"props"],[304,56,428,41],[304,58,428,46,"updates"],[304,65,428,53],[304,66,428,55],[305,10,429,6],[305,14,429,12,"newConfig"],[305,23,429,21],[305,26,429,24],[305,30,429,24,"filterConfig"],[305,61,429,24],[305,62,429,24,"filterConfig"],[305,85,429,36],[305,87,430,8,"transformProps"],[305,101,430,22],[305,104,430,25,"transformProps"],[305,118,430,39],[305,119,430,40,"mergedProps"],[305,130,430,51],[305,131,430,52],[305,134,430,55,"mergedProps"],[305,145,430,66],[305,150,430,66,"concat"],[305,156,430,66],[305,161,430,66,"_toConsumableArray2"],[305,180,430,66],[305,181,430,66,"default"],[305,188,430,66],[305,190,431,12,"allowedProps"],[305,202,431,24],[305,209,431,24,"_toConsumableArray2"],[305,228,431,24],[305,229,431,24,"default"],[305,236,431,24],[305,238,431,29,"customNativeProps"],[305,255,431,46],[305,259,432,8,"config"],[305,265,433,6],[305,266,433,7],[306,10,434,6],[306,14,434,10],[306,15,434,11,"updateGestureHandler"],[306,35,434,31],[306,36,434,32,"newConfig"],[306,45,434,41],[306,46,434,42],[307,8,435,4],[308,6,435,5],[309,8,435,5,"key"],[309,11,435,5],[310,8,435,5,"value"],[310,13,435,5],[310,15,437,4],[310,24,437,4,"render"],[310,30,437,10,"render"],[310,31,437,10],[310,33,437,13],[311,10,437,13],[311,14,437,13,"_this$props$testID"],[311,32,437,13],[312,10,438,6],[312,14,438,10,"__DEV__"],[312,21,438,17],[312,25,438,21],[312,26,438,22],[312,30,438,26],[312,31,438,27,"context"],[312,38,438,34],[312,42,438,38],[312,43,438,39],[312,47,438,39,"isTestEnv"],[312,78,438,39],[312,79,438,39,"isTestEnv"],[312,100,438,48],[312,102,438,49],[312,103,438,50],[312,107,438,54,"Platform"],[312,128,438,62],[312,129,438,63,"OS"],[312,131,438,65],[312,136,438,70],[312,141,438,75],[312,143,438,77],[313,12,439,8],[313,18,439,14],[313,22,439,18,"Error"],[313,27,439,23],[313,28,440,10,"name"],[313,32,440,14],[313,35,441,12],[313,236,442,8],[313,237,442,9],[314,10,443,6],[315,10,445,6],[315,14,445,10,"gestureEventHandler"],[315,33,445,29],[315,36,445,32],[315,40,445,36],[315,41,445,37,"onGestureHandlerEvent"],[315,62,445,58],[316,10,446,6],[318,10,451,6],[318,14,451,6,"_this$props3"],[318,26,451,6],[318,29,452,8],[318,33,452,12],[318,34,452,13,"props"],[318,39,452,18],[319,12,451,14,"onGestureEvent"],[319,26,451,28],[319,29,451,28,"_this$props3"],[319,41,451,28],[319,42,451,14,"onGestureEvent"],[319,56,451,28],[320,12,451,30,"onGestureHandlerEvent"],[320,33,451,51],[320,36,451,51,"_this$props3"],[320,48,451,51],[320,49,451,30,"onGestureHandlerEvent"],[320,70,451,51],[321,10,453,6],[321,14,453,10,"onGestureEvent"],[321,28,453,24],[321,32,453,28],[321,39,453,35,"onGestureEvent"],[321,53,453,49],[321,58,453,54],[321,68,453,64],[321,70,453,66],[322,12,454,8],[323,12,455,8],[324,12,456,8],[325,12,457,8],[325,16,457,12,"onGestureHandlerEvent"],[325,37,457,33],[325,39,457,35],[326,14,458,10],[326,20,458,16],[326,24,458,20,"Error"],[326,29,458,25],[326,30,459,12],[326,103,460,10],[326,104,460,11],[327,12,461,8],[328,12,462,8,"gestureEventHandler"],[328,31,462,27],[328,34,462,30,"onGestureEvent"],[328,48,462,44],[329,10,463,6],[329,11,463,7],[329,17,463,13],[330,12,464,8],[330,16,465,10,"onGestureHandlerEvent"],[330,37,465,31],[330,41,466,10],[330,48,466,17,"onGestureHandlerEvent"],[330,69,466,38],[330,74,466,43],[330,84,466,53],[330,86,467,10],[331,14,468,10],[331,20,468,16],[331,24,468,20,"Error"],[331,29,468,25],[331,30,469,12],[331,103,470,10],[331,104,470,11],[332,12,471,8],[333,10,472,6],[334,10,474,6],[334,14,474,10,"gestureStateEventHandler"],[334,38,474,34],[334,41,474,37],[334,45,474,41],[334,46,474,42,"onGestureHandlerStateChange"],[334,73,474,69],[335,10,475,6],[337,10,480,6],[337,14,480,6,"_this$props4"],[337,26,480,6],[337,29,483,40],[337,33,483,44],[337,34,483,45,"props"],[337,39,483,50],[338,12,481,8,"onHandlerStateChange"],[338,32,481,28],[338,35,481,28,"_this$props4"],[338,47,481,28],[338,48,481,8,"onHandlerStateChange"],[338,68,481,28],[339,12,482,8,"onGestureHandlerStateChange"],[339,39,482,35],[339,42,482,35,"_this$props4"],[339,54,482,35],[339,55,482,8,"onGestureHandlerStateChange"],[339,82,482,35],[340,10,484,6],[340,14,484,10,"onHandlerStateChange"],[340,34,484,30],[340,38,484,34],[340,45,484,41,"onHandlerStateChange"],[340,65,484,61],[340,70,484,66],[340,80,484,76],[340,82,484,78],[341,12,485,8],[342,12,486,8],[343,12,487,8],[344,12,488,8],[344,16,488,12,"onGestureHandlerStateChange"],[344,43,488,39],[344,45,488,41],[345,14,489,10],[345,20,489,16],[345,24,489,20,"Error"],[345,29,489,25],[345,30,490,12],[345,103,491,10],[345,104,491,11],[346,12,492,8],[347,12,493,8,"gestureStateEventHandler"],[347,36,493,32],[347,39,493,35,"onHandlerStateChange"],[347,59,493,55],[348,10,494,6],[348,11,494,7],[348,17,494,13],[349,12,495,8],[349,16,496,10,"onGestureHandlerStateChange"],[349,43,496,37],[349,47,497,10],[349,54,497,17,"onGestureHandlerStateChange"],[349,81,497,44],[349,86,497,49],[349,96,497,59],[349,98,498,10],[350,14,499,10],[350,20,499,16],[350,24,499,20,"Error"],[350,29,499,25],[350,30,500,12],[350,103,501,10],[350,104,501,11],[351,12,502,8],[352,10,503,6],[353,10,504,6],[353,14,504,12,"events"],[353,20,504,18],[353,23,504,21],[354,12,505,8,"onGestureHandlerEvent"],[354,33,505,29],[354,35,505,31],[354,39,505,35],[354,40,505,36,"state"],[354,45,505,41],[354,46,505,42,"allowTouches"],[354,58,505,54],[354,61,506,12,"gestureEventHandler"],[354,80,506,31],[354,83,507,12,"undefined"],[354,92,507,21],[355,12,508,8,"onGestureHandlerStateChange"],[355,39,508,35],[355,41,508,37],[355,45,508,41],[355,46,508,42,"state"],[355,51,508,47],[355,52,508,48,"allowTouches"],[355,64,508,60],[355,67,509,12,"gestureStateEventHandler"],[355,91,509,36],[355,94,510,12,"undefined"],[356,10,511,6],[356,11,511,7],[357,10,513,6],[357,14,513,10],[357,15,513,11,"propsRef"],[357,23,513,19],[357,24,513,20,"current"],[357,31,513,27],[357,34,513,30,"events"],[357,40,513,36],[358,10,515,6],[358,14,515,10,"child"],[358,19,515,20],[358,22,515,23],[358,26,515,27],[359,10,516,6],[359,14,516,10],[360,12,517,8,"child"],[360,17,517,13],[360,20,517,16,"React"],[360,25,517,21],[360,26,517,22,"Children"],[360,34,517,30],[360,35,517,31,"only"],[360,39,517,35],[360,40,517,36],[360,44,517,40],[360,45,517,41,"props"],[360,50,517,46],[360,51,517,47,"children"],[360,59,517,55],[360,60,517,56],[361,10,518,6],[361,11,518,7],[361,12,518,8],[361,19,518,15,"e"],[361,20,518,16],[361,22,518,18],[362,12,519,8],[362,18,519,14],[362,22,519,18,"Error"],[362,27,519,23],[362,28,520,10],[362,32,520,10,"tagMessage"],[362,63,520,10],[362,64,520,10,"tagMessage"],[362,86,520,20],[362,88,521,12],[362,91,521,15,"name"],[362,95,521,19],[362,251,522,10],[362,252,523,8],[362,253,523,9],[363,10,524,6],[364,10,526,6],[364,14,526,10,"grandChildren"],[364,27,526,23],[364,30,526,26,"child"],[364,35,526,31],[364,36,526,32,"props"],[364,41,526,37],[364,42,526,38,"children"],[364,50,526,46],[365,10,527,6],[365,14,528,8,"__DEV__"],[365,21,528,15],[365,25,529,8,"child"],[365,30,529,13],[365,31,529,14,"type"],[365,35,529,18],[365,40,530,9,"child"],[365,45,530,14],[365,46,530,15,"type"],[365,50,530,19],[365,55,530,24],[365,79,530,48],[365,83,531,10,"child"],[365,88,531,15],[365,89,531,16,"type"],[365,93,531,20],[365,94,531,21,"name"],[365,98,531,25],[365,103,531,30],[365,109,531,36],[365,113,532,10,"child"],[365,118,532,15],[365,119,532,16,"type"],[365,123,532,20],[365,124,532,21,"displayName"],[365,135,532,32],[365,140,532,37],[365,146,532,43],[365,147,532,44],[365,149,533,8],[366,12,534,8,"grandChildren"],[366,25,534,21],[366,28,534,24,"React"],[366,33,534,29],[366,34,534,30,"Children"],[366,42,534,38],[366,43,534,39,"toArray"],[366,50,534,46],[366,51,534,47,"grandChildren"],[366,64,534,60],[366,65,534,61],[367,12,535,8,"grandChildren"],[367,25,535,21],[367,26,535,22,"push"],[367,30,535,26],[367,44,536,10],[367,48,536,10,"_jsxRuntime"],[367,59,536,10],[367,60,536,10,"jsx"],[367,63,536,10],[367,65,536,11,"_$$_REQUIRE"],[367,76,536,11],[367,77,536,11,"_dependencyMap"],[367,91,536,11],[367,124,536,11,"PressabilityDebugView"],[367,145,536,32],[368,14,538,12,"color"],[368,19,538,17],[368,21,538,18],[368,40,538,37],[369,14,539,12,"hitSlop"],[369,21,539,19],[369,23,539,21,"child"],[369,28,539,26],[369,29,539,27,"props"],[369,34,539,32],[369,35,539,33,"hitSlop"],[370,12,539,41],[370,15,537,16],[370,38,540,11],[370,39,541,8],[370,40,541,9],[371,10,542,6],[372,10,544,6],[372,17,544,13,"React"],[372,22,544,18],[372,23,544,19,"cloneElement"],[372,35,544,31],[372,36,545,8,"child"],[372,41,545,13],[372,43,545,13,"Object"],[372,49,545,13],[372,50,545,13,"assign"],[372,56,545,13],[373,12,547,10,"ref"],[373,15,547,13],[373,17,547,15],[373,21,547,19],[373,22,547,20,"refHandler"],[373,32,547,30],[374,12,548,10,"collapsable"],[374,23,548,21],[374,25,548,23],[375,10,548,28],[375,13,549,14],[375,17,549,14,"isTestEnv"],[375,48,549,14],[375,49,549,14,"isTestEnv"],[375,70,549,23],[375,72,549,24],[375,73,549,25],[375,76,550,14],[376,12,551,16,"handlerType"],[376,23,551,27],[376,25,551,29,"name"],[376,29,551,33],[377,12,552,16,"handlerTag"],[377,22,552,26],[377,24,552,28],[377,28,552,32],[377,29,552,33,"handlerTag"],[377,39,552,43],[378,12,553,16,"enabled"],[378,19,553,23],[378,21,553,25],[378,25,553,29],[378,26,553,30,"props"],[378,31,553,35],[378,32,553,36,"enabled"],[379,10,554,14],[379,11,554,15],[379,14,555,14],[379,15,555,15],[379,16,555,16],[380,12,556,10,"testID"],[380,18,556,16],[380,21,556,16,"_this$props$testID"],[380,39,556,16],[380,42,556,18],[380,46,556,22],[380,47,556,23,"props"],[380,52,556,28],[380,53,556,29,"testID"],[380,59,556,35],[380,71,556,35,"_this$props$testID"],[380,89,556,35],[380,92,556,39,"child"],[380,97,556,44],[380,98,556,45,"props"],[380,103,556,50],[380,104,556,51,"testID"],[381,10,556,57],[381,13,557,13,"events"],[381,19,557,19],[381,22,559,8,"grandChildren"],[381,35,560,6],[381,36,560,7],[382,8,561,4],[383,6,561,5],[384,4,561,5],[384,6,179,24,"React"],[384,11,179,29],[384,12,179,30,"Component"],[384,21,179,39],[385,4,179,8,"Handler"],[385,11,179,15],[385,12,183,11,"displayName"],[385,23,183,22],[385,26,183,25,"name"],[385,30,183,29],[386,4,179,8,"Handler"],[386,11,179,15],[386,12,184,11,"contextType"],[386,23,184,22],[386,26,184,25,"GestureHandlerRootViewContext"],[386,64,184,54],[387,4,563,2],[387,11,563,9,"Handler"],[387,18,563,16],[388,2,564,0],[389,0,564,1],[389,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCwF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}