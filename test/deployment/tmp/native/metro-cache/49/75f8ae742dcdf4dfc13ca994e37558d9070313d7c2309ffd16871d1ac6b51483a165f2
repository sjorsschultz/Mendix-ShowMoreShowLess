{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":220,"column":0,"index":7673}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":220,"column":0,"index":7673}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":220,"column":0,"index":7673}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"../utils/log.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"xJwTlCXWvEHR3+3tdgk52DzSJZU="}},{"name":"./Blob","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":26,"index":61}}],"key":"OVta6fzyPXLrj3BMvCvFH7pWZHw="}},{"name":"../utils/uri","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":164},"end":{"line":5,"column":35,"index":199}}],"key":"EYM5VVM8ihCqYCNx4WwY6t5ZN6o="}},{"name":"../fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":62},"end":{"line":3,"column":44,"index":106}}],"key":"ULMMHonvXoIdIjFwnVVnguMRRU8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _log = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../utils/log.js\"));\n  var _Blob = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./Blob\"));\n  var _uri = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../utils/uri\"));\n  var log = new _log.default('FetchPolyfill');\n  log.disable();\n  // log.level(3)\n  var Fetch = exports.default = /*#__PURE__*/(0, _createClass2.default)(function Fetch(config) {\n    (0, _classCallCheck2.default)(this, Fetch);\n    Object.assign(this, new ReactNativeBlobUtilFetchPolyfill(config));\n  });\n  var ReactNativeBlobUtilFetchPolyfill = /*#__PURE__*/(0, _createClass2.default)(function ReactNativeBlobUtilFetchPolyfill(config) {\n    (0, _classCallCheck2.default)(this, ReactNativeBlobUtilFetchPolyfill);\n    this.build = function () {\n      return function (url) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var body = options.body;\n        var promise = Promise.resolve();\n        var blobCache = null;\n        options.headers = options.headers || {};\n        var ctype = options['Content-Type'] || options['content-type'];\n        var ctypeH = options.headers['Content-Type'] || options.headers['content-type'];\n        options.headers['Content-Type'] = ctype || ctypeH;\n        options.headers['content-type'] = ctype || ctypeH;\n        options.method = options.method || 'GET';\n        if (body) {\n          // When the request body is an instance of FormData, create a Blob cache\n          // to upload the body.\n          if (body instanceof FormData) {\n            log.verbose('convert FormData to blob body');\n            promise = _Blob.default.build(body).then(function (b) {\n              blobCache = b;\n              var contentType = 'multipart/form-data;boundary=' + b.multipartBoundary;\n              options.headers['Content-Type'] = contentType;\n              options.headers['content-type'] = contentType;\n              return Promise.resolve(_uri.default.wrap(b._ref));\n            });\n          }\n          // When request body is a Blob, use file URI of the Blob as request body.\n          else if (body.isReactNativeBlobUtilPolyfill) promise = Promise.resolve(_uri.default.wrap(body.blobPath));else if (typeof body !== 'object' && options.headers['Content-Type'] !== 'application/json') promise = Promise.resolve(JSON.stringify(body));else if (typeof body !== 'string') promise = Promise.resolve(body.toString());\n          // send it as-is, leave the native module decide how to send the body.\n          else promise = Promise.resolve(body);\n        }\n        // task is a progress reportable and cancellable Promise, however,\n        // task.then is not, so we have to extend task.then with progress and\n        // cancel function\n        var progressHandler, uploadHandler, cancelHandler;\n        var scopedTask = null;\n        var statefulPromise = promise.then(function (body) {\n          var task = (0, _$$_REQUIRE(_dependencyMap[6], \"../fetch\").config)(config).fetch(options.method, url, options.headers, body);\n          scopedTask = task;\n          if (progressHandler) task.progress(progressHandler);\n          if (uploadHandler) task.uploadProgress(uploadHandler);\n          if (cancelHandler) task.cancel();\n          return task.then(function (resp) {\n            log.verbose('response', resp);\n            // release blob cache created when sending request\n            if (blobCache !== null && blobCache instanceof _Blob.default) blobCache.close();\n            return Promise.resolve(new ReactNativeBlobUtilFetchResponse(resp));\n          });\n        });\n\n        // extend task.then progress with report and cancelling functions\n        statefulPromise.progress = function (fn) {\n          progressHandler = fn;\n        };\n        statefulPromise.uploadProgress = function (fn) {\n          uploadHandler = fn;\n        };\n        statefulPromise.cancel = function () {\n          cancelHandler = true;\n          if (scopedTask && scopedTask.cancel) scopedTask.cancel();\n        };\n        return statefulPromise;\n      };\n    };\n  });\n  var ReactNativeBlobUtilFetchResponse = /*#__PURE__*/function () {\n    function ReactNativeBlobUtilFetchResponse(resp) {\n      (0, _classCallCheck2.default)(this, ReactNativeBlobUtilFetchResponse);\n      var info = resp.info();\n      this.headers = info.headers;\n      this.ok = info.status >= 200 && info.status <= 299, this.status = info.status;\n      this.type = 'basic';\n      this.bodyUsed = false;\n      this.resp = resp;\n      this.rnfbRespInfo = info;\n      this.rnfbResp = resp;\n    }\n    return (0, _createClass2.default)(ReactNativeBlobUtilFetchResponse, [{\n      key: \"rawResp\",\n      value: function rawResp() {\n        return Promise.resolve(this.rnfbResp);\n      }\n    }, {\n      key: \"arrayBuffer\",\n      value: function arrayBuffer() {\n        log.verbose('to arrayBuffer', this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readArrayBuffer(this.rnfbResp, this.rnfbRespInfo);\n      }\n    }, {\n      key: \"text\",\n      value: function text() {\n        log.verbose('to text', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readText(this.rnfbResp, this.rnfbRespInfo);\n      }\n    }, {\n      key: \"json\",\n      value: function json() {\n        log.verbose('to json', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readJSON(this.rnfbResp, this.rnfbRespInfo);\n      }\n    }, {\n      key: \"blob\",\n      value: function blob() {\n        log.verbose('to blob', this.rnfbResp, this.rnfbRespInfo);\n        this.bodyUsed = true;\n        return readBlob(this.rnfbResp, this.rnfbRespInfo);\n      }\n    }]);\n  }();\n  /**\n   * Get response data as array.\n   * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n   * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n   * @return {Promise<Array>}\n   */\n  function readArrayBuffer(resp, info) {\n    switch (info.rnfbEncode) {\n      case 'path':\n        return resp.readFile('ascii');\n        break;\n      default:\n        var buffer = [];\n        var str = resp.text();\n        for (var i in str) {\n          buffer[i] = str.charCodeAt(i);\n        }\n        return Promise.resolve(buffer);\n        break;\n    }\n  }\n\n  /**\n   * Get response data as string.\n   * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n   * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n   * @return {Promise<string>}\n   */\n  function readText(resp, info) {\n    switch (info.rnfbEncode) {\n      case 'base64':\n        return Promise.resolve(resp.text());\n        break;\n      case 'path':\n        return resp.text();\n        break;\n      default:\n        return Promise.resolve(resp.text());\n        break;\n    }\n  }\n\n  /**\n   * Get response data as ReactNativeBlobUtil Blob polyfill object.\n   * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n   * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n   * @return {Promise<Blob>}\n   */\n  function readBlob(resp, info) {\n    log.verbose('readBlob', resp, info);\n    return resp.blob();\n  }\n\n  /**\n   * Get response data as JSON object.\n   * @param  {FetchBlobResponse} resp Response data object from RNFB fetch call.\n   * @param  {ReactNativeBlobUtilResponseInfo} info Response informations.\n   * @return {Promise<object>}\n   */\n  function readJSON(resp, info) {\n    log.verbose('readJSON', resp, info);\n    switch (info.rnfbEncode) {\n      case 'base64':\n        return Promise.resolve(resp.json());\n      case 'path':\n        return resp.json();\n      default:\n        return Promise.resolve(resp.json());\n    }\n  }\n});","lineCount":202,"map":[[9,2,1,0],[9,6,1,0,"_log"],[9,10,1,0],[9,13,1,0,"_interopRequireDefault"],[9,35,1,0],[9,36,1,0,"_$$_REQUIRE"],[9,47,1,0],[9,48,1,0,"_dependencyMap"],[9,62,1,0],[10,2,2,0],[10,6,2,0,"_Blob"],[10,11,2,0],[10,14,2,0,"_interopRequireDefault"],[10,36,2,0],[10,37,2,0,"_$$_REQUIRE"],[10,48,2,0],[10,49,2,0,"_dependencyMap"],[10,63,2,0],[11,2,5,0],[11,6,5,0,"_uri"],[11,10,5,0],[11,13,5,0,"_interopRequireDefault"],[11,35,5,0],[11,36,5,0,"_$$_REQUIRE"],[11,47,5,0],[11,48,5,0,"_dependencyMap"],[11,62,5,0],[12,2,8,0],[12,6,8,6,"log"],[12,9,8,9],[12,12,8,12],[12,16,8,16,"Log"],[12,28,8,19],[12,29,8,20],[12,44,8,35],[12,45,8,36],[13,2,10,0,"log"],[13,5,10,3],[13,6,10,4,"disable"],[13,13,10,11],[13,14,10,12],[13,15,10,13],[14,2,11,0],[15,2,11,0],[15,6,13,21,"Fetch"],[15,11,13,26],[15,14,13,26,"exports"],[15,21,13,26],[15,22,13,26,"default"],[15,29,13,26],[15,49,13,26,"_createClass2"],[15,62,13,26],[15,63,13,26,"default"],[15,70,13,26],[15,72,15,4],[15,81,15,4,"Fetch"],[15,87,15,16,"config"],[15,93,15,49],[15,95,15,51],[16,4,15,51],[16,8,15,51,"_classCallCheck2"],[16,24,15,51],[16,25,15,51,"default"],[16,32,15,51],[16,40,15,51,"Fetch"],[16,45,15,51],[17,4,16,8,"Object"],[17,10,16,14],[17,11,16,15,"assign"],[17,17,16,21],[17,18,16,22],[17,22,16,26],[17,24,16,28],[17,28,16,32,"ReactNativeBlobUtilFetchPolyfill"],[17,60,16,64],[17,61,16,65,"config"],[17,67,16,71],[17,68,16,72],[17,69,16,73],[18,2,17,4],[18,3,17,5],[19,2,17,5],[19,6,21,6,"ReactNativeBlobUtilFetchPolyfill"],[19,38,21,38],[19,58,21,38,"_createClass2"],[19,71,21,38],[19,72,21,38,"default"],[19,79,21,38],[19,81,23,4],[19,90,23,4,"ReactNativeBlobUtilFetchPolyfill"],[19,123,23,16,"config"],[19,129,23,49],[19,131,23,51],[20,4,23,51],[20,8,23,51,"_classCallCheck2"],[20,24,23,51],[20,25,23,51,"default"],[20,32,23,51],[20,40,23,51,"ReactNativeBlobUtilFetchPolyfill"],[20,72,23,51],[21,4,24,8],[21,8,24,12],[21,9,24,13,"build"],[21,14,24,18],[21,17,24,21],[22,6,24,21],[22,13,24,27],[22,23,24,28,"url"],[22,26,24,31],[22,28,24,50],[23,8,24,50],[23,12,24,33,"options"],[23,19,24,40],[23,22,24,40,"arguments"],[23,31,24,40],[23,32,24,40,"length"],[23,38,24,40],[23,46,24,40,"arguments"],[23,55,24,40],[23,63,24,40,"undefined"],[23,72,24,40],[23,75,24,40,"arguments"],[23,84,24,40],[23,90,24,43],[23,91,24,44],[23,92,24,45],[24,8,26,12],[24,12,26,16,"body"],[24,16,26,20],[24,19,26,23,"options"],[24,26,26,30],[24,27,26,31,"body"],[24,31,26,35],[25,8,27,12],[25,12,27,16,"promise"],[25,19,27,23],[25,22,27,26,"Promise"],[25,29,27,33],[25,30,27,34,"resolve"],[25,37,27,41],[25,38,27,42],[25,39,27,43],[26,8,28,12],[26,12,28,16,"blobCache"],[26,21,28,25],[26,24,28,28],[26,28,28,32],[27,8,30,12,"options"],[27,15,30,19],[27,16,30,20,"headers"],[27,23,30,27],[27,26,30,30,"options"],[27,33,30,37],[27,34,30,38,"headers"],[27,41,30,45],[27,45,30,49],[27,46,30,50],[27,47,30,51],[28,8,31,12],[28,12,31,16,"ctype"],[28,17,31,21],[28,20,31,24,"options"],[28,27,31,31],[28,28,31,32],[28,42,31,46],[28,43,31,47],[28,47,31,51,"options"],[28,54,31,58],[28,55,31,59],[28,69,31,73],[28,70,31,74],[29,8,32,12],[29,12,32,16,"ctypeH"],[29,18,32,22],[29,21,32,25,"options"],[29,28,32,32],[29,29,32,33,"headers"],[29,36,32,40],[29,37,32,41],[29,51,32,55],[29,52,32,56],[29,56,32,60,"options"],[29,63,32,67],[29,64,32,68,"headers"],[29,71,32,75],[29,72,32,76],[29,86,32,90],[29,87,32,91],[30,8,33,12,"options"],[30,15,33,19],[30,16,33,20,"headers"],[30,23,33,27],[30,24,33,28],[30,38,33,42],[30,39,33,43],[30,42,33,46,"ctype"],[30,47,33,51],[30,51,33,55,"ctypeH"],[30,57,33,61],[31,8,34,12,"options"],[31,15,34,19],[31,16,34,20,"headers"],[31,23,34,27],[31,24,34,28],[31,38,34,42],[31,39,34,43],[31,42,34,46,"ctype"],[31,47,34,51],[31,51,34,55,"ctypeH"],[31,57,34,61],[32,8,35,12,"options"],[32,15,35,19],[32,16,35,20,"method"],[32,22,35,26],[32,25,35,29,"options"],[32,32,35,36],[32,33,35,37,"method"],[32,39,35,43],[32,43,35,47],[32,48,35,52],[33,8,36,12],[33,12,36,16,"body"],[33,16,36,20],[33,18,36,22],[34,10,37,16],[35,10,38,16],[36,10,39,16],[36,14,39,20,"body"],[36,18,39,24],[36,30,39,36,"FormData"],[36,38,39,44],[36,40,39,46],[37,12,40,20,"log"],[37,15,40,23],[37,16,40,24,"verbose"],[37,23,40,31],[37,24,40,32],[37,55,40,63],[37,56,40,64],[38,12,41,20,"promise"],[38,19,41,27],[38,22,41,30,"Blob"],[38,35,41,34],[38,36,41,35,"build"],[38,41,41,40],[38,42,41,41,"body"],[38,46,41,45],[38,47,41,46],[38,48,41,47,"then"],[38,52,41,51],[38,53,41,52],[38,63,41,53,"b"],[38,64,41,54],[38,66,41,59],[39,14,42,24,"blobCache"],[39,23,42,33],[39,26,42,36,"b"],[39,27,42,37],[40,14,44,24],[40,18,44,30,"contentType"],[40,29,44,41],[40,32,44,44],[40,63,44,75],[40,66,44,78,"b"],[40,67,44,79],[40,68,44,80,"multipartBoundary"],[40,85,44,97],[41,14,45,24,"options"],[41,21,45,31],[41,22,45,32,"headers"],[41,29,45,39],[41,30,45,40],[41,44,45,54],[41,45,45,55],[41,48,45,58,"contentType"],[41,59,45,69],[42,14,46,24,"options"],[42,21,46,31],[42,22,46,32,"headers"],[42,29,46,39],[42,30,46,40],[42,44,46,54],[42,45,46,55],[42,48,46,58,"contentType"],[42,59,46,69],[43,14,47,24],[43,21,47,31,"Promise"],[43,28,47,38],[43,29,47,39,"resolve"],[43,36,47,46],[43,37,47,47,"URIUtil"],[43,49,47,54],[43,50,47,55,"wrap"],[43,54,47,59],[43,55,47,60,"b"],[43,56,47,61],[43,57,47,62,"_ref"],[43,61,47,66],[43,62,47,67],[43,63,47,68],[44,12,48,20],[44,13,48,21],[44,14,48,22],[45,10,49,16],[46,10,50,16],[47,10,50,16],[47,15,51,21],[47,19,51,25,"body"],[47,23,51,29],[47,24,51,30,"isReactNativeBlobUtilPolyfill"],[47,53,51,59],[47,55,52,20,"promise"],[47,62,52,27],[47,65,52,30,"Promise"],[47,72,52,37],[47,73,52,38,"resolve"],[47,80,52,45],[47,81,52,46,"URIUtil"],[47,93,52,53],[47,94,52,54,"wrap"],[47,98,52,58],[47,99,52,59,"body"],[47,103,52,63],[47,104,52,64,"blobPath"],[47,112,52,72],[47,113,52,73],[47,114,52,74],[47,115,52,75],[47,120,53,21],[47,124,53,25],[47,131,53,32,"body"],[47,135,53,36],[47,140,53,41],[47,148,53,49],[47,152,53,53,"options"],[47,159,53,60],[47,160,53,61,"headers"],[47,167,53,68],[47,168,53,69],[47,182,53,83],[47,183,53,84],[47,188,53,89],[47,206,53,107],[47,208,54,20,"promise"],[47,215,54,27],[47,218,54,30,"Promise"],[47,225,54,37],[47,226,54,38,"resolve"],[47,233,54,45],[47,234,54,46,"JSON"],[47,238,54,50],[47,239,54,51,"stringify"],[47,248,54,60],[47,249,54,61,"body"],[47,253,54,65],[47,254,54,66],[47,255,54,67],[47,256,54,68],[47,261,55,21],[47,265,55,25],[47,272,55,32,"body"],[47,276,55,36],[47,281,55,41],[47,289,55,49],[47,291,56,20,"promise"],[47,298,56,27],[47,301,56,30,"Promise"],[47,308,56,37],[47,309,56,38,"resolve"],[47,316,56,45],[47,317,56,46,"body"],[47,321,56,50],[47,322,56,51,"toString"],[47,330,56,59],[47,331,56,60],[47,332,56,61],[47,333,56,62],[48,10,57,16],[49,10,57,16],[49,15,59,20,"promise"],[49,22,59,27],[49,25,59,30,"Promise"],[49,32,59,37],[49,33,59,38,"resolve"],[49,40,59,45],[49,41,59,46,"body"],[49,45,59,50],[49,46,59,51],[50,8,60,12],[51,8,61,12],[52,8,62,12],[53,8,63,12],[54,8,64,12],[54,12,64,16,"progressHandler"],[54,27,64,31],[54,29,64,33,"uploadHandler"],[54,42,64,46],[54,44,64,48,"cancelHandler"],[54,57,64,61],[55,8,65,12],[55,12,65,16,"scopedTask"],[55,22,65,26],[55,25,65,29],[55,29,65,33],[56,8,66,12],[56,12,66,16,"statefulPromise"],[56,27,66,31],[56,30,66,34,"promise"],[56,37,66,41],[56,38,67,17,"then"],[56,42,67,21],[56,43,67,22],[56,53,67,23,"body"],[56,57,67,27],[56,59,67,32],[57,10,68,20],[57,14,68,24,"task"],[57,18,68,28],[57,21,68,31],[57,25,68,31,"RNconfig"],[57,55,68,31],[57,56,68,31,"RNconfig"],[57,74,68,39],[57,76,68,40,"config"],[57,82,68,46],[57,83,68,47],[57,84,69,25,"fetch"],[57,89,69,30],[57,90,69,31,"options"],[57,97,69,38],[57,98,69,39,"method"],[57,104,69,45],[57,106,69,47,"url"],[57,109,69,50],[57,111,69,52,"options"],[57,118,69,59],[57,119,69,60,"headers"],[57,126,69,67],[57,128,69,69,"body"],[57,132,69,73],[57,133,69,74],[58,10,70,20,"scopedTask"],[58,20,70,30],[58,23,70,33,"task"],[58,27,70,37],[59,10,71,20],[59,14,71,24,"progressHandler"],[59,29,71,39],[59,31,72,24,"task"],[59,35,72,28],[59,36,72,29,"progress"],[59,44,72,37],[59,45,72,38,"progressHandler"],[59,60,72,53],[59,61,72,54],[60,10,73,20],[60,14,73,24,"uploadHandler"],[60,27,73,37],[60,29,74,24,"task"],[60,33,74,28],[60,34,74,29,"uploadProgress"],[60,48,74,43],[60,49,74,44,"uploadHandler"],[60,62,74,57],[60,63,74,58],[61,10,75,20],[61,14,75,24,"cancelHandler"],[61,27,75,37],[61,29,76,24,"task"],[61,33,76,28],[61,34,76,29,"cancel"],[61,40,76,35],[61,41,76,36],[61,42,76,37],[62,10,77,20],[62,17,77,27,"task"],[62,21,77,31],[62,22,77,32,"then"],[62,26,77,36],[62,27,77,37],[62,37,77,38,"resp"],[62,41,77,42],[62,43,77,47],[63,12,78,24,"log"],[63,15,78,27],[63,16,78,28,"verbose"],[63,23,78,35],[63,24,78,36],[63,34,78,46],[63,36,78,48,"resp"],[63,40,78,52],[63,41,78,53],[64,12,79,24],[65,12,80,24],[65,16,80,28,"blobCache"],[65,25,80,37],[65,30,80,42],[65,34,80,46],[65,38,80,50,"blobCache"],[65,47,80,59],[65,59,80,71,"Blob"],[65,72,80,75],[65,74,81,28,"blobCache"],[65,83,81,37],[65,84,81,38,"close"],[65,89,81,43],[65,90,81,44],[65,91,81,45],[66,12,82,24],[66,19,82,31,"Promise"],[66,26,82,38],[66,27,82,39,"resolve"],[66,34,82,46],[66,35,82,47],[66,39,82,51,"ReactNativeBlobUtilFetchResponse"],[66,71,82,83],[66,72,82,84,"resp"],[66,76,82,88],[66,77,82,89],[66,78,82,90],[67,10,83,20],[67,11,83,21],[67,12,83,22],[68,8,84,16],[68,9,84,17],[68,10,84,18],[70,8,86,12],[71,8,87,12,"statefulPromise"],[71,23,87,27],[71,24,87,28,"progress"],[71,32,87,36],[71,35,87,39],[71,45,87,40,"fn"],[71,47,87,42],[71,49,87,47],[72,10,88,16,"progressHandler"],[72,25,88,31],[72,28,88,34,"fn"],[72,30,88,36],[73,8,89,12],[73,9,89,13],[74,8,90,12,"statefulPromise"],[74,23,90,27],[74,24,90,28,"uploadProgress"],[74,38,90,42],[74,41,90,45],[74,51,90,46,"fn"],[74,53,90,48],[74,55,90,53],[75,10,91,16,"uploadHandler"],[75,23,91,29],[75,26,91,32,"fn"],[75,28,91,34],[76,8,92,12],[76,9,92,13],[77,8,93,12,"statefulPromise"],[77,23,93,27],[77,24,93,28,"cancel"],[77,30,93,34],[77,33,93,37],[77,45,93,43],[78,10,94,16,"cancelHandler"],[78,23,94,29],[78,26,94,32],[78,30,94,36],[79,10,95,16],[79,14,95,20,"scopedTask"],[79,24,95,30],[79,28,95,34,"scopedTask"],[79,38,95,44],[79,39,95,45,"cancel"],[79,45,95,51],[79,47,96,20,"scopedTask"],[79,57,96,30],[79,58,96,31,"cancel"],[79,64,96,37],[79,65,96,38],[79,66,96,39],[80,8,97,12],[80,9,97,13],[81,8,99,12],[81,15,99,19,"statefulPromise"],[81,30,99,34],[82,6,101,8],[82,7,101,9],[83,4,101,9],[84,2,102,4],[84,3,102,5],[85,2,102,5],[85,6,106,6,"ReactNativeBlobUtilFetchResponse"],[85,38,106,38],[86,4,108,4],[86,13,108,4,"ReactNativeBlobUtilFetchResponse"],[86,46,108,16,"resp"],[86,50,108,39],[86,52,108,41],[87,6,108,41],[87,10,108,41,"_classCallCheck2"],[87,26,108,41],[87,27,108,41,"default"],[87,34,108,41],[87,42,108,41,"ReactNativeBlobUtilFetchResponse"],[87,74,108,41],[88,6,109,8],[88,10,109,12,"info"],[88,14,109,16],[88,17,109,19,"resp"],[88,21,109,23],[88,22,109,24,"info"],[88,26,109,28],[88,27,109,29],[88,28,109,30],[89,6,110,8],[89,10,110,12],[89,11,110,13,"headers"],[89,18,110,20],[89,21,110,23,"info"],[89,25,110,27],[89,26,110,28,"headers"],[89,33,110,35],[90,6,111,8],[90,10,111,12],[90,11,111,13,"ok"],[90,13,111,15],[90,16,111,18,"info"],[90,20,111,22],[90,21,111,23,"status"],[90,27,111,29],[90,31,111,33],[90,34,111,36],[90,38,111,40,"info"],[90,42,111,44],[90,43,111,45,"status"],[90,49,111,51],[90,53,111,55],[90,56,111,58],[90,58,112,12],[90,62,112,16],[90,63,112,17,"status"],[90,69,112,23],[90,72,112,26,"info"],[90,76,112,30],[90,77,112,31,"status"],[90,83,112,37],[91,6,113,8],[91,10,113,12],[91,11,113,13,"type"],[91,15,113,17],[91,18,113,20],[91,25,113,27],[92,6,114,8],[92,10,114,12],[92,11,114,13,"bodyUsed"],[92,19,114,21],[92,22,114,24],[92,27,114,29],[93,6,115,8],[93,10,115,12],[93,11,115,13,"resp"],[93,15,115,17],[93,18,115,20,"resp"],[93,22,115,24],[94,6,116,8],[94,10,116,12],[94,11,116,13,"rnfbRespInfo"],[94,23,116,25],[94,26,116,28,"info"],[94,30,116,32],[95,6,117,8],[95,10,117,12],[95,11,117,13,"rnfbResp"],[95,19,117,21],[95,22,117,24,"resp"],[95,26,117,28],[96,4,118,4],[97,4,118,5],[97,15,118,5,"_createClass2"],[97,28,118,5],[97,29,118,5,"default"],[97,36,118,5],[97,38,118,5,"ReactNativeBlobUtilFetchResponse"],[97,70,118,5],[98,6,118,5,"key"],[98,9,118,5],[99,6,118,5,"value"],[99,11,118,5],[99,13,120,4],[99,22,120,4,"rawResp"],[99,29,120,11,"rawResp"],[99,30,120,11],[99,32,120,14],[100,8,121,8],[100,15,121,15,"Promise"],[100,22,121,22],[100,23,121,23,"resolve"],[100,30,121,30],[100,31,121,31],[100,35,121,35],[100,36,121,36,"rnfbResp"],[100,44,121,44],[100,45,121,45],[101,6,122,4],[102,4,122,5],[103,6,122,5,"key"],[103,9,122,5],[104,6,122,5,"value"],[104,11,122,5],[104,13,124,4],[104,22,124,4,"arrayBuffer"],[104,33,124,15,"arrayBuffer"],[104,34,124,15],[104,36,124,18],[105,8,125,8,"log"],[105,11,125,11],[105,12,125,12,"verbose"],[105,19,125,19],[105,20,125,20],[105,36,125,36],[105,38,125,38],[105,42,125,42],[105,43,125,43,"rnfbRespInfo"],[105,55,125,55],[105,56,125,56],[106,8,126,8],[106,12,126,12],[106,13,126,13,"bodyUsed"],[106,21,126,21],[106,24,126,24],[106,28,126,28],[107,8,127,8],[107,15,127,15,"readArrayBuffer"],[107,30,127,30],[107,31,127,31],[107,35,127,35],[107,36,127,36,"rnfbResp"],[107,44,127,44],[107,46,127,46],[107,50,127,50],[107,51,127,51,"rnfbRespInfo"],[107,63,127,63],[107,64,127,64],[108,6,128,4],[109,4,128,5],[110,6,128,5,"key"],[110,9,128,5],[111,6,128,5,"value"],[111,11,128,5],[111,13,130,4],[111,22,130,4,"text"],[111,26,130,8,"text"],[111,27,130,8],[111,29,130,11],[112,8,131,8,"log"],[112,11,131,11],[112,12,131,12,"verbose"],[112,19,131,19],[112,20,131,20],[112,29,131,29],[112,31,131,31],[112,35,131,35],[112,36,131,36,"rnfbResp"],[112,44,131,44],[112,46,131,46],[112,50,131,50],[112,51,131,51,"rnfbRespInfo"],[112,63,131,63],[112,64,131,64],[113,8,132,8],[113,12,132,12],[113,13,132,13,"bodyUsed"],[113,21,132,21],[113,24,132,24],[113,28,132,28],[114,8,133,8],[114,15,133,15,"readText"],[114,23,133,23],[114,24,133,24],[114,28,133,28],[114,29,133,29,"rnfbResp"],[114,37,133,37],[114,39,133,39],[114,43,133,43],[114,44,133,44,"rnfbRespInfo"],[114,56,133,56],[114,57,133,57],[115,6,134,4],[116,4,134,5],[117,6,134,5,"key"],[117,9,134,5],[118,6,134,5,"value"],[118,11,134,5],[118,13,136,4],[118,22,136,4,"json"],[118,26,136,8,"json"],[118,27,136,8],[118,29,136,11],[119,8,137,8,"log"],[119,11,137,11],[119,12,137,12,"verbose"],[119,19,137,19],[119,20,137,20],[119,29,137,29],[119,31,137,31],[119,35,137,35],[119,36,137,36,"rnfbResp"],[119,44,137,44],[119,46,137,46],[119,50,137,50],[119,51,137,51,"rnfbRespInfo"],[119,63,137,63],[119,64,137,64],[120,8,138,8],[120,12,138,12],[120,13,138,13,"bodyUsed"],[120,21,138,21],[120,24,138,24],[120,28,138,28],[121,8,139,8],[121,15,139,15,"readJSON"],[121,23,139,23],[121,24,139,24],[121,28,139,28],[121,29,139,29,"rnfbResp"],[121,37,139,37],[121,39,139,39],[121,43,139,43],[121,44,139,44,"rnfbRespInfo"],[121,56,139,56],[121,57,139,57],[122,6,140,4],[123,4,140,5],[124,6,140,5,"key"],[124,9,140,5],[125,6,140,5,"value"],[125,11,140,5],[125,13,142,4],[125,22,142,4,"blob"],[125,26,142,8,"blob"],[125,27,142,8],[125,29,142,11],[126,8,143,8,"log"],[126,11,143,11],[126,12,143,12,"verbose"],[126,19,143,19],[126,20,143,20],[126,29,143,29],[126,31,143,31],[126,35,143,35],[126,36,143,36,"rnfbResp"],[126,44,143,44],[126,46,143,46],[126,50,143,50],[126,51,143,51,"rnfbRespInfo"],[126,63,143,63],[126,64,143,64],[127,8,144,8],[127,12,144,12],[127,13,144,13,"bodyUsed"],[127,21,144,21],[127,24,144,24],[127,28,144,28],[128,8,145,8],[128,15,145,15,"readBlob"],[128,23,145,23],[128,24,145,24],[128,28,145,28],[128,29,145,29,"rnfbResp"],[128,37,145,37],[128,39,145,39],[128,43,145,43],[128,44,145,44,"rnfbRespInfo"],[128,56,145,56],[128,57,145,57],[129,6,146,4],[130,4,146,5],[131,2,146,5],[132,2,149,0],[133,0,150,0],[134,0,151,0],[135,0,152,0],[136,0,153,0],[137,0,154,0],[138,2,155,0],[138,11,155,9,"readArrayBuffer"],[138,26,155,24,"readArrayBuffer"],[138,27,155,25,"resp"],[138,31,155,29],[138,33,155,31,"info"],[138,37,155,35],[138,39,155,53],[139,4,156,4],[139,12,156,12,"info"],[139,16,156,16],[139,17,156,17,"rnfbEncode"],[139,27,156,27],[140,6,157,8],[140,11,157,13],[140,17,157,19],[141,8,158,12],[141,15,158,19,"resp"],[141,19,158,23],[141,20,158,24,"readFile"],[141,28,158,32],[141,29,158,33],[141,36,158,40],[141,37,158,41],[142,8,159,12],[143,6,160,8],[144,8,161,12],[144,12,161,16,"buffer"],[144,18,161,22],[144,21,161,25],[144,23,161,27],[145,8,162,12],[145,12,162,16,"str"],[145,15,162,19],[145,18,162,22,"resp"],[145,22,162,26],[145,23,162,27,"text"],[145,27,162,31],[145,28,162,32],[145,29,162,33],[146,8,163,12],[146,13,163,17],[146,17,163,21,"i"],[146,18,163,22],[146,22,163,26,"str"],[146,25,163,29],[146,27,163,31],[147,10,164,16,"buffer"],[147,16,164,22],[147,17,164,23,"i"],[147,18,164,24],[147,19,164,25],[147,22,164,28,"str"],[147,25,164,31],[147,26,164,32,"charCodeAt"],[147,36,164,42],[147,37,164,43,"i"],[147,38,164,44],[147,39,164,45],[148,8,165,12],[149,8,166,12],[149,15,166,19,"Promise"],[149,22,166,26],[149,23,166,27,"resolve"],[149,30,166,34],[149,31,166,35,"buffer"],[149,37,166,41],[149,38,166,42],[150,8,167,12],[151,4,168,4],[152,2,169,0],[154,2,171,0],[155,0,172,0],[156,0,173,0],[157,0,174,0],[158,0,175,0],[159,0,176,0],[160,2,177,0],[160,11,177,9,"readText"],[160,19,177,17,"readText"],[160,20,177,18,"resp"],[160,24,177,22],[160,26,177,24,"info"],[160,30,177,28],[160,32,177,47],[161,4,178,4],[161,12,178,12,"info"],[161,16,178,16],[161,17,178,17,"rnfbEncode"],[161,27,178,27],[162,6,179,8],[162,11,179,13],[162,19,179,21],[163,8,180,12],[163,15,180,19,"Promise"],[163,22,180,26],[163,23,180,27,"resolve"],[163,30,180,34],[163,31,180,35,"resp"],[163,35,180,39],[163,36,180,40,"text"],[163,40,180,44],[163,41,180,45],[163,42,180,46],[163,43,180,47],[164,8,181,12],[165,6,182,8],[165,11,182,13],[165,17,182,19],[166,8,183,12],[166,15,183,19,"resp"],[166,19,183,23],[166,20,183,24,"text"],[166,24,183,28],[166,25,183,29],[166,26,183,30],[167,8,184,12],[168,6,185,8],[169,8,186,12],[169,15,186,19,"Promise"],[169,22,186,26],[169,23,186,27,"resolve"],[169,30,186,34],[169,31,186,35,"resp"],[169,35,186,39],[169,36,186,40,"text"],[169,40,186,44],[169,41,186,45],[169,42,186,46],[169,43,186,47],[170,8,187,12],[171,4,188,4],[172,2,189,0],[174,2,192,0],[175,0,193,0],[176,0,194,0],[177,0,195,0],[178,0,196,0],[179,0,197,0],[180,2,198,0],[180,11,198,9,"readBlob"],[180,19,198,17,"readBlob"],[180,20,198,18,"resp"],[180,24,198,22],[180,26,198,24,"info"],[180,30,198,28],[180,32,198,45],[181,4,199,4,"log"],[181,7,199,7],[181,8,199,8,"verbose"],[181,15,199,15],[181,16,199,16],[181,26,199,26],[181,28,199,28,"resp"],[181,32,199,32],[181,34,199,34,"info"],[181,38,199,38],[181,39,199,39],[182,4,200,4],[182,11,200,11,"resp"],[182,15,200,15],[182,16,200,16,"blob"],[182,20,200,20],[182,21,200,21],[182,22,200,22],[183,2,201,0],[185,2,203,0],[186,0,204,0],[187,0,205,0],[188,0,206,0],[189,0,207,0],[190,0,208,0],[191,2,209,0],[191,11,209,9,"readJSON"],[191,19,209,17,"readJSON"],[191,20,209,18,"resp"],[191,24,209,22],[191,26,209,24,"info"],[191,30,209,28],[191,32,209,47],[192,4,210,4,"log"],[192,7,210,7],[192,8,210,8,"verbose"],[192,15,210,15],[192,16,210,16],[192,26,210,26],[192,28,210,28,"resp"],[192,32,210,32],[192,34,210,34,"info"],[192,38,210,38],[192,39,210,39],[193,4,211,4],[193,12,211,12,"info"],[193,16,211,16],[193,17,211,17,"rnfbEncode"],[193,27,211,27],[194,6,212,8],[194,11,212,13],[194,19,212,21],[195,8,213,12],[195,15,213,19,"Promise"],[195,22,213,26],[195,23,213,27,"resolve"],[195,30,213,34],[195,31,213,35,"resp"],[195,35,213,39],[195,36,213,40,"json"],[195,40,213,44],[195,41,213,45],[195,42,213,46],[195,43,213,47],[196,6,214,8],[196,11,214,13],[196,17,214,19],[197,8,215,12],[197,15,215,19,"resp"],[197,19,215,23],[197,20,215,24,"json"],[197,24,215,28],[197,25,215,29],[197,26,215,30],[198,6,216,8],[199,8,217,12],[199,15,217,19,"Promise"],[199,22,217,26],[199,23,217,27,"resolve"],[199,30,217,34],[199,31,217,35,"resp"],[199,35,217,39],[199,36,217,40,"json"],[199,40,217,44],[199,41,217,45],[199,42,217,46],[199,43,217,47],[200,4,218,4],[201,2,219,0],[202,0,219,1],[202,3]],"functionMap":{"names":["<global>","Fetch","constructor","ReactNativeBlobUtilFetchPolyfill","ReactNativeBlobUtilFetchPolyfill#constructor","build","<anonymous>","Blob.build.then$argument_0","promise.then$argument_0","task.then$argument_0","statefulPromise.progress","statefulPromise.uploadProgress","statefulPromise.cancel","ReactNativeBlobUtilFetchResponse","ReactNativeBlobUtilFetchResponse#constructor","ReactNativeBlobUtilFetchResponse#rawResp","ReactNativeBlobUtilFetchResponse#arrayBuffer","ReactNativeBlobUtilFetchResponse#text","ReactNativeBlobUtilFetchResponse#json","ReactNativeBlobUtilFetchResponse#blob","readArrayBuffer","readText","readBlob","readJSON"],"mappings":"AAA;eCY;ICE;KDE;CDE;AGE;ICE;qBCC,MC;oDCiB;qBDO;sBEmB;qCCU;qBDM;iBFC;uCIG;aJE;6CKC;aLE;qCMC;aNI;SFI;KDC;CHE;AaE;ICE;KDU;IEE;KFE;IGE;KHI;IIE;KJI;IKE;KLI;IME;KNI;CbC;AoBQ;CpBc;AqBQ;CrBY;AsBS;CtBG;AuBQ;CvBU"}},"type":"js/module"}]}