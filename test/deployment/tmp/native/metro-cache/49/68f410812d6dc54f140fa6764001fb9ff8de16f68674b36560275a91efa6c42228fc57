{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":173,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./URLSearchParams","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":55,"column":0},"end":{"line":55,"column":50}}],"key":"AGYhpYP6uhBrDoXW/MvEc5tsN48="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":173,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":173,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./NativeBlobModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":50}}],"key":"U6TvaDH8SXQ+L3uxoXKyiOMXH+8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.URL = void 0;\n  Object.defineProperty(exports, \"URLSearchParams\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[1], \"./URLSearchParams\").URLSearchParams;\n    }\n  });\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _NativeBlobModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./NativeBlobModule\"));\n  var BLOB_URL_PREFIX = null;\n  if (_NativeBlobModule.default && typeof _NativeBlobModule.default.getConstants().BLOB_URI_SCHEME === 'string') {\n    var constants = _NativeBlobModule.default.getConstants();\n    BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n    if (typeof constants.BLOB_URI_HOST === 'string') {\n      BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;\n    }\n  }\n  function validateBaseUrl(url) {\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/.test(url);\n  }\n  var URL = exports.URL = /*#__PURE__*/function () {\n    function URL(url, base) {\n      (0, _classCallCheck2.default)(this, URL);\n      this._searchParamsInstance = null;\n      var baseUrl = null;\n      if (!base || validateBaseUrl(url)) {\n        this._url = url;\n        if (!this._url.endsWith('/')) {\n          this._url += '/';\n        }\n      } else {\n        if (typeof base === 'string') {\n          baseUrl = base;\n          if (!validateBaseUrl(baseUrl)) {\n            throw new TypeError(`Invalid base URL: ${baseUrl}`);\n          }\n        } else {\n          baseUrl = base.toString();\n        }\n        if (baseUrl.endsWith('/')) {\n          baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n        }\n        if (!url.startsWith('/')) {\n          url = `/${url}`;\n        }\n        if (baseUrl.endsWith(url)) {\n          url = '';\n        }\n        this._url = `${baseUrl}${url}`;\n      }\n    }\n    return (0, _createClass2.default)(URL, [{\n      key: \"hash\",\n      get: function get() {\n        throw new Error('URL.hash is not implemented');\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        throw new Error('URL.host is not implemented');\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        throw new Error('URL.hostname is not implemented');\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this.toString();\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        throw new Error('URL.origin is not implemented');\n      }\n    }, {\n      key: \"password\",\n      get: function get() {\n        throw new Error('URL.password is not implemented');\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        throw new Error('URL.pathname not implemented');\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        throw new Error('URL.port is not implemented');\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        throw new Error('URL.protocol is not implemented');\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        throw new Error('URL.search is not implemented');\n      }\n    }, {\n      key: \"searchParams\",\n      get: function get() {\n        if (this._searchParamsInstance == null) {\n          this._searchParamsInstance = new URLSearchParams();\n        }\n        return this._searchParamsInstance;\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParamsInstance === null) {\n          return this._url;\n        }\n        var instanceString = this._searchParamsInstance.toString();\n        var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n        return this._url + separator + instanceString;\n      }\n    }, {\n      key: \"username\",\n      get: function get() {\n        throw new Error('URL.username is not implemented');\n      }\n    }], [{\n      key: \"createObjectURL\",\n      value: function createObjectURL(blob) {\n        if (BLOB_URL_PREFIX === null) {\n          throw new Error('Cannot create URL for blob!');\n        }\n        return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n      }\n    }, {\n      key: \"revokeObjectURL\",\n      value: function revokeObjectURL(url) {}\n    }]);\n  }();\n});","lineCount":149,"map":[[15,2,13,0],[15,6,13,0,"_NativeBlobModule"],[15,23,13,0],[15,26,13,0,"_interopRequireDefault"],[15,48,13,0],[15,49,13,0,"_$$_REQUIRE"],[15,60,13,0],[15,61,13,0,"_dependencyMap"],[15,75,13,0],[16,2,15,0],[16,6,15,4,"BLOB_URL_PREFIX"],[16,21,15,19],[16,24,15,22],[16,28,15,26],[17,2,17,0],[17,6,18,2,"NativeBlobModule"],[17,31,18,18],[17,35,19,2],[17,42,19,9,"NativeBlobModule"],[17,67,19,25],[17,68,19,26,"getConstants"],[17,80,19,38],[17,81,19,39],[17,82,19,40],[17,83,19,41,"BLOB_URI_SCHEME"],[17,98,19,56],[17,103,19,61],[17,111,19,69],[17,113,20,2],[18,4,21,2],[18,8,21,8,"constants"],[18,17,21,17],[18,20,21,20,"NativeBlobModule"],[18,45,21,36],[18,46,21,37,"getConstants"],[18,58,21,49],[18,59,21,50],[18,60,21,51],[19,4,24,2,"BLOB_URL_PREFIX"],[19,19,24,17],[19,22,24,20,"constants"],[19,31,24,29],[19,32,24,30,"BLOB_URI_SCHEME"],[19,47,24,45],[19,50,24,48],[19,53,24,51],[20,4,25,2],[20,8,25,6],[20,15,25,13,"constants"],[20,24,25,22],[20,25,25,23,"BLOB_URI_HOST"],[20,38,25,36],[20,43,25,41],[20,51,25,49],[20,53,25,51],[21,6,26,4,"BLOB_URL_PREFIX"],[21,21,26,19],[21,25,26,23],[21,30,26,28,"constants"],[21,39,26,37],[21,40,26,38,"BLOB_URI_HOST"],[21,53,26,51],[21,56,26,54],[22,4,27,2],[23,2,28,0],[24,2,57,0],[24,11,57,9,"validateBaseUrl"],[24,26,57,24,"validateBaseUrl"],[24,27,57,25,"url"],[24,30,57,36],[24,32,57,38],[25,4,59,2],[25,11,59,9],[25,300,59,298],[25,301,59,299,"test"],[25,305,59,303],[25,306,60,4,"url"],[25,309,61,2],[25,310,61,3],[26,2,62,0],[27,2,62,1],[27,6,64,13,"URL"],[27,9,64,16],[27,12,64,16,"exports"],[27,19,64,16],[27,20,64,16,"URL"],[27,23,64,16],[28,4,80,2],[28,13,80,2,"URL"],[28,17,80,14,"url"],[28,20,80,25],[28,22,80,27,"base"],[28,26,80,45],[28,28,80,47],[29,6,80,47],[29,10,80,47,"_classCallCheck2"],[29,26,80,47],[29,27,80,47,"default"],[29,34,80,47],[29,42,80,47,"URL"],[29,45,80,47],[30,6,80,47],[30,11,66,2,"_searchParamsInstance"],[30,32,66,23],[30,35,66,44],[30,39,66,48],[31,6,81,4],[31,10,81,8,"baseUrl"],[31,17,81,15],[31,20,81,18],[31,24,81,22],[32,6,82,4],[32,10,82,8],[32,11,82,9,"base"],[32,15,82,13],[32,19,82,17,"validateBaseUrl"],[32,34,82,32],[32,35,82,33,"url"],[32,38,82,36],[32,39,82,37],[32,41,82,39],[33,8,83,6],[33,12,83,10],[33,13,83,11,"_url"],[33,17,83,15],[33,20,83,18,"url"],[33,23,83,21],[34,8,84,6],[34,12,84,10],[34,13,84,11],[34,17,84,15],[34,18,84,16,"_url"],[34,22,84,20],[34,23,84,21,"endsWith"],[34,31,84,29],[34,32,84,30],[34,35,84,33],[34,36,84,34],[34,38,84,36],[35,10,85,8],[35,14,85,12],[35,15,85,13,"_url"],[35,19,85,17],[35,23,85,21],[35,26,85,24],[36,8,86,6],[37,6,87,4],[37,7,87,5],[37,13,87,11],[38,8,88,6],[38,12,88,10],[38,19,88,17,"base"],[38,23,88,21],[38,28,88,26],[38,36,88,34],[38,38,88,36],[39,10,89,8,"baseUrl"],[39,17,89,15],[39,20,89,18,"base"],[39,24,89,22],[40,10,90,8],[40,14,90,12],[40,15,90,13,"validateBaseUrl"],[40,30,90,28],[40,31,90,29,"baseUrl"],[40,38,90,36],[40,39,90,37],[40,41,90,39],[41,12,91,10],[41,18,91,16],[41,22,91,20,"TypeError"],[41,31,91,29],[41,32,91,30],[41,53,91,51,"baseUrl"],[41,60,91,58],[41,62,91,60],[41,63,91,61],[42,10,92,8],[43,8,93,6],[43,9,93,7],[43,15,93,13],[44,10,94,8,"baseUrl"],[44,17,94,15],[44,20,94,18,"base"],[44,24,94,22],[44,25,94,23,"toString"],[44,33,94,31],[44,34,94,32],[44,35,94,33],[45,8,95,6],[46,8,96,6],[46,12,96,10,"baseUrl"],[46,19,96,17],[46,20,96,18,"endsWith"],[46,28,96,26],[46,29,96,27],[46,32,96,30],[46,33,96,31],[46,35,96,33],[47,10,97,8,"baseUrl"],[47,17,97,15],[47,20,97,18,"baseUrl"],[47,27,97,25],[47,28,97,26,"slice"],[47,33,97,31],[47,34,97,32],[47,35,97,33],[47,37,97,35,"baseUrl"],[47,44,97,42],[47,45,97,43,"length"],[47,51,97,49],[47,54,97,52],[47,55,97,53],[47,56,97,54],[48,8,98,6],[49,8,99,6],[49,12,99,10],[49,13,99,11,"url"],[49,16,99,14],[49,17,99,15,"startsWith"],[49,27,99,25],[49,28,99,26],[49,31,99,29],[49,32,99,30],[49,34,99,32],[50,10,100,8,"url"],[50,13,100,11],[50,16,100,14],[50,20,100,18,"url"],[50,23,100,21],[50,25,100,23],[51,8,101,6],[52,8,102,6],[52,12,102,10,"baseUrl"],[52,19,102,17],[52,20,102,18,"endsWith"],[52,28,102,26],[52,29,102,27,"url"],[52,32,102,30],[52,33,102,31],[52,35,102,33],[53,10,103,8,"url"],[53,13,103,11],[53,16,103,14],[53,18,103,16],[54,8,104,6],[55,8,105,6],[55,12,105,10],[55,13,105,11,"_url"],[55,17,105,15],[55,20,105,18],[55,23,105,21,"baseUrl"],[55,30,105,28],[55,33,105,31,"url"],[55,36,105,34],[55,38,105,36],[56,6,106,4],[57,4,107,2],[58,4,107,3],[58,15,107,3,"_createClass2"],[58,28,107,3],[58,29,107,3,"default"],[58,36,107,3],[58,38,107,3,"URL"],[58,41,107,3],[59,6,107,3,"key"],[59,9,107,3],[60,6,107,3,"get"],[60,9,107,3],[60,11,109,2],[60,20,109,2,"get"],[60,24,109,2],[60,26,109,21],[61,8,110,4],[61,14,110,10],[61,18,110,14,"Error"],[61,23,110,19],[61,24,110,20],[61,53,110,49],[61,54,110,50],[62,6,111,2],[63,4,111,3],[64,6,111,3,"key"],[64,9,111,3],[65,6,111,3,"get"],[65,9,111,3],[65,11,113,2],[65,20,113,2,"get"],[65,24,113,2],[65,26,113,21],[66,8,114,4],[66,14,114,10],[66,18,114,14,"Error"],[66,23,114,19],[66,24,114,20],[66,53,114,49],[66,54,114,50],[67,6,115,2],[68,4,115,3],[69,6,115,3,"key"],[69,9,115,3],[70,6,115,3,"get"],[70,9,115,3],[70,11,117,2],[70,20,117,2,"get"],[70,24,117,2],[70,26,117,25],[71,8,118,4],[71,14,118,10],[71,18,118,14,"Error"],[71,23,118,19],[71,24,118,20],[71,57,118,53],[71,58,118,54],[72,6,119,2],[73,4,119,3],[74,6,119,3,"key"],[74,9,119,3],[75,6,119,3,"get"],[75,9,119,3],[75,11,121,2],[75,20,121,2,"get"],[75,24,121,2],[75,26,121,21],[76,8,122,4],[76,15,122,11],[76,19,122,15],[76,20,122,16,"toString"],[76,28,122,24],[76,29,122,25],[76,30,122,26],[77,6,123,2],[78,4,123,3],[79,6,123,3,"key"],[79,9,123,3],[80,6,123,3,"get"],[80,9,123,3],[80,11,125,2],[80,20,125,2,"get"],[80,24,125,2],[80,26,125,23],[81,8,126,4],[81,14,126,10],[81,18,126,14,"Error"],[81,23,126,19],[81,24,126,20],[81,55,126,51],[81,56,126,52],[82,6,127,2],[83,4,127,3],[84,6,127,3,"key"],[84,9,127,3],[85,6,127,3,"get"],[85,9,127,3],[85,11,129,2],[85,20,129,2,"get"],[85,24,129,2],[85,26,129,25],[86,8,130,4],[86,14,130,10],[86,18,130,14,"Error"],[86,23,130,19],[86,24,130,20],[86,57,130,53],[86,58,130,54],[87,6,131,2],[88,4,131,3],[89,6,131,3,"key"],[89,9,131,3],[90,6,131,3,"get"],[90,9,131,3],[90,11,133,2],[90,20,133,2,"get"],[90,24,133,2],[90,26,133,25],[91,8,134,4],[91,14,134,10],[91,18,134,14,"Error"],[91,23,134,19],[91,24,134,20],[91,54,134,50],[91,55,134,51],[92,6,135,2],[93,4,135,3],[94,6,135,3,"key"],[94,9,135,3],[95,6,135,3,"get"],[95,9,135,3],[95,11,137,2],[95,20,137,2,"get"],[95,24,137,2],[95,26,137,21],[96,8,138,4],[96,14,138,10],[96,18,138,14,"Error"],[96,23,138,19],[96,24,138,20],[96,53,138,49],[96,54,138,50],[97,6,139,2],[98,4,139,3],[99,6,139,3,"key"],[99,9,139,3],[100,6,139,3,"get"],[100,9,139,3],[100,11,141,2],[100,20,141,2,"get"],[100,24,141,2],[100,26,141,25],[101,8,142,4],[101,14,142,10],[101,18,142,14,"Error"],[101,23,142,19],[101,24,142,20],[101,57,142,53],[101,58,142,54],[102,6,143,2],[103,4,143,3],[104,6,143,3,"key"],[104,9,143,3],[105,6,143,3,"get"],[105,9,143,3],[105,11,145,2],[105,20,145,2,"get"],[105,24,145,2],[105,26,145,23],[106,8,146,4],[106,14,146,10],[106,18,146,14,"Error"],[106,23,146,19],[106,24,146,20],[106,55,146,51],[106,56,146,52],[107,6,147,2],[108,4,147,3],[109,6,147,3,"key"],[109,9,147,3],[110,6,147,3,"get"],[110,9,147,3],[110,11,149,2],[110,20,149,2,"get"],[110,24,149,2],[110,26,149,38],[111,8,150,4],[111,12,150,8],[111,16,150,12],[111,17,150,13,"_searchParamsInstance"],[111,38,150,34],[111,42,150,38],[111,46,150,42],[111,48,150,44],[112,10,151,6],[112,14,151,10],[112,15,151,11,"_searchParamsInstance"],[112,36,151,32],[112,39,151,35],[112,43,151,39,"URLSearchParams"],[112,58,151,54],[112,59,151,55],[112,60,151,56],[113,8,152,4],[114,8,153,4],[114,15,153,11],[114,19,153,15],[114,20,153,16,"_searchParamsInstance"],[114,41,153,37],[115,6,154,2],[116,4,154,3],[117,6,154,3,"key"],[117,9,154,3],[118,6,154,3,"value"],[118,11,154,3],[118,13,156,2],[118,22,156,2,"toJSON"],[118,28,156,8,"toJSON"],[118,29,156,8],[118,31,156,19],[119,8,157,4],[119,15,157,11],[119,19,157,15],[119,20,157,16,"toString"],[119,28,157,24],[119,29,157,25],[119,30,157,26],[120,6,158,2],[121,4,158,3],[122,6,158,3,"key"],[122,9,158,3],[123,6,158,3,"value"],[123,11,158,3],[123,13,160,2],[123,22,160,2,"toString"],[123,30,160,10,"toString"],[123,31,160,10],[123,33,160,21],[124,8,161,4],[124,12,161,8],[124,16,161,12],[124,17,161,13,"_searchParamsInstance"],[124,38,161,34],[124,43,161,39],[124,47,161,43],[124,49,161,45],[125,10,162,6],[125,17,162,13],[125,21,162,17],[125,22,162,18,"_url"],[125,26,162,22],[126,8,163,4],[127,8,165,4],[127,12,165,10,"instanceString"],[127,26,165,24],[127,29,165,27],[127,33,165,31],[127,34,165,32,"_searchParamsInstance"],[127,55,165,53],[127,56,165,54,"toString"],[127,64,165,62],[127,65,165,63],[127,66,165,64],[128,8,166,4],[128,12,166,10,"separator"],[128,21,166,19],[128,24,166,22],[128,28,166,26],[128,29,166,27,"_url"],[128,33,166,31],[128,34,166,32,"indexOf"],[128,41,166,39],[128,42,166,40],[128,45,166,43],[128,46,166,44],[128,49,166,47],[128,50,166,48],[128,51,166,49],[128,54,166,52],[128,57,166,55],[128,60,166,58],[128,63,166,61],[129,8,167,4],[129,15,167,11],[129,19,167,15],[129,20,167,16,"_url"],[129,24,167,20],[129,27,167,23,"separator"],[129,36,167,32],[129,39,167,35,"instanceString"],[129,53,167,49],[130,6,168,2],[131,4,168,3],[132,6,168,3,"key"],[132,9,168,3],[133,6,168,3,"get"],[133,9,168,3],[133,11,170,2],[133,20,170,2,"get"],[133,24,170,2],[133,26,170,25],[134,8,171,4],[134,14,171,10],[134,18,171,14,"Error"],[134,23,171,19],[134,24,171,20],[134,57,171,53],[134,58,171,54],[135,6,172,2],[136,4,172,3],[137,6,172,3,"key"],[137,9,172,3],[138,6,172,3,"value"],[138,11,172,3],[138,13,68,2],[138,22,68,9,"createObjectURL"],[138,37,68,24,"createObjectURL"],[138,38,68,25,"blob"],[138,42,68,35],[138,44,68,45],[139,8,69,4],[139,12,69,8,"BLOB_URL_PREFIX"],[139,27,69,23],[139,32,69,28],[139,36,69,32],[139,38,69,34],[140,10,70,6],[140,16,70,12],[140,20,70,16,"Error"],[140,25,70,21],[140,26,70,22],[140,55,70,51],[140,56,70,52],[141,8,71,4],[142,8,72,4],[142,15,72,11],[142,18,72,14,"BLOB_URL_PREFIX"],[142,33,72,29],[142,36,72,32,"blob"],[142,40,72,36],[142,41,72,37,"data"],[142,45,72,41],[142,46,72,42,"blobId"],[142,52,72,48],[142,63,72,59,"blob"],[142,67,72,63],[142,68,72,64,"data"],[142,72,72,68],[142,73,72,69,"offset"],[142,79,72,75],[142,88,72,84,"blob"],[142,92,72,88],[142,93,72,89,"size"],[142,97,72,93],[142,99,72,95],[143,6,73,2],[144,4,73,3],[145,6,73,3,"key"],[145,9,73,3],[146,6,73,3,"value"],[146,11,73,3],[146,13,75,2],[146,22,75,9,"revokeObjectURL"],[146,37,75,24,"revokeObjectURL"],[146,38,75,25,"url"],[146,41,75,36],[146,43,75,38],[146,44,77,2],[147,4,77,3],[148,2,77,3],[149,0,77,3],[149,3]],"functionMap":{"names":["<global>","validateBaseUrl","URL","createObjectURL","revokeObjectURL","constructor","get__hash","get__host","get__hostname","get__href","get__origin","get__password","get__pathname","get__port","get__protocol","get__search","get__searchParams","toJSON","toString","get__username"],"mappings":"AAA;ACwD;CDK;OEE;ECI;GDK;EEE;GFE;EGG;GH2B;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbE;EcE;GdK;EeE;GfE;EgBE;GhBQ;EiBE;GjBE"}},"type":"js/module"}]}