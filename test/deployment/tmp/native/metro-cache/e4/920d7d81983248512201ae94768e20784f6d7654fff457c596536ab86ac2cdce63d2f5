{"dependencies":[{"name":"./lib/markup","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}}],"key":"jmWyOIwUhawNxN+alOZIsh3EVEk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = exports.default = void 0;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n  var testHasAttribute = function testHasAttribute(val) {\n    try {\n      return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n    } catch (_unused) {\n      return false;\n    }\n  };\n  var testNode = function testNode(val) {\n    var constructorName = val.constructor.name;\n    var nodeType = val.nodeType,\n      tagName = val.tagName;\n    var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || testHasAttribute(val);\n    return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n  };\n  var test = function test(val) {\n    var _val$constructor;\n    return (val == null || (_val$constructor = val.constructor) == null ? void 0 : _val$constructor.name) && testNode(val);\n  };\n  exports.test = test;\n  function nodeIsText(node) {\n    return node.nodeType === TEXT_NODE;\n  }\n  function nodeIsComment(node) {\n    return node.nodeType === COMMENT_NODE;\n  }\n  function nodeIsFragment(node) {\n    return node.nodeType === FRAGMENT_NODE;\n  }\n  var serialize = function serialize(node, config, indentation, depth, refs, printer) {\n    if (nodeIsText(node)) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printText)(node.data, config);\n    }\n    if (nodeIsComment(node)) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printComment)(node.data, config);\n    }\n    var type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase();\n    if (++depth > config.maxDepth) {\n      return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printElementAsLeaf)(type, config);\n    }\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printElement)(type, (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes, function (attr) {\n      return attr.name;\n    }).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce(function (props, attribute) {\n      props[attribute.name] = attribute.value;\n      return props;\n    }, {}), config, indentation + config.indent, depth, refs, printer), (0, _$$_REQUIRE(_dependencyMap[0], \"./lib/markup\").printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n  exports.serialize = serialize;\n  var plugin = {\n    serialize: serialize,\n    test: test\n  };\n  var _default = plugin;\n  exports.default = _default;\n});","lineCount":73,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"test"],[7,14,6,12],[7,17,6,15,"exports"],[7,24,6,22],[7,25,6,23,"serialize"],[7,34,6,32],[7,37,6,35,"exports"],[7,44,6,42],[7,45,6,43,"default"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,8,0],[9,0,9,0],[10,0,10,0],[11,0,11,0],[12,0,12,0],[13,0,13,0],[15,2,15,0],[15,6,15,6,"ELEMENT_NODE"],[15,18,15,18],[15,21,15,21],[15,22,15,22],[16,2,16,0],[16,6,16,6,"TEXT_NODE"],[16,15,16,15],[16,18,16,18],[16,19,16,19],[17,2,17,0],[17,6,17,6,"COMMENT_NODE"],[17,18,17,18],[17,21,17,21],[17,22,17,22],[18,2,18,0],[18,6,18,6,"FRAGMENT_NODE"],[18,19,18,19],[18,22,18,22],[18,24,18,24],[19,2,19,0],[19,6,19,6,"ELEMENT_REGEXP"],[19,20,19,20],[19,23,19,23],[19,50,19,50],[20,2,20,0],[20,6,20,6,"testHasAttribute"],[20,22,20,22],[20,25,20,25],[20,34,20,6,"testHasAttribute"],[20,50,20,22,"testHasAttribute"],[20,51,20,25,"val"],[20,54,20,28],[20,56,20,32],[21,4,21,2],[21,8,21,6],[22,6,22,4],[22,13,22,11],[22,20,22,18,"val"],[22,23,22,21],[22,24,22,22,"hasAttribute"],[22,36,22,34],[22,41,22,39],[22,51,22,49],[22,55,22,53,"val"],[22,58,22,56],[22,59,22,57,"hasAttribute"],[22,71,22,69],[22,72,22,70],[22,76,22,74],[22,77,22,75],[23,4,23,2],[23,5,23,3],[23,6,23,4],[23,13,23,4,"_unused"],[23,20,23,4],[23,22,23,10],[24,6,24,4],[24,13,24,11],[24,18,24,16],[25,4,25,2],[26,2,26,0],[26,3,26,1],[27,2,27,0],[27,6,27,6,"testNode"],[27,14,27,14],[27,17,27,17],[27,26,27,6,"testNode"],[27,34,27,14,"testNode"],[27,35,27,17,"val"],[27,38,27,20],[27,40,27,24],[28,4,28,2],[28,8,28,8,"constructorName"],[28,23,28,23],[28,26,28,26,"val"],[28,29,28,29],[28,30,28,30,"constructor"],[28,41,28,41],[28,42,28,42,"name"],[28,46,28,46],[29,4,29,2],[29,8,29,9,"nodeType"],[29,16,29,17],[29,19,29,30,"val"],[29,22,29,33],[29,23,29,9,"nodeType"],[29,31,29,17],[30,6,29,19,"tagName"],[30,13,29,26],[30,16,29,30,"val"],[30,19,29,33],[30,20,29,19,"tagName"],[30,27,29,26],[31,4,30,2],[31,8,30,8,"isCustomElement"],[31,23,30,23],[31,26,31,5],[31,33,31,12,"tagName"],[31,40,31,19],[31,45,31,24],[31,53,31,32],[31,57,31,36,"tagName"],[31,64,31,43],[31,65,31,44,"includes"],[31,73,31,52],[31,74,31,53],[31,77,31,56],[31,78,31,57],[31,82,32,4,"testHasAttribute"],[31,98,32,20],[31,99,32,21,"val"],[31,102,32,24],[31,103,32,25],[32,4,33,2],[32,11,34,5,"nodeType"],[32,19,34,13],[32,24,34,18,"ELEMENT_NODE"],[32,36,34,30],[32,41,35,7,"ELEMENT_REGEXP"],[32,55,35,21],[32,56,35,22,"test"],[32,60,35,26],[32,61,35,27,"constructorName"],[32,76,35,42],[32,77,35,43],[32,81,35,47,"isCustomElement"],[32,96,35,62],[32,97,35,63],[32,101,36,5,"nodeType"],[32,109,36,13],[32,114,36,18,"TEXT_NODE"],[32,123,36,27],[32,127,36,31,"constructorName"],[32,142,36,46],[32,147,36,51],[32,153,36,58],[32,157,37,5,"nodeType"],[32,165,37,13],[32,170,37,18,"COMMENT_NODE"],[32,182,37,30],[32,186,37,34,"constructorName"],[32,201,37,49],[32,206,37,54],[32,215,37,64],[32,219,38,5,"nodeType"],[32,227,38,13],[32,232,38,18,"FRAGMENT_NODE"],[32,245,38,31],[32,249,38,35,"constructorName"],[32,264,38,50],[32,269,38,55],[32,287,38,74],[33,2,40,0],[33,3,40,1],[34,2,41,0],[34,6,41,6,"test"],[34,10,41,10],[34,13,41,13],[34,22,41,6,"test"],[34,26,41,10,"test"],[34,27,41,13,"val"],[34,30,41,16],[35,4,41,16],[35,8,41,16,"_val$constructor"],[35,24,41,16],[36,4,41,16],[36,11,41,20],[36,12,41,20,"val"],[36,15,41,23],[36,28,41,23,"_val$constructor"],[36,44,41,23],[36,47,41,20,"val"],[36,50,41,23],[36,51,41,25,"constructor"],[36,62,41,36],[36,83,41,20,"_val$constructor"],[36,99,41,20],[36,100,41,38,"name"],[36,104,41,42],[36,109,41,46,"testNode"],[36,117,41,54],[36,118,41,55,"val"],[36,121,41,58],[36,122,41,59],[37,2,41,59],[38,2,42,0,"exports"],[38,9,42,7],[38,10,42,8,"test"],[38,14,42,12],[38,17,42,15,"test"],[38,21,42,19],[39,2,43,0],[39,11,43,9,"nodeIsText"],[39,21,43,19,"nodeIsText"],[39,22,43,20,"node"],[39,26,43,24],[39,28,43,26],[40,4,44,2],[40,11,44,9,"node"],[40,15,44,13],[40,16,44,14,"nodeType"],[40,24,44,22],[40,29,44,27,"TEXT_NODE"],[40,38,44,36],[41,2,45,0],[42,2,46,0],[42,11,46,9,"nodeIsComment"],[42,24,46,22,"nodeIsComment"],[42,25,46,23,"node"],[42,29,46,27],[42,31,46,29],[43,4,47,2],[43,11,47,9,"node"],[43,15,47,13],[43,16,47,14,"nodeType"],[43,24,47,22],[43,29,47,27,"COMMENT_NODE"],[43,41,47,39],[44,2,48,0],[45,2,49,0],[45,11,49,9,"nodeIsFragment"],[45,25,49,23,"nodeIsFragment"],[45,26,49,24,"node"],[45,30,49,28],[45,32,49,30],[46,4,50,2],[46,11,50,9,"node"],[46,15,50,13],[46,16,50,14,"nodeType"],[46,24,50,22],[46,29,50,27,"FRAGMENT_NODE"],[46,42,50,40],[47,2,51,0],[48,2,52,0],[48,6,52,6,"serialize"],[48,15,52,15],[48,18,52,18],[48,27,52,6,"serialize"],[48,36,52,15,"serialize"],[48,37,52,19,"node"],[48,41,52,23],[48,43,52,25,"config"],[48,49,52,31],[48,51,52,33,"indentation"],[48,62,52,44],[48,64,52,46,"depth"],[48,69,52,51],[48,71,52,53,"refs"],[48,75,52,57],[48,77,52,59,"printer"],[48,84,52,66],[48,86,52,71],[49,4,53,2],[49,8,53,6,"nodeIsText"],[49,18,53,16],[49,19,53,17,"node"],[49,23,53,21],[49,24,53,22],[49,26,53,24],[50,6,54,4],[50,13,54,11],[50,14,54,12],[50,15,54,13],[50,17,54,15,"_$$_REQUIRE"],[50,28,54,15],[50,29,54,15,"_dependencyMap"],[50,43,54,15],[50,64,54,23,"printText"],[50,73,54,32],[50,75,54,34,"node"],[50,79,54,38],[50,80,54,39,"data"],[50,84,54,43],[50,86,54,45,"config"],[50,92,54,51],[50,93,54,52],[51,4,55,2],[52,4,56,2],[52,8,56,6,"nodeIsComment"],[52,21,56,19],[52,22,56,20,"node"],[52,26,56,24],[52,27,56,25],[52,29,56,27],[53,6,57,4],[53,13,57,11],[53,14,57,12],[53,15,57,13],[53,17,57,15,"_$$_REQUIRE"],[53,28,57,15],[53,29,57,15,"_dependencyMap"],[53,43,57,15],[53,64,57,23,"printComment"],[53,76,57,35],[53,78,57,37,"node"],[53,82,57,41],[53,83,57,42,"data"],[53,87,57,46],[53,89,57,48,"config"],[53,95,57,54],[53,96,57,55],[54,4,58,2],[55,4,59,2],[55,8,59,8,"type"],[55,12,59,12],[55,15,59,15,"nodeIsFragment"],[55,29,59,29],[55,30,59,30,"node"],[55,34,59,34],[55,35,59,35],[55,38,60,6],[55,56,60,24],[55,59,61,6,"node"],[55,63,61,10],[55,64,61,11,"tagName"],[55,71,61,18],[55,72,61,19,"toLowerCase"],[55,83,61,30],[55,84,61,31],[55,85,61,32],[56,4,62,2],[56,8,62,6],[56,10,62,8,"depth"],[56,15,62,13],[56,18,62,16,"config"],[56,24,62,22],[56,25,62,23,"maxDepth"],[56,33,62,31],[56,35,62,33],[57,6,63,4],[57,13,63,11],[57,14,63,12],[57,15,63,13],[57,17,63,15,"_$$_REQUIRE"],[57,28,63,15],[57,29,63,15,"_dependencyMap"],[57,43,63,15],[57,64,63,23,"printElementAsLeaf"],[57,82,63,41],[57,84,63,43,"type"],[57,88,63,47],[57,90,63,49,"config"],[57,96,63,55],[57,97,63,56],[58,4,64,2],[59,4,65,2],[59,11,65,9],[59,12,65,10],[59,13,65,11],[59,15,65,13,"_$$_REQUIRE"],[59,26,65,13],[59,27,65,13,"_dependencyMap"],[59,41,65,13],[59,62,65,21,"printElement"],[59,74,65,33],[59,76,66,4,"type"],[59,80,66,8],[59,82,67,4],[59,83,67,5],[59,84,67,6],[59,86,67,8,"_$$_REQUIRE"],[59,97,67,8],[59,98,67,8,"_dependencyMap"],[59,112,67,8],[59,133,67,16,"printProps"],[59,143,67,26],[59,145,68,6,"nodeIsFragment"],[59,159,68,20],[59,160,68,21,"node"],[59,164,68,25],[59,165,68,26],[59,168,69,10],[59,170,69,12],[59,173,70,10,"Array"],[59,178,70,15],[59,179,70,16,"from"],[59,183,70,20],[59,184,70,21,"node"],[59,188,70,25],[59,189,70,26,"attributes"],[59,199,70,36],[59,201,70,38],[59,211,70,38,"attr"],[59,215,70,42],[60,6,70,42],[60,13,70,46,"attr"],[60,17,70,50],[60,18,70,51,"name"],[60,22,70,55],[61,4,70,55],[61,6,70,56],[61,7,70,57,"sort"],[61,11,70,61],[61,12,70,62],[61,13,70,63],[61,15,71,6,"nodeIsFragment"],[61,29,71,20],[61,30,71,21,"node"],[61,34,71,25],[61,35,71,26],[61,38,72,10],[61,39,72,11],[61,40,72,12],[61,43,73,10,"Array"],[61,48,73,15],[61,49,73,16,"from"],[61,53,73,20],[61,54,73,21,"node"],[61,58,73,25],[61,59,73,26,"attributes"],[61,69,73,36],[61,70,73,37],[61,71,73,38,"reduce"],[61,77,73,44],[61,78,73,45],[61,88,73,46,"props"],[61,93,73,51],[61,95,73,53,"attribute"],[61,104,73,62],[61,106,73,67],[62,6,74,12,"props"],[62,11,74,17],[62,12,74,18,"attribute"],[62,21,74,27],[62,22,74,28,"name"],[62,26,74,32],[62,27,74,33],[62,30,74,36,"attribute"],[62,39,74,45],[62,40,74,46,"value"],[62,45,74,51],[63,6,75,12],[63,13,75,19,"props"],[63,18,75,24],[64,4,76,10],[64,5,76,11],[64,7,76,13],[64,8,76,14],[64,9,76,15],[64,10,76,16],[64,12,77,6,"config"],[64,18,77,12],[64,20,78,6,"indentation"],[64,31,78,17],[64,34,78,20,"config"],[64,40,78,26],[64,41,78,27,"indent"],[64,47,78,33],[64,49,79,6,"depth"],[64,54,79,11],[64,56,80,6,"refs"],[64,60,80,10],[64,62,81,6,"printer"],[64,69,82,4],[64,70,82,5],[64,72,83,4],[64,73,83,5],[64,74,83,6],[64,76,83,8,"_$$_REQUIRE"],[64,87,83,8],[64,88,83,8,"_dependencyMap"],[64,102,83,8],[64,123,83,16,"printChildren"],[64,136,83,29],[64,138,84,6,"Array"],[64,143,84,11],[64,144,84,12,"prototype"],[64,153,84,21],[64,154,84,22,"slice"],[64,159,84,27],[64,160,84,28,"call"],[64,164,84,32],[64,165,84,33,"node"],[64,169,84,37],[64,170,84,38,"childNodes"],[64,180,84,48],[64,184,84,52,"node"],[64,188,84,56],[64,189,84,57,"children"],[64,197,84,65],[64,198,84,66],[64,200,85,6,"config"],[64,206,85,12],[64,208,86,6,"indentation"],[64,219,86,17],[64,222,86,20,"config"],[64,228,86,26],[64,229,86,27,"indent"],[64,235,86,33],[64,237,87,6,"depth"],[64,242,87,11],[64,244,88,6,"refs"],[64,248,88,10],[64,250,89,6,"printer"],[64,257,90,4],[64,258,90,5],[64,260,91,4,"config"],[64,266,91,10],[64,268,92,4,"indentation"],[64,279,93,2],[64,280,93,3],[65,2,94,0],[65,3,94,1],[66,2,95,0,"exports"],[66,9,95,7],[66,10,95,8,"serialize"],[66,19,95,17],[66,22,95,20,"serialize"],[66,31,95,29],[67,2,96,0],[67,6,96,6,"plugin"],[67,12,96,12],[67,15,96,15],[68,4,97,2,"serialize"],[68,13,97,11],[68,15,97,2,"serialize"],[68,24,97,11],[69,4,98,2,"test"],[69,8,98,6],[69,10,98,2,"test"],[70,2,99,0],[70,3,99,1],[71,2,100,0],[71,6,100,4,"_default"],[71,14,100,12],[71,17,100,15,"plugin"],[71,23,100,21],[72,2,101,0,"exports"],[72,9,101,7],[72,10,101,8,"default"],[72,17,101,15],[72,20,101,18,"_default"],[72,28,101,26],[73,0,101,27],[73,3]],"functionMap":{"names":["<global>","testHasAttribute","testNode","test","nodeIsText","nodeIsComment","nodeIsFragment","serialize","Array.from$argument_1","Array.from.reduce$argument_0"],"mappings":"AAA;yBCmB;CDM;iBEC;CFa;aGC,8CH;AIE;CJE;AKC;CLE;AMC;CNE;kBOC;sCCkB,iBD;6CEG;WFG;CPkB"}},"type":"js/module"}]}