{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":48,"index":22471}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":48,"index":22471}}],"key":"X490zePjq+0IljAc8X0qcBg0iTo="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":48,"index":22471}}],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":491,"column":48,"index":22471}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":36,"index":222},"end":{"line":8,"column":52,"index":238}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":48,"index":325},"end":{"line":10,"column":78,"index":355}}],"key":"Pp42meoAsoBb9zFxGL4kkNu1jlQ="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":37,"column":18,"index":1883},"end":{"line":37,"column":46,"index":1911}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":13,"index":875},"end":{"line":20,"column":34,"index":896}}],"key":"v1w+pnJrgvUP3JbmDiiF/Rw8c9Q="}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":14,"index":838},"end":{"line":19,"column":36,"index":860}}],"key":"8SnoR+UrxjfxCANvsop63w62RIE="}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":417},"end":{"line":12,"column":34,"index":438}},{"start":{"line":12,"column":13,"index":417},"end":{"line":12,"column":34,"index":438}}],"key":"w40I7fSAl4cArv0sXdY5PzQp/gY="}},{"name":"react-is","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":15,"index":256},"end":{"line":9,"column":34,"index":275}}],"key":"hoZupclAije+HbYquo78nDVN6Z8="}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":35,"column":28,"index":1767},"end":{"line":35,"column":64,"index":1803}}],"key":"O7i+dLjDRiPzaa5y8QpxQ8DDztA="}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":30,"index":646},"end":{"line":16,"column":68,"index":684}}],"key":"5gWCKrrjrgRIYljcPNzcln9Btzk="}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":20,"index":1487},"end":{"line":30,"column":48,"index":1515}}],"key":"HgDCzEiSAV0yTGYyjttKBvY79WQ="}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":30,"index":716},"end":{"line":17,"column":68,"index":754}}],"key":"qhsKKNGciKBrWk6APM3SsDmjdJc="}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":460},"end":{"line":13,"column":48,"index":488}}],"key":"J42REN97/MZDKzfzDiREOCKQEZg="}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":21,"index":511},"end":{"line":14,"column":50,"index":540}}],"key":"bgTBGByImll0KHpaLtMugoWLVnI="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":148},"end":{"line":7,"column":51,"index":184}},{"start":{"line":7,"column":15,"index":148},"end":{"line":7,"column":51,"index":184}}],"key":"vLkNXgxjksXU+0sgY9F+q8Dw3b8="}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":36,"column":25,"index":1830},"end":{"line":36,"column":58,"index":1863}}],"key":"dM5Od3yYf8v2580uJzsN1ecJu08="}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":33,"index":1357},"end":{"line":28,"column":71,"index":1395}}],"key":"foIcciQOlm+nL/x1NySTH6kTbFI="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":18,"index":376},"end":{"line":11,"column":44,"index":402}}],"key":"tNACf9IEs8kJ6FfN3urwJPRnTEk="}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":23,"index":1143},"end":{"line":25,"column":54,"index":1174}}],"key":"2ZGv8kx5So0f4Yj+9NGPYeg5WrU="}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":22,"index":1292},"end":{"line":27,"column":52,"index":1322}}],"key":"UxvIwU/ayiO/l2d/5y79ivoQTzI="}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":25,"index":923},"end":{"line":21,"column":58,"index":956}}],"key":"SMvuDfd78eXDOi/PD6SQXskGK8U="}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":30,"index":1427},"end":{"line":29,"column":68,"index":1465}}],"key":"Ng1K6OvBh7jYN95BN+CARdLETXk="}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":32,"column":19,"index":1602},"end":{"line":32,"column":46,"index":1629}}],"key":"dExasn09rF96hkvZF6vI5POqLRQ="}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":34,"column":23,"index":1706},"end":{"line":34,"column":54,"index":1737}}],"key":"Yv9IAV90GbH/zxNOkia76xp7J/Y="}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":28,"index":1545},"end":{"line":31,"column":64,"index":1581}}],"key":"CsctbMNXcq1fw+pk72PkbKO5gy4="}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":42,"index":1218},"end":{"line":26,"column":92,"index":1268}}],"key":"N3WuNA9CkeBBGF3QDk7GrpTVUSk="}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":33,"column":21,"index":1652},"end":{"line":33,"column":50,"index":1681}}],"key":"9iKt1Dz+e2f7rkd0KS2wi4k+diw="}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":22,"index":1088},"end":{"line":24,"column":52,"index":1118}}],"key":"3BJTG03UW5KlNWFxVU3q7UVQd38="}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":24,"index":1032},"end":{"line":23,"column":56,"index":1064}}],"key":"jSJVhQwYPyP3eHYrBu4CiYrWUIc="}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":20,"index":978},"end":{"line":22,"column":48,"index":1006}}],"key":"o/end7Yh7Ih5HNuxYWePE2PQRJg="}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":32,"index":574},"end":{"line":15,"column":72,"index":614}}],"key":"cDJxg6lugakIu5MajpGs42S2Yag="}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":29,"index":785},"end":{"line":18,"column":66,"index":822}}],"key":"bJ6KoGmzbssZqTAA79DINuYJ6nU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\");\n  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\");\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\"];\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"react\"));\n  var _useLatestCallback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"use-latest-callback\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[6], \"react/jsx-runtime\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  // This is to make TypeScript compiler happy\n  _$$_REQUIRE(_dependencyMap[7], \"./types.js\").PrivateValueStore;\n  var isValidKey = function isValidKey(key) {\n    return key === undefined || typeof key === 'string' && key !== '';\n  };\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var _getRouteConfigsFromChildren = function getRouteConfigsFromChildren(children, groupKey, groupOptions, groupLayout) {\n    var configs = React.Children.toArray(children).reduce(function (acc, child) {\n      var _child$type, _child$props;\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === _$$_REQUIRE(_dependencyMap[8], \"./Screen.js\").Screen) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (child.type === React.Fragment || child.type === _$$_REQUIRE(_dependencyMap[9], \"./Group.js\").Group) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push.apply(acc, _toConsumableArray(_getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== _$$_REQUIRE(_dependencyMap[9], \"./Group.js\").Group ? groupOptions : groupOptions != null ? [].concat(_toConsumableArray(groupOptions), [child.props.screenOptions]) : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout)));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : (_child$type = child.type) == null ? void 0 : _child$type.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && (_child$props = child.props) != null && _child$props.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(function (config) {\n        var _config$props = config.props,\n          name = _config$props.name,\n          children = _config$props.children,\n          component = _config$props.component,\n          getComponent = _config$props.getComponent;\n        if (typeof name !== 'string' || !name) {\n          throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n        }\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, _$$_REQUIRE(_dependencyMap[10], \"react-is\").isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, _$$_REQUIRE(_dependencyMap[11], \"./useRegisterNavigator.js\").useRegisterNavigator)();\n    var route = React.useContext(_$$_REQUIRE(_dependencyMap[12], \"./NavigationRouteContext.js\").NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      rest = _objectWithoutProperties(options, _excluded);\n    var routeConfigs = _getRouteConfigsFromChildren(children);\n    var router = (0, _$$_REQUIRE(_dependencyMap[13], \"./useLazyValue.js\").useLazyValue)(function () {\n      if (rest.initialRouteName != null && routeConfigs.every(function (config) {\n        return config.props.name !== rest.initialRouteName;\n      })) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      return createRouter(rest);\n    });\n    var screens = routeConfigs.reduce(function (acc, config) {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(function (config) {\n      return config.props.name;\n    });\n    var routeKeyList = routeNames.reduce(function (acc, curr) {\n      acc[curr] = screens[curr].keys.map(function (key) {\n        return key != null ? key : '';\n      }).join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce(function (acc, curr) {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce(function (acc, curr) {\n      return Object.assign(acc, _defineProperty({}, curr, screens[curr].props.getId));\n    }, {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(function (state) {\n      return state.type === undefined || state.type === router.type;\n    }, [router.type]);\n    var isStateInitialized = React.useCallback(function (state) {\n      return state !== undefined && state.stale === false && isStateValid(state);\n    }, [isStateValid]);\n    var _React$useContext = React.useContext(_$$_REQUIRE(_dependencyMap[14], \"./NavigationStateContext.js\").NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(function (state) {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(function () {\n        var _route$params4, _route$params5, _route$params6;\n        var initialRouteParamList = routeNames.reduce(function (acc, curr) {\n          var _route$params, _route$params2, _route$params3;\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = (route == null || (_route$params = route.params) == null ? void 0 : _route$params.state) == null && (route == null || (_route$params2 = route.params) == null ? void 0 : _route$params2.initial) !== false && (route == null || (_route$params3 = route.params) == null ? void 0 : _route$params3.screen) === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? Object.assign({}, initialParams, initialParamsFromParams) : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && (route == null || (_route$params4 = route.params) == null ? void 0 : _route$params4.state) == null && !(typeof (route == null || (_route$params5 = route.params) == null ? void 0 : _route$params5.screen) === 'string' && (route == null || (_route$params6 = route.params) == null ? void 0 : _route$params6.initial) !== false)) {\n          return [router.getInitialState({\n            routeNames: routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList: routeGetIdList\n          }), true];\n        } else {\n          var _route$params7, _route$params8, _route$params9;\n          var stateFromParams;\n          if ((route == null || (_route$params7 = route.params) == null ? void 0 : _route$params7.state) != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof (route == null || (_route$params8 = route.params) == null ? void 0 : _route$params8.screen) === 'string' && (route == null || (_route$params9 = route.params) == null ? void 0 : _route$params9.initial) !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams != null ? stateFromParams : currentState, {\n            routeNames: routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList: routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(function () {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, _$$_REQUIRE(_dependencyMap[15], \"./isArrayEqual.js\").isArrayEqual)(state.routeNames, routeNames) || !(0, _$$_REQUIRE(_dependencyMap[16], \"./isRecordEqual.js\").isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      var navigatorStateForNextRouteNamesChange = options.UNSTABLE_getStateForRouteNamesChange == null ? void 0 : options.UNSTABLE_getStateForRouteNamesChange(state);\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = navigatorStateForNextRouteNamesChange ?\n      // @ts-expect-error this is ok\n      router.getRehydratedState(navigatorStateForNextRouteNamesChange, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      }) : router.getStateForRouteNamesChange(state, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(function (name) {\n          return name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name];\n        })\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route == null ? void 0 : route.params);\n    React.useEffect(function () {\n      previousNestedParamsRef.current = route == null ? void 0 : route.params;\n    }, [route == null ? void 0 : route.params]);\n    if (route != null && route.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = _$$_REQUIRE(_dependencyMap[17], \"@react-navigation/routers\").CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = _$$_REQUIRE(_dependencyMap[17], \"@react-navigation/routers\").CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, _$$_REQUIRE(_dependencyMap[18], \"./useScheduleUpdate.js\").useScheduleUpdate)(function () {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(function () {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return function () {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, _$$_REQUIRE(_dependencyMap[19], \"./useIsomorphicLayoutEffect\").useIsomorphicLayoutEffect)(function () {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(function () {\n      var currentState = getCurrentState();\n      return (0, _$$_REQUIRE(_dependencyMap[20], \"./deepFreeze.js\").deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, _$$_REQUIRE(_dependencyMap[21], \"./useEventEmitter.js\").useEventEmitter)(function (e) {\n      var _ref;\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        var _route;\n        route = state.routes.find(function (route) {\n          return route.key === e.target;\n        });\n        if ((_route = route) != null && _route.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push.apply(routeNames, _toConsumableArray(Object.keys(screens).filter(function (name) {\n          var _route2;\n          return ((_route2 = route) == null ? void 0 : _route2.name) === name;\n        })));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = (_ref = []).concat.apply(_ref, _toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function (name) {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      }))).map(function (listeners) {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation: navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(function (type) {\n          return type === e.type;\n        }).map(function (type) {\n          return map == null ? void 0 : map[type];\n        }) : undefined;\n      })))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter(function (cb, i, self) {\n        return cb && self.lastIndexOf(cb) === i;\n      });\n      listeners.forEach(function (listener) {\n        return listener == null ? void 0 : listener(e);\n      });\n    });\n    (0, _$$_REQUIRE(_dependencyMap[22], \"./useFocusEvents.js\").useFocusEvents)({\n      state: state,\n      emitter: emitter\n    });\n    React.useEffect(function () {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state: state\n        }\n      });\n    }, [emitter, state]);\n    var _ref2 = (0, _$$_REQUIRE(_dependencyMap[23], \"./useChildListeners.js\").useChildListeners)(),\n      childListeners = _ref2.listeners,\n      addListener = _ref2.addListener;\n    var _ref3 = (0, _$$_REQUIRE(_dependencyMap[24], \"./useKeyedChildListeners.js\").useKeyedChildListeners)(),\n      keyedListeners = _ref3.keyedListeners,\n      addKeyedListener = _ref3.addKeyedListener;\n    var onAction = (0, _$$_REQUIRE(_dependencyMap[25], \"./useOnAction.js\").useOnAction)({\n      router: router,\n      getState: getState,\n      setState: setState,\n      key: route == null ? void 0 : route.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      },\n      emitter: emitter\n    });\n    var onRouteFocus = (0, _$$_REQUIRE(_dependencyMap[26], \"./useOnRouteFocus.js\").useOnRouteFocus)({\n      router: router,\n      key: route == null ? void 0 : route.key,\n      getState: getState,\n      setState: setState\n    });\n    var navigation = (0, _$$_REQUIRE(_dependencyMap[27], \"./useNavigationHelpers.js\").useNavigationHelpers)({\n      id: options.id,\n      onAction: onAction,\n      getState: getState,\n      emitter: emitter,\n      router: router,\n      stateRef: stateRef\n    });\n    (0, _$$_REQUIRE(_dependencyMap[28], \"./useFocusedListenersChildrenAdapter.js\").useFocusedListenersChildrenAdapter)({\n      navigation: navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, _$$_REQUIRE(_dependencyMap[29], \"./useOnGetState.js\").useOnGetState)({\n      getState: getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _ref4 = (0, _$$_REQUIRE(_dependencyMap[30], \"./useDescriptors.js\").useDescriptors)({\n        state: state,\n        screens: screens,\n        navigation: navigation,\n        screenOptions: screenOptions,\n        screenLayout: screenLayout,\n        onAction: onAction,\n        getState: getState,\n        setState: setState,\n        onRouteFocus: onRouteFocus,\n        addListener: addListener,\n        addKeyedListener: addKeyedListener,\n        router: router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter: emitter\n      }),\n      describe = _ref4.describe,\n      descriptors = _ref4.descriptors;\n    (0, _$$_REQUIRE(_dependencyMap[31], \"./useCurrentRender.js\").useCurrentRender)({\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    });\n    var NavigationContent = (0, _$$_REQUIRE(_dependencyMap[32], \"./useComponent.js\").useComponent)(function (children) {\n      var element = layout != null ? layout({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        children: children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[33], \"./NavigationHelpersContext.js\").NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[34], \"./PreventRemoveProvider.js\").PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state: state,\n      navigation: navigation,\n      describe: describe,\n      descriptors: descriptors,\n      NavigationContent: NavigationContent\n    };\n  }\n});","lineCount":514,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_defineProperty"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,1,13],[6,6,1,13,"_objectWithoutProperties"],[6,30,1,13],[6,33,1,13,"_$$_REQUIRE"],[6,44,1,13],[6,45,1,13,"_dependencyMap"],[6,59,1,13],[7,2,1,13],[7,6,1,13,"_toConsumableArray"],[7,24,1,13],[7,27,1,13,"_$$_REQUIRE"],[7,38,1,13],[7,39,1,13,"_dependencyMap"],[7,53,1,13],[8,2,1,13],[8,6,1,13,"_excluded"],[8,15,1,13],[9,2,3,0,"Object"],[9,8,3,6],[9,9,3,7,"defineProperty"],[9,23,3,21],[9,24,3,22,"exports"],[9,31,3,29],[9,33,3,31],[9,45,3,43],[9,47,3,45],[10,4,4,2,"value"],[10,9,4,7],[10,11,4,9],[11,2,5,0],[11,3,5,1],[11,4,5,2],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"useNavigationBuilder"],[12,30,6,28],[12,33,6,31,"useNavigationBuilder"],[12,53,6,51],[13,2,8,0],[13,6,8,4,"React"],[13,11,8,9],[13,14,8,12,"_interopRequireWildcard"],[13,37,8,35],[13,38,8,36,"require"],[13,49,8,43],[13,50,8,43,"_dependencyMap"],[13,64,8,43],[13,76,8,51],[13,77,8,52],[13,78,8,53],[14,2,10,0],[14,6,10,4,"_useLatestCallback"],[14,24,10,22],[14,27,10,25,"_interopRequireDefault"],[14,49,10,47],[14,50,10,48,"require"],[14,61,10,55],[14,62,10,55,"_dependencyMap"],[14,76,10,55],[14,102,10,77],[14,103,10,78],[14,104,10,79],[15,2,37,0],[15,6,37,4,"_jsxRuntime"],[15,17,37,15],[15,20,37,18,"require"],[15,31,37,25],[15,32,37,25,"_dependencyMap"],[15,46,37,25],[15,70,37,45],[15,71,37,46],[16,2,38,0],[16,11,38,9,"_interopRequireDefault"],[16,33,38,31,"_interopRequireDefault"],[16,34,38,32,"e"],[16,35,38,33],[16,37,38,35],[17,4,38,37],[17,11,38,44,"e"],[17,12,38,45],[17,16,38,49,"e"],[17,17,38,50],[17,18,38,51,"__esModule"],[17,28,38,61],[17,31,38,64,"e"],[17,32,38,65],[17,35,38,68],[18,6,38,70,"default"],[18,13,38,77],[18,15,38,79,"e"],[19,4,38,81],[19,5,38,82],[20,2,38,84],[21,2,39,0],[21,11,39,9,"_getRequireWildcardCache"],[21,35,39,33,"_getRequireWildcardCache"],[21,36,39,34,"e"],[21,37,39,35],[21,39,39,37],[22,4,39,39],[22,8,39,43],[22,18,39,53],[22,22,39,57],[22,29,39,64,"WeakMap"],[22,36,39,71],[22,38,39,73],[22,45,39,80],[22,49,39,84],[23,4,39,86],[23,8,39,90,"r"],[23,9,39,91],[23,12,39,94],[23,16,39,98,"WeakMap"],[23,23,39,105],[23,24,39,106],[23,25,39,107],[24,6,39,109,"t"],[24,7,39,110],[24,10,39,113],[24,14,39,117,"WeakMap"],[24,21,39,124],[24,22,39,125],[24,23,39,126],[25,4,39,128],[25,11,39,135],[25,12,39,136,"_getRequireWildcardCache"],[25,36,39,160],[25,39,39,163],[25,48,39,136,"_getRequireWildcardCache"],[25,72,39,160,"_getRequireWildcardCache"],[25,73,39,173,"e"],[25,74,39,174],[25,76,39,176],[26,6,39,178],[26,13,39,185,"e"],[26,14,39,186],[26,17,39,189,"t"],[26,18,39,190],[26,21,39,193,"r"],[26,22,39,194],[27,4,39,196],[27,5,39,197],[27,7,39,199,"e"],[27,8,39,200],[27,9,39,201],[28,2,39,203],[29,2,40,0],[29,11,40,9,"_interopRequireWildcard"],[29,34,40,32,"_interopRequireWildcard"],[29,35,40,33,"e"],[29,36,40,34],[29,38,40,36,"r"],[29,39,40,37],[29,41,40,39],[30,4,40,41],[30,8,40,45],[30,9,40,46,"r"],[30,10,40,47],[30,14,40,51,"e"],[30,15,40,52],[30,19,40,56,"e"],[30,20,40,57],[30,21,40,58,"__esModule"],[30,31,40,68],[30,33,40,70],[30,40,40,77,"e"],[30,41,40,78],[31,4,40,80],[31,8,40,84],[31,12,40,88],[31,17,40,93,"e"],[31,18,40,94],[31,22,40,98],[31,30,40,106],[31,34,40,110],[31,41,40,117,"e"],[31,42,40,118],[31,46,40,122],[31,56,40,132],[31,60,40,136],[31,67,40,143,"e"],[31,68,40,144],[31,70,40,146],[31,77,40,153],[32,6,40,155,"default"],[32,13,40,162],[32,15,40,164,"e"],[33,4,40,166],[33,5,40,167],[34,4,40,169],[34,8,40,173,"t"],[34,9,40,174],[34,12,40,177,"_getRequireWildcardCache"],[34,36,40,201],[34,37,40,202,"r"],[34,38,40,203],[34,39,40,204],[35,4,40,206],[35,8,40,210,"t"],[35,9,40,211],[35,13,40,215,"t"],[35,14,40,216],[35,15,40,217,"has"],[35,18,40,220],[35,19,40,221,"e"],[35,20,40,222],[35,21,40,223],[35,23,40,225],[35,30,40,232,"t"],[35,31,40,233],[35,32,40,234,"get"],[35,35,40,237],[35,36,40,238,"e"],[35,37,40,239],[35,38,40,240],[36,4,40,242],[36,8,40,246,"n"],[36,9,40,247],[36,12,40,250],[37,8,40,252,"__proto__"],[37,17,40,261],[37,19,40,263],[38,6,40,268],[38,7,40,269],[39,6,40,271,"a"],[39,7,40,272],[39,10,40,275,"Object"],[39,16,40,281],[39,17,40,282,"defineProperty"],[39,31,40,296],[39,35,40,300,"Object"],[39,41,40,306],[39,42,40,307,"getOwnPropertyDescriptor"],[39,66,40,331],[40,4,40,333],[40,9,40,338],[40,13,40,342,"u"],[40,14,40,343],[40,18,40,347,"e"],[40,19,40,348],[40,21,40,350],[40,25,40,354],[40,34,40,363],[40,39,40,368,"u"],[40,40,40,369],[40,44,40,373],[40,45,40,374],[40,46,40,375],[40,47,40,376,"hasOwnProperty"],[40,61,40,390],[40,62,40,391,"call"],[40,66,40,395],[40,67,40,396,"e"],[40,68,40,397],[40,70,40,399,"u"],[40,71,40,400],[40,72,40,401],[40,74,40,403],[41,6,40,405],[41,10,40,409,"i"],[41,11,40,410],[41,14,40,413,"a"],[41,15,40,414],[41,18,40,417,"Object"],[41,24,40,423],[41,25,40,424,"getOwnPropertyDescriptor"],[41,49,40,448],[41,50,40,449,"e"],[41,51,40,450],[41,53,40,452,"u"],[41,54,40,453],[41,55,40,454],[41,58,40,457],[41,62,40,461],[42,6,40,463,"i"],[42,7,40,464],[42,12,40,469,"i"],[42,13,40,470],[42,14,40,471,"get"],[42,17,40,474],[42,21,40,478,"i"],[42,22,40,479],[42,23,40,480,"set"],[42,26,40,483],[42,27,40,484],[42,30,40,487,"Object"],[42,36,40,493],[42,37,40,494,"defineProperty"],[42,51,40,508],[42,52,40,509,"n"],[42,53,40,510],[42,55,40,512,"u"],[42,56,40,513],[42,58,40,515,"i"],[42,59,40,516],[42,60,40,517],[42,63,40,520,"n"],[42,64,40,521],[42,65,40,522,"u"],[42,66,40,523],[42,67,40,524],[42,70,40,527,"e"],[42,71,40,528],[42,72,40,529,"u"],[42,73,40,530],[42,74,40,531],[43,4,40,533],[44,4,40,535],[44,11,40,542,"n"],[44,12,40,543],[44,13,40,544,"default"],[44,20,40,551],[44,23,40,554,"e"],[44,24,40,555],[44,26,40,557,"t"],[44,27,40,558],[44,31,40,562,"t"],[44,32,40,563],[44,33,40,564,"set"],[44,36,40,567],[44,37,40,568,"e"],[44,38,40,569],[44,40,40,571,"n"],[44,41,40,572],[44,42,40,573],[44,44,40,575,"n"],[44,45,40,576],[45,2,40,578],[46,2,41,0],[47,2,42,0,"_$$_REQUIRE"],[47,13,42,0],[47,14,42,0,"_dependencyMap"],[47,28,42,0],[47,47,42,7,"PrivateValueStore"],[47,64,42,24],[48,2,43,0],[48,6,43,6,"isValidKey"],[48,16,43,16],[48,19,43,19],[48,28,43,6,"isValidKey"],[48,38,43,16,"isValidKey"],[48,39,43,19,"key"],[48,42,43,22],[49,4,43,22],[49,11,43,26,"key"],[49,14,43,29],[49,19,43,34,"undefined"],[49,28,43,43],[49,32,43,47],[49,39,43,54,"key"],[49,42,43,57],[49,47,43,62],[49,55,43,70],[49,59,43,74,"key"],[49,62,43,77],[49,67,43,82],[49,69,43,84],[50,2,43,84],[52,2,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[56,0,49,0],[57,2,50,0],[57,6,50,6,"getRouteConfigsFromChildren"],[57,34,50,33],[57,37,50,36],[57,46,50,6,"getRouteConfigsFromChildren"],[57,73,50,33,"getRouteConfigsFromChildren"],[57,74,50,37,"children"],[57,82,50,45],[57,84,50,47,"groupKey"],[57,92,50,55],[57,94,50,57,"groupOptions"],[57,106,50,69],[57,108,50,71,"groupLayout"],[57,119,50,82],[57,121,50,87],[58,4,51,2],[58,8,51,8,"configs"],[58,15,51,15],[58,18,51,18,"React"],[58,23,51,23],[58,24,51,24,"Children"],[58,32,51,32],[58,33,51,33,"toArray"],[58,40,51,40],[58,41,51,41,"children"],[58,49,51,49],[58,50,51,50],[58,51,51,51,"reduce"],[58,57,51,57],[58,58,51,58],[58,68,51,59,"acc"],[58,71,51,62],[58,73,51,64,"child"],[58,78,51,69],[58,80,51,74],[59,6,51,74],[59,10,51,74,"_child$type"],[59,21,51,74],[59,23,51,74,"_child$props"],[59,35,51,74],[60,6,52,4],[60,10,52,8],[60,23,52,21,"React"],[60,28,52,26],[60,29,52,27,"isValidElement"],[60,43,52,41],[60,44,52,42,"child"],[60,49,52,47],[60,50,52,48],[60,52,52,50],[61,8,53,6],[61,12,53,10,"child"],[61,17,53,15],[61,18,53,16,"type"],[61,22,53,20],[61,27,53,25,"_$$_REQUIRE"],[61,38,53,25],[61,39,53,25,"_dependencyMap"],[61,53,53,25],[61,73,53,33,"Screen"],[61,79,53,39],[61,81,53,41],[62,10,54,8],[63,10,55,8],[65,10,57,8],[65,14,57,12],[65,15,57,13,"isValidKey"],[65,25,57,23],[65,26,57,24,"child"],[65,31,57,29],[65,32,57,30,"props"],[65,37,57,35],[65,38,57,36,"navigationKey"],[65,51,57,49],[65,52,57,50],[65,54,57,52],[66,12,58,10],[66,18,58,16],[66,22,58,20,"Error"],[66,27,58,25],[66,28,58,26],[66,68,58,66,"JSON"],[66,72,58,70],[66,73,58,71,"stringify"],[66,82,58,80],[66,83,58,81,"child"],[66,88,58,86],[66,89,58,87,"props"],[66,94,58,92],[66,95,58,93,"navigationKey"],[66,108,58,106],[66,109,58,107],[66,130,58,128,"child"],[66,135,58,133],[66,136,58,134,"props"],[66,141,58,139],[66,142,58,140,"name"],[66,146,58,144],[66,196,58,194],[66,197,58,195],[67,10,59,8],[68,10,60,8,"acc"],[68,13,60,11],[68,14,60,12,"push"],[68,18,60,16],[68,19,60,17],[69,12,61,10,"keys"],[69,16,61,14],[69,18,61,16],[69,19,61,17,"groupKey"],[69,27,61,25],[69,29,61,27,"child"],[69,34,61,32],[69,35,61,33,"props"],[69,40,61,38],[69,41,61,39,"navigationKey"],[69,54,61,52],[69,55,61,53],[70,12,62,10,"options"],[70,19,62,17],[70,21,62,19,"groupOptions"],[70,33,62,31],[71,12,63,10,"layout"],[71,18,63,16],[71,20,63,18,"groupLayout"],[71,31,63,29],[72,12,64,10,"props"],[72,17,64,15],[72,19,64,17,"child"],[72,24,64,22],[72,25,64,23,"props"],[73,10,65,8],[73,11,65,9],[73,12,65,10],[74,10,66,8],[74,17,66,15,"acc"],[74,20,66,18],[75,8,67,6],[76,8,68,6],[76,12,68,10,"child"],[76,17,68,15],[76,18,68,16,"type"],[76,22,68,20],[76,27,68,25,"React"],[76,32,68,30],[76,33,68,31,"Fragment"],[76,41,68,39],[76,45,68,43,"child"],[76,50,68,48],[76,51,68,49,"type"],[76,55,68,53],[76,60,68,58,"_$$_REQUIRE"],[76,71,68,58],[76,72,68,58,"_dependencyMap"],[76,86,68,58],[76,105,68,65,"Group"],[76,110,68,70],[76,112,68,72],[77,10,69,8],[77,14,69,12],[77,15,69,13,"isValidKey"],[77,25,69,23],[77,26,69,24,"child"],[77,31,69,29],[77,32,69,30,"props"],[77,37,69,35],[77,38,69,36,"navigationKey"],[77,51,69,49],[77,52,69,50],[77,54,69,52],[78,12,70,10],[78,18,70,16],[78,22,70,20,"Error"],[78,27,70,25],[78,28,70,26],[78,68,70,66,"JSON"],[78,72,70,70],[78,73,70,71,"stringify"],[78,82,70,80],[78,83,70,81,"child"],[78,88,70,86],[78,89,70,87,"props"],[78,94,70,92],[78,95,70,93,"navigationKey"],[78,108,70,106],[78,109,70,107],[78,173,70,171],[78,174,70,172],[79,10,71,8],[81,10,73,8],[82,10,74,8],[83,10,75,8,"acc"],[83,13,75,11],[83,14,75,12,"push"],[83,18,75,16],[83,19,75,16,"apply"],[83,24,75,16],[83,25,75,8,"acc"],[83,28,75,11],[83,30,75,11,"_toConsumableArray"],[83,48,75,11],[83,49,75,20,"getRouteConfigsFromChildren"],[83,77,75,47],[83,78,75,48,"child"],[83,83,75,53],[83,84,75,54,"props"],[83,89,75,59],[83,90,75,60,"children"],[83,98,75,68],[83,100,75,70,"child"],[83,105,75,75],[83,106,75,76,"props"],[83,111,75,81],[83,112,75,82,"navigationKey"],[83,125,75,95],[83,127,75,97,"child"],[83,132,75,102],[83,133,75,103,"type"],[83,137,75,107],[83,142,75,112,"_$$_REQUIRE"],[83,153,75,112],[83,154,75,112,"_dependencyMap"],[83,168,75,112],[83,187,75,119,"Group"],[83,192,75,124],[83,195,75,127,"groupOptions"],[83,207,75,139],[83,210,75,142,"groupOptions"],[83,222,75,154],[83,226,75,158],[83,230,75,162],[83,236,75,162,"concat"],[83,242,75,162],[83,243,75,162,"_toConsumableArray"],[83,261,75,162],[83,262,75,169,"groupOptions"],[83,274,75,181],[83,278,75,183,"child"],[83,283,75,188],[83,284,75,189,"props"],[83,289,75,194],[83,290,75,195,"screenOptions"],[83,303,75,208],[83,308,75,212],[83,309,75,213,"child"],[83,314,75,218],[83,315,75,219,"props"],[83,320,75,224],[83,321,75,225,"screenOptions"],[83,334,75,238],[83,335,75,239],[83,337,75,241],[83,344,75,248,"child"],[83,349,75,253],[83,350,75,254,"props"],[83,355,75,259],[83,356,75,260,"screenLayout"],[83,368,75,272],[83,373,75,277],[83,383,75,287],[83,386,75,290,"child"],[83,391,75,295],[83,392,75,296,"props"],[83,397,75,301],[83,398,75,302,"screenLayout"],[83,410,75,314],[83,413,75,317,"groupLayout"],[83,424,75,328],[83,425,75,329],[83,427,75,330],[84,10,76,8],[84,17,76,15,"acc"],[84,20,76,18],[85,8,77,6],[86,6,78,4],[87,6,79,4],[87,12,79,10],[87,16,79,14,"Error"],[87,21,79,19],[87,22,79,20],[87,122,79,120],[87,135,79,133,"React"],[87,140,79,138],[87,141,79,139,"isValidElement"],[87,155,79,153],[87,156,79,154,"child"],[87,161,79,159],[87,162,79,160],[87,165,79,163],[87,169,79,167],[87,176,79,174,"child"],[87,181,79,179],[87,182,79,180,"type"],[87,186,79,184],[87,191,79,189],[87,199,79,197],[87,202,79,200,"child"],[87,207,79,205],[87,208,79,206,"type"],[87,212,79,210],[87,216,79,210,"_child$type"],[87,227,79,210],[87,230,79,213,"child"],[87,235,79,218],[87,236,79,219,"type"],[87,240,79,223],[87,261,79,213,"_child$type"],[87,272,79,213],[87,273,79,225,"name"],[87,277,79,229],[87,281,79,233,"child"],[87,286,79,238],[87,287,79,239,"props"],[87,292,79,244],[87,296,79,248],[87,300,79,252],[87,304,79,256],[87,311,79,263,"child"],[87,316,79,268],[87,317,79,269,"props"],[87,322,79,274],[87,327,79,279],[87,335,79,287],[87,339,79,291],[87,345,79,297],[87,349,79,301,"child"],[87,354,79,306],[87,355,79,307,"props"],[87,360,79,312],[87,365,79,312,"_child$props"],[87,377,79,312],[87,380,79,316,"child"],[87,385,79,321],[87,386,79,322,"props"],[87,391,79,327],[87,404,79,316,"_child$props"],[87,416,79,316],[87,417,79,329,"name"],[87,421,79,333],[87,424,79,336],[87,444,79,356,"child"],[87,449,79,361],[87,450,79,362,"props"],[87,455,79,367],[87,456,79,368,"name"],[87,460,79,372],[87,463,79,375],[87,466,79,378],[87,468,79,380],[87,470,79,382],[87,473,79,385],[87,480,79,392,"child"],[87,485,79,397],[87,490,79,402],[87,498,79,410],[87,501,79,413,"JSON"],[87,505,79,417],[87,506,79,418,"stringify"],[87,515,79,427],[87,516,79,428,"child"],[87,521,79,433],[87,522,79,434],[87,525,79,437],[87,529,79,441,"String"],[87,535,79,447],[87,536,79,448,"child"],[87,541,79,453],[87,542,79,454],[87,545,79,457],[87,637,79,549],[87,638,79,550],[88,4,80,2],[88,5,80,3],[88,7,80,5],[88,9,80,7],[88,10,80,8],[89,4,81,2],[89,8,81,6,"process"],[89,15,81,13],[89,16,81,14,"env"],[89,19,81,17],[89,20,81,18,"NODE_ENV"],[89,28,81,26],[89,33,81,31],[89,45,81,43],[89,47,81,45],[90,6,82,4,"configs"],[90,13,82,11],[90,14,82,12,"forEach"],[90,21,82,19],[90,22,82,20],[90,32,82,20,"config"],[90,38,82,26],[90,40,82,30],[91,8,83,6],[91,12,83,6,"_config$props"],[91,25,83,6],[91,28,88,10,"config"],[91,34,88,16],[91,35,88,17,"props"],[91,40,88,22],[92,10,84,8,"name"],[92,14,84,12],[92,17,84,12,"_config$props"],[92,30,84,12],[92,31,84,8,"name"],[92,35,84,12],[93,10,85,8,"children"],[93,18,85,16],[93,21,85,16,"_config$props"],[93,34,85,16],[93,35,85,8,"children"],[93,43,85,16],[94,10,86,8,"component"],[94,19,86,17],[94,22,86,17,"_config$props"],[94,35,86,17],[94,36,86,8,"component"],[94,45,86,17],[95,10,87,8,"getComponent"],[95,22,87,20],[95,25,87,20,"_config$props"],[95,38,87,20],[95,39,87,8,"getComponent"],[95,51,87,20],[96,8,89,6],[96,12,89,10],[96,19,89,17,"name"],[96,23,89,21],[96,28,89,26],[96,36,89,34],[96,40,89,38],[96,41,89,39,"name"],[96,45,89,43],[96,47,89,45],[97,10,90,8],[97,16,90,14],[97,20,90,18,"Error"],[97,25,90,23],[97,26,90,24],[97,50,90,48,"JSON"],[97,54,90,52],[97,55,90,53,"stringify"],[97,64,90,62],[97,65,90,63,"name"],[97,69,90,67],[97,70,90,68],[97,120,90,118],[97,121,90,119],[98,8,91,6],[99,8,92,6],[99,12,92,10,"children"],[99,20,92,18],[99,24,92,22],[99,28,92,26],[99,32,92,30,"component"],[99,41,92,39],[99,46,92,44,"undefined"],[99,55,92,53],[99,59,92,57,"getComponent"],[99,71,92,69],[99,76,92,74,"undefined"],[99,85,92,83],[99,87,92,85],[100,10,93,8],[100,14,93,12,"children"],[100,22,93,20],[100,26,93,24],[100,30,93,28],[100,34,93,32,"component"],[100,43,93,41],[100,48,93,46,"undefined"],[100,57,93,55],[100,59,93,57],[101,12,94,10],[101,18,94,16],[101,22,94,20,"Error"],[101,27,94,25],[101,28,94,26],[101,89,94,87,"name"],[101,93,94,91],[101,129,94,127],[101,130,94,128],[102,10,95,8],[103,10,96,8],[103,14,96,12,"children"],[103,22,96,20],[103,26,96,24],[103,30,96,28],[103,34,96,32,"getComponent"],[103,46,96,44],[103,51,96,49,"undefined"],[103,60,96,58],[103,62,96,60],[104,12,97,10],[104,18,97,16],[104,22,97,20,"Error"],[104,27,97,25],[104,28,97,26],[104,92,97,90,"name"],[104,96,97,94],[104,132,97,130],[104,133,97,131],[105,10,98,8],[106,10,99,8],[106,14,99,12,"component"],[106,23,99,21],[106,28,99,26,"undefined"],[106,37,99,35],[106,41,99,39,"getComponent"],[106,53,99,51],[106,58,99,56,"undefined"],[106,67,99,65],[106,69,99,67],[107,12,100,10],[107,18,100,16],[107,22,100,20,"Error"],[107,27,100,25],[107,28,100,26],[107,93,100,91,"name"],[107,97,100,95],[107,133,100,131],[107,134,100,132],[108,10,101,8],[109,10,102,8],[109,14,102,12,"children"],[109,22,102,20],[109,26,102,24],[109,30,102,28],[109,34,102,32],[109,41,102,39,"children"],[109,49,102,47],[109,54,102,52],[109,64,102,62],[109,66,102,64],[110,12,103,10],[110,18,103,16],[110,22,103,20,"Error"],[110,27,103,25],[110,28,103,26],[110,88,103,86,"name"],[110,92,103,90],[110,145,103,143],[110,146,103,144],[111,10,104,8],[112,10,105,8],[112,14,105,12,"component"],[112,23,105,21],[112,28,105,26,"undefined"],[112,37,105,35],[112,41,105,39],[112,42,105,40],[112,43,105,41],[112,44,105,42],[112,46,105,44,"_$$_REQUIRE"],[112,57,105,44],[112,58,105,44,"_dependencyMap"],[112,72,105,44],[112,90,105,53,"isValidElementType"],[112,108,105,71],[112,110,105,73,"component"],[112,119,105,82],[112,120,105,83],[112,122,105,85],[113,12,106,10],[113,18,106,16],[113,22,106,20,"Error"],[113,27,106,25],[113,28,106,26],[113,89,106,87,"name"],[113,93,106,91],[113,133,106,131],[113,134,106,132],[114,10,107,8],[115,10,108,8],[115,14,108,12,"getComponent"],[115,26,108,24],[115,31,108,29,"undefined"],[115,40,108,38],[115,44,108,42],[115,51,108,49,"getComponent"],[115,63,108,61],[115,68,108,66],[115,78,108,76],[115,80,108,78],[116,12,109,10],[116,18,109,16],[116,22,109,20,"Error"],[116,27,109,25],[116,28,109,26],[116,92,109,90,"name"],[116,96,109,94],[116,151,109,149],[116,152,109,150],[117,10,110,8],[118,10,111,8],[118,14,111,12],[118,21,111,19,"component"],[118,30,111,28],[118,35,111,33],[118,45,111,43],[118,47,111,45],[119,12,112,10],[119,16,112,14,"component"],[119,25,112,23],[119,26,112,24,"name"],[119,30,112,28],[119,35,112,33],[119,46,112,44],[119,48,112,46],[120,14,113,12],[121,14,114,12],[122,14,115,12],[123,14,116,12,"console"],[123,21,116,19],[123,22,116,20,"warn"],[123,26,116,24],[123,27,116,25],[123,112,116,110,"name"],[123,116,116,114],[123,395,116,393],[123,396,116,394],[124,12,117,10],[124,13,117,11],[124,19,117,17],[124,23,117,21],[124,31,117,29],[124,32,117,30,"test"],[124,36,117,34],[124,37,117,35,"component"],[124,46,117,44],[124,47,117,45,"name"],[124,51,117,49],[124,52,117,50],[124,54,117,52],[125,14,118,12,"console"],[125,21,118,19],[125,22,118,20,"warn"],[125,26,118,24],[125,27,118,25],[125,61,118,59,"component"],[125,70,118,68],[125,71,118,69,"name"],[125,75,118,73],[125,96,118,94,"name"],[125,100,118,98],[125,301,118,299],[125,302,118,300],[126,12,119,10],[127,10,120,8],[128,8,121,6],[128,9,121,7],[128,15,121,13],[129,10,122,8],[129,16,122,14],[129,20,122,18,"Error"],[129,25,122,23],[129,26,122,24],[129,108,122,106,"name"],[129,112,122,110],[129,293,122,291],[129,294,122,292],[130,8,123,6],[131,6,124,4],[131,7,124,5],[131,8,124,6],[132,4,125,2],[133,4,126,2],[133,11,126,9,"configs"],[133,18,126,16],[134,2,127,0],[134,3,127,1],[136,2,129,0],[137,0,130,0],[138,0,131,0],[139,0,132,0],[140,0,133,0],[141,0,134,0],[142,0,135,0],[143,2,136,0],[143,11,136,9,"useNavigationBuilder"],[143,31,136,29,"useNavigationBuilder"],[143,32,136,30,"createRouter"],[143,44,136,42],[143,46,136,44,"options"],[143,53,136,51],[143,55,136,53],[144,4,137,2],[144,8,137,8,"navigatorKey"],[144,20,137,20],[144,23,137,23],[144,24,137,24],[144,25,137,25],[144,27,137,27,"_$$_REQUIRE"],[144,38,137,27],[144,39,137,27,"_dependencyMap"],[144,53,137,27],[144,88,137,49,"useRegisterNavigator"],[144,108,137,69],[144,110,137,71],[144,111,137,72],[145,4,138,2],[145,8,138,8,"route"],[145,13,138,13],[145,16,138,16,"React"],[145,21,138,21],[145,22,138,22,"useContext"],[145,32,138,32],[145,33,138,33,"_$$_REQUIRE"],[145,44,138,33],[145,45,138,33,"_dependencyMap"],[145,59,138,33],[145,96,138,57,"NavigationRouteContext"],[145,118,138,79],[145,119,138,80],[146,4,139,2],[146,8,140,4,"children"],[146,16,140,12],[146,19,146,6,"options"],[146,26,146,13],[146,27,140,4,"children"],[146,35,140,12],[147,6,141,4,"layout"],[147,12,141,10],[147,15,146,6,"options"],[147,22,146,13],[147,23,141,4,"layout"],[147,29,141,10],[148,6,142,4,"screenOptions"],[148,19,142,17],[148,22,146,6,"options"],[148,29,146,13],[148,30,142,4,"screenOptions"],[148,43,142,17],[149,6,143,4,"screenLayout"],[149,18,143,16],[149,21,146,6,"options"],[149,28,146,13],[149,29,143,4,"screenLayout"],[149,41,143,16],[150,6,144,4,"screenListeners"],[150,21,144,19],[150,24,146,6,"options"],[150,31,146,13],[150,32,144,4,"screenListeners"],[150,47,144,19],[151,6,145,7,"rest"],[151,10,145,11],[151,13,145,11,"_objectWithoutProperties"],[151,37,145,11],[151,38,146,6,"options"],[151,45,146,13],[151,47,146,13,"_excluded"],[151,56,146,13],[152,4,147,2],[152,8,147,8,"routeConfigs"],[152,20,147,20],[152,23,147,23,"getRouteConfigsFromChildren"],[152,51,147,50],[152,52,147,51,"children"],[152,60,147,59],[152,61,147,60],[153,4,148,2],[153,8,148,8,"router"],[153,14,148,14],[153,17,148,17],[153,18,148,18],[153,19,148,19],[153,21,148,21,"_$$_REQUIRE"],[153,32,148,21],[153,33,148,21,"_dependencyMap"],[153,47,148,21],[153,74,148,35,"useLazyValue"],[153,86,148,47],[153,88,148,49],[153,100,148,55],[154,6,149,4],[154,10,149,8,"rest"],[154,14,149,12],[154,15,149,13,"initialRouteName"],[154,31,149,29],[154,35,149,33],[154,39,149,37],[154,43,149,41,"routeConfigs"],[154,55,149,53],[154,56,149,54,"every"],[154,61,149,59],[154,62,149,60],[154,72,149,60,"config"],[154,78,149,66],[155,8,149,66],[155,15,149,70,"config"],[155,21,149,76],[155,22,149,77,"props"],[155,27,149,82],[155,28,149,83,"name"],[155,32,149,87],[155,37,149,92,"rest"],[155,41,149,96],[155,42,149,97,"initialRouteName"],[155,58,149,113],[156,6,149,113],[156,8,149,114],[156,10,149,116],[157,8,150,6],[157,14,150,12],[157,18,150,16,"Error"],[157,23,150,21],[157,24,150,22],[157,57,150,55,"rest"],[157,61,150,59],[157,62,150,60,"initialRouteName"],[157,78,150,76],[157,111,150,109],[157,112,150,110],[158,6,151,4],[159,6,152,4],[159,13,152,11,"createRouter"],[159,25,152,23],[159,26,152,24,"rest"],[159,30,152,28],[159,31,152,29],[160,4,153,2],[160,5,153,3],[160,6,153,4],[161,4,154,2],[161,8,154,8,"screens"],[161,15,154,15],[161,18,154,18,"routeConfigs"],[161,30,154,30],[161,31,154,31,"reduce"],[161,37,154,37],[161,38,154,38],[161,48,154,39,"acc"],[161,51,154,42],[161,53,154,44,"config"],[161,59,154,50],[161,61,154,55],[162,6,155,4],[162,10,155,8,"config"],[162,16,155,14],[162,17,155,15,"props"],[162,22,155,20],[162,23,155,21,"name"],[162,27,155,25],[162,31,155,29,"acc"],[162,34,155,32],[162,36,155,34],[163,8,156,6],[163,14,156,12],[163,18,156,16,"Error"],[163,23,156,21],[163,24,156,22],[163,133,156,131,"config"],[163,139,156,137],[163,140,156,138,"props"],[163,145,156,143],[163,146,156,144,"name"],[163,150,156,148],[163,154,156,152],[163,155,156,153],[164,6,157,4],[165,6,158,4,"acc"],[165,9,158,7],[165,10,158,8,"config"],[165,16,158,14],[165,17,158,15,"props"],[165,22,158,20],[165,23,158,21,"name"],[165,27,158,25],[165,28,158,26],[165,31,158,29,"config"],[165,37,158,35],[166,6,159,4],[166,13,159,11,"acc"],[166,16,159,14],[167,4,160,2],[167,5,160,3],[167,7,160,5],[167,8,160,6],[167,9,160,7],[167,10,160,8],[168,4,161,2],[168,8,161,8,"routeNames"],[168,18,161,18],[168,21,161,21,"routeConfigs"],[168,33,161,33],[168,34,161,34,"map"],[168,37,161,37],[168,38,161,38],[168,48,161,38,"config"],[168,54,161,44],[169,6,161,44],[169,13,161,48,"config"],[169,19,161,54],[169,20,161,55,"props"],[169,25,161,60],[169,26,161,61,"name"],[169,30,161,65],[170,4,161,65],[170,6,161,66],[171,4,162,2],[171,8,162,8,"routeKeyList"],[171,20,162,20],[171,23,162,23,"routeNames"],[171,33,162,33],[171,34,162,34,"reduce"],[171,40,162,40],[171,41,162,41],[171,51,162,42,"acc"],[171,54,162,45],[171,56,162,47,"curr"],[171,60,162,51],[171,62,162,56],[172,6,163,4,"acc"],[172,9,163,7],[172,10,163,8,"curr"],[172,14,163,12],[172,15,163,13],[172,18,163,16,"screens"],[172,25,163,23],[172,26,163,24,"curr"],[172,30,163,28],[172,31,163,29],[172,32,163,30,"keys"],[172,36,163,34],[172,37,163,35,"map"],[172,40,163,38],[172,41,163,39],[172,51,163,39,"key"],[172,54,163,42],[173,8,163,42],[173,15,163,46,"key"],[173,18,163,49],[173,29,163,46,"key"],[173,32,163,49],[173,35,163,53],[173,37,163,55],[174,6,163,55],[174,8,163,56],[174,9,163,57,"join"],[174,13,163,61],[174,14,163,62],[174,17,163,65],[174,18,163,66],[175,6,164,4],[175,13,164,11,"acc"],[175,16,164,14],[176,4,165,2],[176,5,165,3],[176,7,165,5],[176,8,165,6],[176,9,165,7],[176,10,165,8],[177,4,166,2],[177,8,166,8,"routeParamList"],[177,22,166,22],[177,25,166,25,"routeNames"],[177,35,166,35],[177,36,166,36,"reduce"],[177,42,166,42],[177,43,166,43],[177,53,166,44,"acc"],[177,56,166,47],[177,58,166,49,"curr"],[177,62,166,53],[177,64,166,58],[178,6,167,4],[178,10,168,6,"initialParams"],[178,23,168,19],[178,26,169,8,"screens"],[178,33,169,15],[178,34,169,16,"curr"],[178,38,169,20],[178,39,169,21],[178,40,169,22,"props"],[178,45,169,27],[178,46,168,6,"initialParams"],[178,59,168,19],[179,6,170,4,"acc"],[179,9,170,7],[179,10,170,8,"curr"],[179,14,170,12],[179,15,170,13],[179,18,170,16,"initialParams"],[179,31,170,29],[180,6,171,4],[180,13,171,11,"acc"],[180,16,171,14],[181,4,172,2],[181,5,172,3],[181,7,172,5],[181,8,172,6],[181,9,172,7],[181,10,172,8],[182,4,173,2],[182,8,173,8,"routeGetIdList"],[182,22,173,22],[182,25,173,25,"routeNames"],[182,35,173,35],[182,36,173,36,"reduce"],[182,42,173,42],[182,43,173,43],[182,53,173,44,"acc"],[182,56,173,47],[182,58,173,49,"curr"],[182,62,173,53],[183,6,173,53],[183,13,173,58,"Object"],[183,19,173,64],[183,20,173,65,"assign"],[183,26,173,71],[183,27,173,72,"acc"],[183,30,173,75],[183,32,173,75,"_defineProperty"],[183,47,173,75],[183,52,174,5,"curr"],[183,56,174,9],[183,58,174,12,"screens"],[183,65,174,19],[183,66,174,20,"curr"],[183,70,174,24],[183,71,174,25],[183,72,174,26,"props"],[183,77,174,31],[183,78,174,32,"getId"],[183,83,174,37],[183,84,175,3],[183,85,175,4],[184,4,175,4],[184,7,175,6],[184,8,175,7],[184,9,175,8],[184,10,175,9],[185,4,176,2],[185,8,176,6],[185,9,176,7,"routeNames"],[185,19,176,17],[185,20,176,18,"length"],[185,26,176,24],[185,28,176,26],[186,6,177,4],[186,12,177,10],[186,16,177,14,"Error"],[186,21,177,19],[186,22,177,20],[186,114,177,112],[186,115,177,113],[187,4,178,2],[188,4,179,2],[188,8,179,8,"isStateValid"],[188,20,179,20],[188,23,179,23,"React"],[188,28,179,28],[188,29,179,29,"useCallback"],[188,40,179,40],[188,41,179,41],[188,51,179,41,"state"],[188,56,179,46],[189,6,179,46],[189,13,179,50,"state"],[189,18,179,55],[189,19,179,56,"type"],[189,23,179,60],[189,28,179,65,"undefined"],[189,37,179,74],[189,41,179,78,"state"],[189,46,179,83],[189,47,179,84,"type"],[189,51,179,88],[189,56,179,93,"router"],[189,62,179,99],[189,63,179,100,"type"],[189,67,179,104],[190,4,179,104],[190,7,179,106],[190,8,179,107,"router"],[190,14,179,113],[190,15,179,114,"type"],[190,19,179,118],[190,20,179,119],[190,21,179,120],[191,4,180,2],[191,8,180,8,"isStateInitialized"],[191,26,180,26],[191,29,180,29,"React"],[191,34,180,34],[191,35,180,35,"useCallback"],[191,46,180,46],[191,47,180,47],[191,57,180,47,"state"],[191,62,180,52],[192,6,180,52],[192,13,180,56,"state"],[192,18,180,61],[192,23,180,66,"undefined"],[192,32,180,75],[192,36,180,79,"state"],[192,41,180,84],[192,42,180,85,"stale"],[192,47,180,90],[192,52,180,95],[192,57,180,100],[192,61,180,104,"isStateValid"],[192,73,180,116],[192,74,180,117,"state"],[192,79,180,122],[192,80,180,123],[193,4,180,123],[193,7,180,125],[193,8,180,126,"isStateValid"],[193,20,180,138],[193,21,180,139],[193,22,180,140],[194,4,181,2],[194,8,181,2,"_React$useContext"],[194,25,181,2],[194,28,188,6,"React"],[194,33,188,11],[194,34,188,12,"useContext"],[194,44,188,22],[194,45,188,23,"_$$_REQUIRE"],[194,56,188,23],[194,57,188,23,"_dependencyMap"],[194,71,188,23],[194,108,188,47,"NavigationStateContext"],[194,130,188,69],[194,131,188,70],[195,6,182,11,"currentState"],[195,18,182,23],[195,21,182,23,"_React$useContext"],[195,38,182,23],[195,39,182,4,"state"],[195,44,182,9],[196,6,183,14,"getCurrentState"],[196,21,183,29],[196,24,183,29,"_React$useContext"],[196,41,183,29],[196,42,183,4,"getState"],[196,50,183,12],[197,6,184,14,"setCurrentState"],[197,21,184,29],[197,24,184,29,"_React$useContext"],[197,41,184,29],[197,42,184,4,"setState"],[197,50,184,12],[198,6,185,4,"setKey"],[198,12,185,10],[198,15,185,10,"_React$useContext"],[198,32,185,10],[198,33,185,4,"setKey"],[198,39,185,10],[199,6,186,4,"getKey"],[199,12,186,10],[199,15,186,10,"_React$useContext"],[199,32,186,10],[199,33,186,4,"getKey"],[199,39,186,10],[200,6,187,4,"getIsInitial"],[200,18,187,16],[200,21,187,16,"_React$useContext"],[200,38,187,16],[200,39,187,4,"getIsInitial"],[200,51,187,16],[201,4,189,2],[201,8,189,8,"stateCleanedUp"],[201,22,189,22],[201,25,189,25,"React"],[201,30,189,30],[201,31,189,31,"useRef"],[201,37,189,37],[201,38,189,38],[201,43,189,43],[201,44,189,44],[202,4,190,2],[202,8,190,8,"setState"],[202,16,190,16],[202,19,190,19],[202,20,190,20],[202,21,190,21],[202,23,190,23,"_useLatestCallback"],[202,41,190,41],[202,42,190,42,"default"],[202,49,190,49],[202,51,190,51],[202,61,190,51,"state"],[202,66,190,56],[202,68,190,60],[203,6,191,4],[203,10,191,8,"stateCleanedUp"],[203,24,191,22],[203,25,191,23,"current"],[203,32,191,30],[203,34,191,32],[204,8,192,6],[205,8,193,6],[206,8,194,6],[207,8,195,6],[208,6,196,4],[209,6,197,4,"setCurrentState"],[209,21,197,19],[209,22,197,20,"state"],[209,27,197,25],[209,28,197,26],[210,4,198,2],[210,5,198,3],[210,6,198,4],[211,4,199,2],[211,8,199,2,"_React$useMemo"],[211,22,199,2],[211,25,199,57,"React"],[211,30,199,62],[211,31,199,63,"useMemo"],[211,38,199,70],[211,39,199,71],[211,51,199,77],[212,8,199,77],[212,12,199,77,"_route$params4"],[212,26,199,77],[212,28,199,77,"_route$params5"],[212,42,199,77],[212,44,199,77,"_route$params6"],[212,58,199,77],[213,8,200,4],[213,12,200,10,"initialRouteParamList"],[213,33,200,31],[213,36,200,34,"routeNames"],[213,46,200,44],[213,47,200,45,"reduce"],[213,53,200,51],[213,54,200,52],[213,64,200,53,"acc"],[213,67,200,56],[213,69,200,58,"curr"],[213,73,200,62],[213,75,200,67],[214,10,200,67],[214,14,200,67,"_route$params"],[214,27,200,67],[214,29,200,67,"_route$params2"],[214,43,200,67],[214,45,200,67,"_route$params3"],[214,59,200,67],[215,10,201,6],[215,14,202,8,"initialParams"],[215,27,202,21],[215,30,203,10,"screens"],[215,37,203,17],[215,38,203,18,"curr"],[215,42,203,22],[215,43,203,23],[215,44,203,24,"props"],[215,49,203,29],[215,50,202,8,"initialParams"],[215,63,202,21],[216,10,204,6],[216,14,204,12,"initialParamsFromParams"],[216,37,204,35],[216,40,204,38],[216,41,204,38,"route"],[216,46,204,43],[216,59,204,43,"_route$params"],[216,72,204,43],[216,75,204,38,"route"],[216,80,204,43],[216,81,204,45,"params"],[216,87,204,51],[216,108,204,38,"_route$params"],[216,121,204,38],[216,122,204,53,"state"],[216,127,204,58],[216,132,204,62],[216,136,204,66],[216,140,204,70],[216,141,204,70,"route"],[216,146,204,75],[216,159,204,75,"_route$params2"],[216,173,204,75],[216,176,204,70,"route"],[216,181,204,75],[216,182,204,77,"params"],[216,188,204,83],[216,209,204,70,"_route$params2"],[216,223,204,70],[216,224,204,85,"initial"],[216,231,204,92],[216,237,204,97],[216,242,204,102],[216,246,204,106],[216,247,204,106,"route"],[216,252,204,111],[216,265,204,111,"_route$params3"],[216,279,204,111],[216,282,204,106,"route"],[216,287,204,111],[216,288,204,113,"params"],[216,294,204,119],[216,315,204,106,"_route$params3"],[216,329,204,106],[216,330,204,121,"screen"],[216,336,204,127],[216,342,204,132,"curr"],[216,346,204,136],[216,349,204,139,"route"],[216,354,204,144],[216,355,204,145,"params"],[216,361,204,151],[216,362,204,152,"params"],[216,368,204,158],[216,371,204,161,"undefined"],[216,380,204,170],[217,10,205,6,"acc"],[217,13,205,9],[217,14,205,10,"curr"],[217,18,205,14],[217,19,205,15],[217,22,205,18,"initialParams"],[217,35,205,31],[217,40,205,36,"undefined"],[217,49,205,45],[217,53,205,49,"initialParamsFromParams"],[217,76,205,72],[217,81,205,77,"undefined"],[217,90,205,86],[217,93,205,86,"Object"],[217,99,205,86],[217,100,205,86,"assign"],[217,106,205,86],[217,111,206,11,"initialParams"],[217,124,206,24],[217,126,207,11,"initialParamsFromParams"],[217,149,207,34],[217,153,208,10,"undefined"],[217,162,208,19],[218,10,209,6],[218,17,209,13,"acc"],[218,20,209,16],[219,8,210,4],[219,9,210,5],[219,11,210,7],[219,12,210,8],[219,13,210,9],[219,14,210,10],[221,8,212,4],[222,8,213,4],[223,8,214,4],[224,8,215,4],[225,8,216,4],[225,12,216,8],[225,13,216,9,"currentState"],[225,25,216,21],[225,30,216,26,"undefined"],[225,39,216,35],[225,43,216,39],[225,44,216,40,"isStateValid"],[225,56,216,52],[225,57,216,53,"currentState"],[225,69,216,65],[225,70,216,66],[225,75,216,71],[225,76,216,71,"route"],[225,81,216,76],[225,94,216,76,"_route$params4"],[225,108,216,76],[225,111,216,71,"route"],[225,116,216,76],[225,117,216,78,"params"],[225,123,216,84],[225,144,216,71,"_route$params4"],[225,158,216,71],[225,159,216,86,"state"],[225,164,216,91],[225,169,216,95],[225,173,216,99],[225,177,216,103],[225,179,216,105],[225,187,216,112,"route"],[225,192,216,117],[225,205,216,117,"_route$params5"],[225,219,216,117],[225,222,216,112,"route"],[225,227,216,117],[225,228,216,119,"params"],[225,234,216,125],[225,255,216,112,"_route$params5"],[225,269,216,112],[225,270,216,127,"screen"],[225,276,216,133],[225,282,216,138],[225,290,216,146],[225,294,216,150],[225,295,216,150,"route"],[225,300,216,155],[225,313,216,155,"_route$params6"],[225,327,216,155],[225,330,216,150,"route"],[225,335,216,155],[225,336,216,157,"params"],[225,342,216,163],[225,363,216,150,"_route$params6"],[225,377,216,150],[225,378,216,165,"initial"],[225,385,216,172],[225,391,216,177],[225,396,216,182],[225,397,216,183],[225,399,216,185],[226,10,217,6],[226,17,217,13],[226,18,217,14,"router"],[226,24,217,20],[226,25,217,21,"getInitialState"],[226,40,217,36],[226,41,217,37],[227,12,218,8,"routeNames"],[227,22,218,18],[227,24,218,8,"routeNames"],[227,34,218,18],[228,12,219,8,"routeParamList"],[228,26,219,22],[228,28,219,24,"initialRouteParamList"],[228,49,219,45],[229,12,220,8,"routeGetIdList"],[229,26,220,22],[229,28,220,8,"routeGetIdList"],[230,10,221,6],[230,11,221,7],[230,12,221,8],[230,14,221,10],[230,18,221,14],[230,19,221,15],[231,8,222,4],[231,9,222,5],[231,15,222,11],[232,10,222,11],[232,14,222,11,"_route$params7"],[232,28,222,11],[232,30,222,11,"_route$params8"],[232,44,222,11],[232,46,222,11,"_route$params9"],[232,60,222,11],[233,10,223,6],[233,14,223,10,"stateFromParams"],[233,29,223,25],[234,10,224,6],[234,14,224,10],[234,15,224,10,"route"],[234,20,224,15],[234,33,224,15,"_route$params7"],[234,47,224,15],[234,50,224,10,"route"],[234,55,224,15],[234,56,224,17,"params"],[234,62,224,23],[234,83,224,10,"_route$params7"],[234,97,224,10],[234,98,224,25,"state"],[234,103,224,30],[234,108,224,34],[234,112,224,38],[234,114,224,40],[235,12,225,8,"stateFromParams"],[235,27,225,23],[235,30,225,26,"route"],[235,35,225,31],[235,36,225,32,"params"],[235,42,225,38],[235,43,225,39,"state"],[235,48,225,44],[236,10,226,6],[236,11,226,7],[236,17,226,13],[236,21,226,17],[236,29,226,24,"route"],[236,34,226,29],[236,47,226,29,"_route$params8"],[236,61,226,29],[236,64,226,24,"route"],[236,69,226,29],[236,70,226,31,"params"],[236,76,226,37],[236,97,226,24,"_route$params8"],[236,111,226,24],[236,112,226,39,"screen"],[236,118,226,45],[236,124,226,50],[236,132,226,58],[236,136,226,62],[236,137,226,62,"route"],[236,142,226,67],[236,155,226,67,"_route$params9"],[236,169,226,67],[236,172,226,62,"route"],[236,177,226,67],[236,178,226,69,"params"],[236,184,226,75],[236,205,226,62,"_route$params9"],[236,219,226,62],[236,220,226,77,"initial"],[236,227,226,84],[236,233,226,89],[236,238,226,94],[236,240,226,96],[237,12,227,8,"stateFromParams"],[237,27,227,23],[237,30,227,26],[238,14,228,10,"index"],[238,19,228,15],[238,21,228,17],[238,22,228,18],[239,14,229,10,"routes"],[239,20,229,16],[239,22,229,18],[239,23,229,19],[240,16,230,12,"name"],[240,20,230,16],[240,22,230,18,"route"],[240,27,230,23],[240,28,230,24,"params"],[240,34,230,30],[240,35,230,31,"screen"],[240,41,230,37],[241,16,231,12,"params"],[241,22,231,18],[241,24,231,20,"route"],[241,29,231,25],[241,30,231,26,"params"],[241,36,231,32],[241,37,231,33,"params"],[241,43,231,39],[242,16,232,12,"path"],[242,20,232,16],[242,22,232,18,"route"],[242,27,232,23],[242,28,232,24,"params"],[242,34,232,30],[242,35,232,31,"path"],[243,14,233,10],[243,15,233,11],[244,12,234,8],[244,13,234,9],[245,10,235,6],[246,10,236,6],[246,17,236,13],[246,18,236,14,"router"],[246,24,236,20],[246,25,236,21,"getRehydratedState"],[246,43,236,39],[246,44,236,40,"stateFromParams"],[246,59,236,55],[246,70,236,40,"stateFromParams"],[246,85,236,55],[246,88,236,59,"currentState"],[246,100,236,71],[246,102,236,73],[247,12,237,8,"routeNames"],[247,22,237,18],[247,24,237,8,"routeNames"],[247,34,237,18],[248,12,238,8,"routeParamList"],[248,26,238,22],[248,28,238,24,"initialRouteParamList"],[248,49,238,45],[249,12,239,8,"routeGetIdList"],[249,26,239,22],[249,28,239,8,"routeGetIdList"],[250,10,240,6],[250,11,240,7],[250,12,240,8],[250,14,240,10],[250,19,240,15],[250,20,240,16],[251,8,241,4],[252,8,242,4],[253,8,243,4],[254,8,244,4],[255,8,245,4],[256,8,246,4],[257,8,247,4],[258,6,248,2],[258,7,248,3],[258,9,248,5],[258,10,248,6,"currentState"],[258,22,248,18],[258,24,248,20,"router"],[258,30,248,26],[258,32,248,28,"isStateValid"],[258,44,248,40],[258,45,248,41],[258,46,248,42],[259,6,248,42,"_React$useMemo2"],[259,21,248,42],[259,24,248,42,"_slicedToArray"],[259,38,248,42],[259,39,248,42,"_React$useMemo"],[259,53,248,42],[260,6,199,9,"initializedState"],[260,22,199,25],[260,25,199,25,"_React$useMemo2"],[260,40,199,25],[261,6,199,27,"isFirstStateInitialization"],[261,32,199,53],[261,35,199,53,"_React$useMemo2"],[261,50,199,53],[262,4,249,2],[262,8,249,8,"previousRouteKeyListRef"],[262,31,249,31],[262,34,249,34,"React"],[262,39,249,39],[262,40,249,40,"useRef"],[262,46,249,46],[262,47,249,47,"routeKeyList"],[262,59,249,59],[262,60,249,60],[263,4,250,2,"React"],[263,9,250,7],[263,10,250,8,"useEffect"],[263,19,250,17],[263,20,250,18],[263,32,250,24],[264,6,251,4,"previousRouteKeyListRef"],[264,29,251,27],[264,30,251,28,"current"],[264,37,251,35],[264,40,251,38,"routeKeyList"],[264,52,251,50],[265,4,252,2],[265,5,252,3],[265,6,252,4],[266,4,253,2],[266,8,253,8,"previousRouteKeyList"],[266,28,253,28],[266,31,253,31,"previousRouteKeyListRef"],[266,54,253,54],[266,55,253,55,"current"],[266,62,253,62],[267,4,254,2],[267,8,254,6,"state"],[267,13,254,11],[268,4,255,2],[269,4,256,2],[270,4,257,2],[271,4,258,2,"isStateInitialized"],[271,22,258,20],[271,23,258,21,"currentState"],[271,35,258,33],[271,36,258,34],[271,39,258,37,"currentState"],[271,51,258,49],[271,54,258,52,"initializedState"],[271,70,258,68],[272,4,259,2],[272,8,259,6,"nextState"],[272,17,259,15],[272,20,259,18,"state"],[272,25,259,23],[273,4,260,2],[273,8,260,6],[273,9,260,7],[273,10,260,8],[273,11,260,9],[273,13,260,11,"_$$_REQUIRE"],[273,24,260,11],[273,25,260,11,"_dependencyMap"],[273,39,260,11],[273,66,260,25,"isArrayEqual"],[273,78,260,37],[273,80,260,39,"state"],[273,85,260,44],[273,86,260,45,"routeNames"],[273,96,260,55],[273,98,260,57,"routeNames"],[273,108,260,67],[273,109,260,68],[273,113,260,72],[273,114,260,73],[273,115,260,74],[273,116,260,75],[273,118,260,77,"_$$_REQUIRE"],[273,129,260,77],[273,130,260,77,"_dependencyMap"],[273,144,260,77],[273,172,260,92,"isRecordEqual"],[273,185,260,105],[273,187,260,107,"routeKeyList"],[273,199,260,119],[273,201,260,121,"previousRouteKeyList"],[273,221,260,141],[273,222,260,142],[273,224,260,144],[274,6,261,4],[274,10,261,10,"navigatorStateForNextRouteNamesChange"],[274,47,261,47],[274,50,261,50,"options"],[274,57,261,57],[274,58,261,58,"UNSTABLE_getStateForRouteNamesChange"],[274,94,261,94],[274,114,261,50,"options"],[274,121,261,57],[274,122,261,58,"UNSTABLE_getStateForRouteNamesChange"],[274,158,261,94],[274,159,261,97,"state"],[274,164,261,102],[274,165,261,103],[275,6,262,4],[276,6,263,4,"nextState"],[276,15,263,13],[276,18,263,16,"navigatorStateForNextRouteNamesChange"],[276,55,263,53],[277,6,264,4],[278,6,265,4,"router"],[278,12,265,10],[278,13,265,11,"getRehydratedState"],[278,31,265,29],[278,32,265,30,"navigatorStateForNextRouteNamesChange"],[278,69,265,67],[278,71,265,69],[279,8,266,6,"routeNames"],[279,18,266,16],[279,20,266,6,"routeNames"],[279,30,266,16],[280,8,267,6,"routeParamList"],[280,22,267,20],[280,24,267,6,"routeParamList"],[280,38,267,20],[281,8,268,6,"routeGetIdList"],[281,22,268,20],[281,24,268,6,"routeGetIdList"],[282,6,269,4],[282,7,269,5],[282,8,269,6],[282,11,269,9,"router"],[282,17,269,15],[282,18,269,16,"getStateForRouteNamesChange"],[282,45,269,43],[282,46,269,44,"state"],[282,51,269,49],[282,53,269,51],[283,8,270,6,"routeNames"],[283,18,270,16],[283,20,270,6,"routeNames"],[283,30,270,16],[284,8,271,6,"routeParamList"],[284,22,271,20],[284,24,271,6,"routeParamList"],[284,38,271,20],[285,8,272,6,"routeGetIdList"],[285,22,272,20],[285,24,272,6,"routeGetIdList"],[285,38,272,20],[286,8,273,6,"routeKeyChanges"],[286,23,273,21],[286,25,273,23,"Object"],[286,31,273,29],[286,32,273,30,"keys"],[286,36,273,34],[286,37,273,35,"routeKeyList"],[286,49,273,47],[286,50,273,48],[286,51,273,49,"filter"],[286,57,273,55],[286,58,273,56],[286,68,273,56,"name"],[286,72,273,60],[287,10,273,60],[287,17,273,64,"name"],[287,21,273,68],[287,25,273,72,"previousRouteKeyList"],[287,45,273,92],[287,49,273,96,"routeKeyList"],[287,61,273,108],[287,62,273,109,"name"],[287,66,273,113],[287,67,273,114],[287,72,273,119,"previousRouteKeyList"],[287,92,273,139],[287,93,273,140,"name"],[287,97,273,144],[287,98,273,145],[288,8,273,145],[289,6,274,4],[289,7,274,5],[289,8,274,6],[290,4,275,2],[291,4,276,2],[291,8,276,8,"previousNestedParamsRef"],[291,31,276,31],[291,34,276,34,"React"],[291,39,276,39],[291,40,276,40,"useRef"],[291,46,276,46],[291,47,276,47,"route"],[291,52,276,52],[291,72,276,47,"route"],[291,77,276,52],[291,78,276,54,"params"],[291,84,276,60],[291,85,276,61],[292,4,277,2,"React"],[292,9,277,7],[292,10,277,8,"useEffect"],[292,19,277,17],[292,20,277,18],[292,32,277,24],[293,6,278,4,"previousNestedParamsRef"],[293,29,278,27],[293,30,278,28,"current"],[293,37,278,35],[293,40,278,38,"route"],[293,45,278,43],[293,65,278,38,"route"],[293,70,278,43],[293,71,278,45,"params"],[293,77,278,51],[294,4,279,2],[294,5,279,3],[294,7,279,5],[294,8,279,6,"route"],[294,13,279,11],[294,33,279,6,"route"],[294,38,279,11],[294,39,279,13,"params"],[294,45,279,19],[294,46,279,20],[294,47,279,21],[295,4,280,2],[295,8,280,6,"route"],[295,13,280,11],[295,25,280,6,"route"],[295,30,280,11],[295,31,280,13,"params"],[295,37,280,19],[295,39,280,21],[296,6,281,4],[296,10,281,10,"previousParams"],[296,24,281,24],[296,27,281,27,"previousNestedParamsRef"],[296,50,281,50],[296,51,281,51,"current"],[296,58,281,58],[297,6,282,4],[297,10,282,8,"action"],[297,16,282,14],[298,6,283,4],[298,10,283,8],[298,17,283,15,"route"],[298,22,283,20],[298,23,283,21,"params"],[298,29,283,27],[298,30,283,28,"state"],[298,35,283,33],[298,40,283,38],[298,48,283,46],[298,52,283,50,"route"],[298,57,283,55],[298,58,283,56,"params"],[298,64,283,62],[298,65,283,63,"state"],[298,70,283,68],[298,74,283,72],[298,78,283,76],[298,82,283,80,"route"],[298,87,283,85],[298,88,283,86,"params"],[298,94,283,92],[298,99,283,97,"previousParams"],[298,113,283,111],[298,115,283,113],[299,8,284,6],[300,8,285,6,"action"],[300,14,285,12],[300,17,285,15,"_$$_REQUIRE"],[300,28,285,15],[300,29,285,15,"_dependencyMap"],[300,43,285,15],[300,78,285,24,"CommonActions"],[300,91,285,37],[300,92,285,38,"reset"],[300,97,285,43],[300,98,285,44,"route"],[300,103,285,49],[300,104,285,50,"params"],[300,110,285,56],[300,111,285,57,"state"],[300,116,285,62],[300,117,285,63],[301,6,286,4],[301,7,286,5],[301,13,286,11],[301,17,286,15],[301,24,286,22,"route"],[301,29,286,27],[301,30,286,28,"params"],[301,36,286,34],[301,37,286,35,"screen"],[301,43,286,41],[301,48,286,46],[301,56,286,54],[301,61,286,59,"route"],[301,66,286,64],[301,67,286,65,"params"],[301,73,286,71],[301,74,286,72,"initial"],[301,81,286,79],[301,86,286,84],[301,91,286,89],[301,95,286,93,"isFirstStateInitialization"],[301,121,286,119],[301,125,286,123,"route"],[301,130,286,128],[301,131,286,129,"params"],[301,137,286,135],[301,142,286,140,"previousParams"],[301,156,286,154],[301,157,286,155],[301,159,286,157],[302,8,287,6],[303,8,288,6,"action"],[303,14,288,12],[303,17,288,15,"_$$_REQUIRE"],[303,28,288,15],[303,29,288,15,"_dependencyMap"],[303,43,288,15],[303,78,288,24,"CommonActions"],[303,91,288,37],[303,92,288,38,"navigate"],[303,100,288,46],[303,101,288,47],[304,10,289,8,"name"],[304,14,289,12],[304,16,289,14,"route"],[304,21,289,19],[304,22,289,20,"params"],[304,28,289,26],[304,29,289,27,"screen"],[304,35,289,33],[305,10,290,8,"params"],[305,16,290,14],[305,18,290,16,"route"],[305,23,290,21],[305,24,290,22,"params"],[305,30,290,28],[305,31,290,29,"params"],[305,37,290,35],[306,10,291,8,"path"],[306,14,291,12],[306,16,291,14,"route"],[306,21,291,19],[306,22,291,20,"params"],[306,28,291,26],[306,29,291,27,"path"],[307,8,292,6],[307,9,292,7],[307,10,292,8],[308,6,293,4],[310,6,295,4],[311,6,296,4],[311,10,296,10,"updatedState"],[311,22,296,22],[311,25,296,25,"action"],[311,31,296,31],[311,34,296,34,"router"],[311,40,296,40],[311,41,296,41,"getStateForAction"],[311,58,296,58],[311,59,296,59,"nextState"],[311,68,296,68],[311,70,296,70,"action"],[311,76,296,76],[311,78,296,78],[312,8,297,6,"routeNames"],[312,18,297,16],[312,20,297,6,"routeNames"],[312,30,297,16],[313,8,298,6,"routeParamList"],[313,22,298,20],[313,24,298,6,"routeParamList"],[313,38,298,20],[314,8,299,6,"routeGetIdList"],[314,22,299,20],[314,24,299,6,"routeGetIdList"],[315,6,300,4],[315,7,300,5],[315,8,300,6],[315,11,300,9],[315,15,300,13],[316,6,301,4,"nextState"],[316,15,301,13],[316,18,301,16,"updatedState"],[316,30,301,28],[316,35,301,33],[316,39,301,37],[316,42,301,40,"router"],[316,48,301,46],[316,49,301,47,"getRehydratedState"],[316,67,301,65],[316,68,301,66,"updatedState"],[316,80,301,78],[316,82,301,80],[317,8,302,6,"routeNames"],[317,18,302,16],[317,20,302,6,"routeNames"],[317,30,302,16],[318,8,303,6,"routeParamList"],[318,22,303,20],[318,24,303,6,"routeParamList"],[318,38,303,20],[319,8,304,6,"routeGetIdList"],[319,22,304,20],[319,24,304,6,"routeGetIdList"],[320,6,305,4],[320,7,305,5],[320,8,305,6],[320,11,305,9,"nextState"],[320,20,305,18],[321,4,306,2],[322,4,307,2],[322,8,307,8,"shouldUpdate"],[322,20,307,20],[322,23,307,23,"state"],[322,28,307,28],[322,33,307,33,"nextState"],[322,42,307,42],[323,4,308,2],[323,5,308,3],[323,6,308,4],[323,8,308,6,"_$$_REQUIRE"],[323,19,308,6],[323,20,308,6,"_dependencyMap"],[323,34,308,6],[323,66,308,25,"useScheduleUpdate"],[323,83,308,42],[323,85,308,44],[323,97,308,50],[324,6,309,4],[324,10,309,8,"shouldUpdate"],[324,22,309,20],[324,24,309,22],[325,8,310,6],[326,8,311,6,"setState"],[326,16,311,14],[326,17,311,15,"nextState"],[326,26,311,24],[326,27,311,25],[327,6,312,4],[328,4,313,2],[328,5,313,3],[328,6,313,4],[330,4,315,2],[331,4,316,2],[332,4,317,2],[333,4,318,2,"state"],[333,9,318,7],[333,12,318,10,"nextState"],[333,21,318,19],[334,4,319,2,"React"],[334,9,319,7],[334,10,319,8,"useEffect"],[334,19,319,17],[334,20,319,18],[334,32,319,24],[335,6,320,4],[336,6,321,4],[337,6,322,4,"stateCleanedUp"],[337,20,322,18],[337,21,322,19,"current"],[337,28,322,26],[337,31,322,29],[337,36,322,34],[338,6,323,4,"setKey"],[338,12,323,10],[338,13,323,11,"navigatorKey"],[338,25,323,23],[338,26,323,24],[339,6,324,4],[339,10,324,8],[339,11,324,9,"getIsInitial"],[339,23,324,21],[339,24,324,22],[339,25,324,23],[339,27,324,25],[340,8,325,6],[341,8,326,6],[342,8,327,6],[343,8,328,6,"setState"],[343,16,328,14],[343,17,328,15,"nextState"],[343,26,328,24],[343,27,328,25],[344,6,329,4],[345,6,330,4],[345,13,330,11],[345,25,330,17],[346,8,331,6],[347,8,332,6],[347,12,332,10,"getCurrentState"],[347,27,332,25],[347,28,332,26],[347,29,332,27],[347,34,332,32,"undefined"],[347,43,332,41],[347,47,332,45,"getKey"],[347,53,332,51],[347,54,332,52],[347,55,332,53],[347,60,332,58,"navigatorKey"],[347,72,332,70],[347,74,332,72],[348,10,333,8,"setCurrentState"],[348,25,333,23],[348,26,333,24,"undefined"],[348,35,333,33],[348,36,333,34],[349,10,334,8,"stateCleanedUp"],[349,24,334,22],[349,25,334,23,"current"],[349,32,334,30],[349,35,334,33],[349,39,334,37],[350,8,335,6],[351,6,336,4],[351,7,336,5],[352,6,337,4],[353,4,338,2],[353,5,338,3],[353,7,338,5],[353,9,338,7],[353,10,338,8],[355,4,340,2],[356,4,341,2],[357,4,342,2],[358,4,343,2],[359,4,344,2],[360,4,345,2],[360,8,345,8,"stateRef"],[360,16,345,16],[360,19,345,19,"React"],[360,24,345,24],[360,25,345,25,"useRef"],[360,31,345,31],[360,32,345,32,"state"],[360,37,345,37],[360,38,345,38],[361,4,346,2,"stateRef"],[361,12,346,10],[361,13,346,11,"current"],[361,20,346,18],[361,23,346,21,"state"],[361,28,346,26],[362,4,347,2],[362,5,347,3],[362,6,347,4],[362,8,347,6,"_$$_REQUIRE"],[362,19,347,6],[362,20,347,6,"_dependencyMap"],[362,34,347,6],[362,71,347,33,"useIsomorphicLayoutEffect"],[362,96,347,58],[362,98,347,60],[362,110,347,66],[363,6,348,4,"stateRef"],[363,14,348,12],[363,15,348,13,"current"],[363,22,348,20],[363,25,348,23],[363,29,348,27],[364,4,349,2],[364,5,349,3],[364,6,349,4],[365,4,350,2],[365,8,350,8,"getState"],[365,16,350,16],[365,19,350,19],[365,20,350,20],[365,21,350,21],[365,23,350,23,"_useLatestCallback"],[365,41,350,41],[365,42,350,42,"default"],[365,49,350,49],[365,51,350,51],[365,63,350,57],[366,6,351,4],[366,10,351,10,"currentState"],[366,22,351,22],[366,25,351,25,"getCurrentState"],[366,40,351,40],[366,41,351,41],[366,42,351,42],[367,6,352,4],[367,13,352,11],[367,14,352,12],[367,15,352,13],[367,17,352,15,"_$$_REQUIRE"],[367,28,352,15],[367,29,352,15,"_dependencyMap"],[367,43,352,15],[367,68,352,27,"deepFreeze"],[367,78,352,37],[367,80,352,39,"isStateInitialized"],[367,98,352,57],[367,99,352,58,"currentState"],[367,111,352,70],[367,112,352,71],[367,115,352,74,"currentState"],[367,127,352,86],[367,130,352,89,"initializedState"],[367,146,352,105],[367,147,352,106],[368,4,353,2],[368,5,353,3],[368,6,353,4],[369,4,354,2],[369,8,354,8,"emitter"],[369,15,354,15],[369,18,354,18],[369,19,354,19],[369,20,354,20],[369,22,354,22,"_$$_REQUIRE"],[369,33,354,22],[369,34,354,22,"_dependencyMap"],[369,48,354,22],[369,78,354,39,"useEventEmitter"],[369,93,354,54],[369,95,354,56],[369,105,354,56,"e"],[369,106,354,57],[369,108,354,61],[370,6,354,61],[370,10,354,61,"_ref"],[370,14,354,61],[371,6,355,4],[371,10,355,10,"routeNames"],[371,20,355,20],[371,23,355,23],[371,25,355,25],[372,6,356,4],[372,10,356,8,"route"],[372,15,356,13],[373,6,357,4],[373,10,357,8,"e"],[373,11,357,9],[373,12,357,10,"target"],[373,18,357,16],[373,20,357,18],[374,8,357,18],[374,12,357,18,"_route"],[374,18,357,18],[375,8,358,6,"route"],[375,13,358,11],[375,16,358,14,"state"],[375,21,358,19],[375,22,358,20,"routes"],[375,28,358,26],[375,29,358,27,"find"],[375,33,358,31],[375,34,358,32],[375,44,358,32,"route"],[375,49,358,37],[376,10,358,37],[376,17,358,41,"route"],[376,22,358,46],[376,23,358,47,"key"],[376,26,358,50],[376,31,358,55,"e"],[376,32,358,56],[376,33,358,57,"target"],[376,39,358,63],[377,8,358,63],[377,10,358,64],[378,8,359,6],[378,13,359,6,"_route"],[378,19,359,6],[378,22,359,10,"route"],[378,27,359,15],[378,40,359,10,"_route"],[378,46,359,10],[378,47,359,17,"name"],[378,51,359,21],[378,53,359,23],[379,10,360,8,"routeNames"],[379,20,360,18],[379,21,360,19,"push"],[379,25,360,23],[379,26,360,24,"route"],[379,31,360,29],[379,32,360,30,"name"],[379,36,360,34],[379,37,360,35],[380,8,361,6],[381,6,362,4],[381,7,362,5],[381,13,362,11],[382,8,363,6,"route"],[382,13,363,11],[382,16,363,14,"state"],[382,21,363,19],[382,22,363,20,"routes"],[382,28,363,26],[382,29,363,27,"state"],[382,34,363,32],[382,35,363,33,"index"],[382,40,363,38],[382,41,363,39],[383,8,364,6,"routeNames"],[383,18,364,16],[383,19,364,17,"push"],[383,23,364,21],[383,24,364,21,"apply"],[383,29,364,21],[383,30,364,6,"routeNames"],[383,40,364,16],[383,42,364,16,"_toConsumableArray"],[383,60,364,16],[383,61,364,25,"Object"],[383,67,364,31],[383,68,364,32,"keys"],[383,72,364,36],[383,73,364,37,"screens"],[383,80,364,44],[383,81,364,45],[383,82,364,46,"filter"],[383,88,364,52],[383,89,364,53],[383,99,364,53,"name"],[383,103,364,57],[384,10,364,57],[384,14,364,57,"_route2"],[384,21,364,57],[385,10,364,57],[385,17,364,61],[385,19,364,61,"_route2"],[385,26,364,61],[385,29,364,61,"route"],[385,34,364,66],[385,55,364,61,"_route2"],[385,62,364,61],[385,63,364,68,"name"],[385,67,364,72],[385,73,364,77,"name"],[385,77,364,81],[386,8,364,81],[386,10,364,82],[386,12,364,83],[387,6,365,4],[388,6,366,4],[388,10,366,8,"route"],[388,15,366,13],[388,19,366,17],[388,23,366,21],[388,25,366,23],[389,8,367,6],[390,6,368,4],[391,6,369,4],[391,10,369,10,"navigation"],[391,20,369,20],[391,23,369,23,"descriptors"],[391,34,369,34],[391,35,369,35,"route"],[391,40,369,40],[391,41,369,41,"key"],[391,44,369,44],[391,45,369,45],[391,46,369,46,"navigation"],[391,56,369,56],[392,6,370,4],[392,10,370,10,"listeners"],[392,19,370,19],[392,22,370,22],[392,23,370,22,"_ref"],[392,27,370,22],[392,32,370,24],[392,34,370,25,"concat"],[392,40,370,31],[392,41,370,31,"apply"],[392,46,370,31],[392,47,370,31,"_ref"],[392,51,370,31],[392,53,370,31,"_toConsumableArray"],[392,71,370,31],[392,72,372,7],[392,73,372,8,"screenListeners"],[392,88,372,23],[392,90,372,23,"concat"],[392,96,372,23],[392,97,372,23,"_toConsumableArray"],[392,115,372,23],[392,116,372,28,"routeNames"],[392,126,372,38],[392,127,372,39,"map"],[392,130,372,42],[392,131,372,43],[392,141,372,43,"name"],[392,145,372,47],[392,147,372,51],[393,8,373,6],[393,12,374,8,"listeners"],[393,21,374,17],[393,24,375,10,"screens"],[393,31,375,17],[393,32,375,18,"name"],[393,36,375,22],[393,37,375,23],[393,38,375,24,"props"],[393,43,375,29],[393,44,374,8,"listeners"],[393,53,374,17],[394,8,376,6],[394,15,376,13,"listeners"],[394,24,376,22],[395,6,377,4],[395,7,377,5],[395,8,377,6],[395,11,377,8,"map"],[395,14,377,11],[395,15,377,12],[395,25,377,12,"listeners"],[395,34,377,21],[395,36,377,25],[396,8,378,6],[396,12,378,12,"map"],[396,15,378,15],[396,18,378,18],[396,25,378,25,"listeners"],[396,34,378,34],[396,39,378,39],[396,49,378,49],[396,52,378,52,"listeners"],[396,61,378,61],[396,62,378,62],[397,10,379,8,"route"],[397,15,379,13],[397,17,379,15,"route"],[397,22,379,20],[398,10,380,8,"navigation"],[398,20,380,18],[398,22,380,8,"navigation"],[399,8,381,6],[399,9,381,7],[399,10,381,8],[399,13,381,11,"listeners"],[399,22,381,20],[400,8,382,6],[400,15,382,13,"map"],[400,18,382,16],[400,21,382,19,"Object"],[400,27,382,25],[400,28,382,26,"keys"],[400,32,382,30],[400,33,382,31,"map"],[400,36,382,34],[400,37,382,35],[400,38,382,36,"filter"],[400,44,382,42],[400,45,382,43],[400,55,382,43,"type"],[400,59,382,47],[401,10,382,47],[401,17,382,51,"type"],[401,21,382,55],[401,26,382,60,"e"],[401,27,382,61],[401,28,382,62,"type"],[401,32,382,66],[402,8,382,66],[402,10,382,67],[402,11,382,68,"map"],[402,14,382,71],[402,15,382,72],[402,25,382,72,"type"],[402,29,382,76],[403,10,382,76],[403,17,382,80,"map"],[403,20,382,83],[403,40,382,80,"map"],[403,43,382,83],[403,44,382,86,"type"],[403,48,382,90],[403,49,382,91],[404,8,382,91],[404,10,382,92],[404,13,382,95,"undefined"],[404,22,382,104],[405,6,383,4],[405,7,383,5],[405,8,383,6],[406,6,384,4],[407,6,385,4],[408,6,385,4],[408,7,386,5,"filter"],[408,13,386,11],[408,14,386,12],[408,24,386,13,"cb"],[408,26,386,15],[408,28,386,17,"i"],[408,29,386,18],[408,31,386,20,"self"],[408,35,386,24],[409,8,386,24],[409,15,386,29,"cb"],[409,17,386,31],[409,21,386,35,"self"],[409,25,386,39],[409,26,386,40,"lastIndexOf"],[409,37,386,51],[409,38,386,52,"cb"],[409,40,386,54],[409,41,386,55],[409,46,386,60,"i"],[409,47,386,61],[410,6,386,61],[410,8,386,62],[411,6,387,4,"listeners"],[411,15,387,13],[411,16,387,14,"forEach"],[411,23,387,21],[411,24,387,22],[411,34,387,22,"listener"],[411,42,387,30],[412,8,387,30],[412,15,387,34,"listener"],[412,23,387,42],[412,43,387,34,"listener"],[412,51,387,42],[412,52,387,45,"e"],[412,53,387,46],[412,54,387,47],[413,6,387,47],[413,8,387,48],[414,4,388,2],[414,5,388,3],[414,6,388,4],[415,4,389,2],[415,5,389,3],[415,6,389,4],[415,8,389,6,"_$$_REQUIRE"],[415,19,389,6],[415,20,389,6,"_dependencyMap"],[415,34,389,6],[415,63,389,22,"useFocusEvents"],[415,77,389,36],[415,79,389,38],[416,6,390,4,"state"],[416,11,390,9],[416,13,390,4,"state"],[416,18,390,9],[417,6,391,4,"emitter"],[417,13,391,11],[417,15,391,4,"emitter"],[418,4,392,2],[418,5,392,3],[418,6,392,4],[419,4,393,2,"React"],[419,9,393,7],[419,10,393,8,"useEffect"],[419,19,393,17],[419,20,393,18],[419,32,393,24],[420,6,394,4,"emitter"],[420,13,394,11],[420,14,394,12,"emit"],[420,18,394,16],[420,19,394,17],[421,8,395,6,"type"],[421,12,395,10],[421,14,395,12],[421,21,395,19],[422,8,396,6,"data"],[422,12,396,10],[422,14,396,12],[423,10,397,8,"state"],[423,15,397,13],[423,17,397,8,"state"],[424,8,398,6],[425,6,399,4],[425,7,399,5],[425,8,399,6],[426,4,400,2],[426,5,400,3],[426,7,400,5],[426,8,400,6,"emitter"],[426,15,400,13],[426,17,400,15,"state"],[426,22,400,20],[426,23,400,21],[426,24,400,22],[427,4,401,2],[427,8,401,2,"_ref2"],[427,13,401,2],[427,16,404,6],[427,17,404,7],[427,18,404,8],[427,20,404,10,"_$$_REQUIRE"],[427,31,404,10],[427,32,404,10,"_dependencyMap"],[427,46,404,10],[427,78,404,29,"useChildListeners"],[427,95,404,46],[427,97,404,48],[427,98,404,49],[428,6,402,15,"childListeners"],[428,20,402,29],[428,23,402,29,"_ref2"],[428,28,402,29],[428,29,402,4,"listeners"],[428,38,402,13],[429,6,403,4,"addListener"],[429,17,403,15],[429,20,403,15,"_ref2"],[429,25,403,15],[429,26,403,4,"addListener"],[429,37,403,15],[430,4,405,2],[430,8,405,2,"_ref3"],[430,13,405,2],[430,16,408,6],[430,17,408,7],[430,18,408,8],[430,20,408,10,"_$$_REQUIRE"],[430,31,408,10],[430,32,408,10,"_dependencyMap"],[430,46,408,10],[430,83,408,34,"useKeyedChildListeners"],[430,105,408,56],[430,107,408,58],[430,108,408,59],[431,6,406,4,"keyedListeners"],[431,20,406,18],[431,23,406,18,"_ref3"],[431,28,406,18],[431,29,406,4,"keyedListeners"],[431,43,406,18],[432,6,407,4,"addKeyedListener"],[432,22,407,20],[432,25,407,20,"_ref3"],[432,30,407,20],[432,31,407,4,"addKeyedListener"],[432,47,407,20],[433,4,409,2],[433,8,409,8,"onAction"],[433,16,409,16],[433,19,409,19],[433,20,409,20],[433,21,409,21],[433,23,409,23,"_$$_REQUIRE"],[433,34,409,23],[433,35,409,23,"_dependencyMap"],[433,49,409,23],[433,75,409,36,"useOnAction"],[433,86,409,47],[433,88,409,49],[434,6,410,4,"router"],[434,12,410,10],[434,14,410,4,"router"],[434,20,410,10],[435,6,411,4,"getState"],[435,14,411,12],[435,16,411,4,"getState"],[435,24,411,12],[436,6,412,4,"setState"],[436,14,412,12],[436,16,412,4,"setState"],[436,24,412,12],[437,6,413,4,"key"],[437,9,413,7],[437,11,413,9,"route"],[437,16,413,14],[437,36,413,9,"route"],[437,41,413,14],[437,42,413,16,"key"],[437,45,413,19],[438,6,414,4,"actionListeners"],[438,21,414,19],[438,23,414,21,"childListeners"],[438,37,414,35],[438,38,414,36,"action"],[438,44,414,42],[439,6,415,4,"beforeRemoveListeners"],[439,27,415,25],[439,29,415,27,"keyedListeners"],[439,43,415,41],[439,44,415,42,"beforeRemove"],[439,56,415,54],[440,6,416,4,"routerConfigOptions"],[440,25,416,23],[440,27,416,25],[441,8,417,6,"routeNames"],[441,18,417,16],[441,20,417,6,"routeNames"],[441,30,417,16],[442,8,418,6,"routeParamList"],[442,22,418,20],[442,24,418,6,"routeParamList"],[442,38,418,20],[443,8,419,6,"routeGetIdList"],[443,22,419,20],[443,24,419,6,"routeGetIdList"],[444,6,420,4],[444,7,420,5],[445,6,421,4,"emitter"],[445,13,421,11],[445,15,421,4,"emitter"],[446,4,422,2],[446,5,422,3],[446,6,422,4],[447,4,423,2],[447,8,423,8,"onRouteFocus"],[447,20,423,20],[447,23,423,23],[447,24,423,24],[447,25,423,25],[447,27,423,27,"_$$_REQUIRE"],[447,38,423,27],[447,39,423,27,"_dependencyMap"],[447,53,423,27],[447,83,423,44,"useOnRouteFocus"],[447,98,423,59],[447,100,423,61],[448,6,424,4,"router"],[448,12,424,10],[448,14,424,4,"router"],[448,20,424,10],[449,6,425,4,"key"],[449,9,425,7],[449,11,425,9,"route"],[449,16,425,14],[449,36,425,9,"route"],[449,41,425,14],[449,42,425,16,"key"],[449,45,425,19],[450,6,426,4,"getState"],[450,14,426,12],[450,16,426,4,"getState"],[450,24,426,12],[451,6,427,4,"setState"],[451,14,427,12],[451,16,427,4,"setState"],[452,4,428,2],[452,5,428,3],[452,6,428,4],[453,4,429,2],[453,8,429,8,"navigation"],[453,18,429,18],[453,21,429,21],[453,22,429,22],[453,23,429,23],[453,25,429,25,"_$$_REQUIRE"],[453,36,429,25],[453,37,429,25,"_dependencyMap"],[453,51,429,25],[453,86,429,47,"useNavigationHelpers"],[453,106,429,67],[453,108,429,69],[454,6,430,4,"id"],[454,8,430,6],[454,10,430,8,"options"],[454,17,430,15],[454,18,430,16,"id"],[454,20,430,18],[455,6,431,4,"onAction"],[455,14,431,12],[455,16,431,4,"onAction"],[455,24,431,12],[456,6,432,4,"getState"],[456,14,432,12],[456,16,432,4,"getState"],[456,24,432,12],[457,6,433,4,"emitter"],[457,13,433,11],[457,15,433,4,"emitter"],[457,22,433,11],[458,6,434,4,"router"],[458,12,434,10],[458,14,434,4,"router"],[458,20,434,10],[459,6,435,4,"stateRef"],[459,14,435,12],[459,16,435,4,"stateRef"],[460,4,436,2],[460,5,436,3],[460,6,436,4],[461,4,437,2],[461,5,437,3],[461,6,437,4],[461,8,437,6,"_$$_REQUIRE"],[461,19,437,6],[461,20,437,6,"_dependencyMap"],[461,34,437,6],[461,83,437,42,"useFocusedListenersChildrenAdapter"],[461,117,437,76],[461,119,437,78],[462,6,438,4,"navigation"],[462,16,438,14],[462,18,438,4,"navigation"],[462,28,438,14],[463,6,439,4,"focusedListeners"],[463,22,439,20],[463,24,439,22,"childListeners"],[463,38,439,36],[463,39,439,37,"focus"],[464,4,440,2],[464,5,440,3],[464,6,440,4],[465,4,441,2],[465,5,441,3],[465,6,441,4],[465,8,441,6,"_$$_REQUIRE"],[465,19,441,6],[465,20,441,6,"_dependencyMap"],[465,34,441,6],[465,62,441,21,"useOnGetState"],[465,75,441,34],[465,77,441,36],[466,6,442,4,"getState"],[466,14,442,12],[466,16,442,4,"getState"],[466,24,442,12],[467,6,443,4,"getStateListeners"],[467,23,443,21],[467,25,443,23,"keyedListeners"],[467,39,443,37],[467,40,443,38,"getState"],[468,4,444,2],[468,5,444,3],[468,6,444,4],[469,4,445,2],[469,8,445,2,"_ref4"],[469,13,445,2],[469,16,448,6],[469,17,448,7],[469,18,448,8],[469,20,448,10,"_$$_REQUIRE"],[469,31,448,10],[469,32,448,10,"_dependencyMap"],[469,46,448,10],[469,75,448,26,"useDescriptors"],[469,89,448,40],[469,91,448,42],[470,8,449,4,"state"],[470,13,449,9],[470,15,449,4,"state"],[470,20,449,9],[471,8,450,4,"screens"],[471,15,450,11],[471,17,450,4,"screens"],[471,24,450,11],[472,8,451,4,"navigation"],[472,18,451,14],[472,20,451,4,"navigation"],[472,30,451,14],[473,8,452,4,"screenOptions"],[473,21,452,17],[473,23,452,4,"screenOptions"],[473,36,452,17],[474,8,453,4,"screenLayout"],[474,20,453,16],[474,22,453,4,"screenLayout"],[474,34,453,16],[475,8,454,4,"onAction"],[475,16,454,12],[475,18,454,4,"onAction"],[475,26,454,12],[476,8,455,4,"getState"],[476,16,455,12],[476,18,455,4,"getState"],[476,26,455,12],[477,8,456,4,"setState"],[477,16,456,12],[477,18,456,4,"setState"],[477,26,456,12],[478,8,457,4,"onRouteFocus"],[478,20,457,16],[478,22,457,4,"onRouteFocus"],[478,34,457,16],[479,8,458,4,"addListener"],[479,19,458,15],[479,21,458,4,"addListener"],[479,32,458,15],[480,8,459,4,"addKeyedListener"],[480,24,459,20],[480,26,459,4,"addKeyedListener"],[480,42,459,20],[481,8,460,4,"router"],[481,14,460,10],[481,16,460,4,"router"],[481,22,460,10],[482,8,461,4],[483,8,462,4,"emitter"],[483,15,462,11],[483,17,462,4,"emitter"],[484,6,463,2],[484,7,463,3],[484,8,463,4],[485,6,446,4,"describe"],[485,14,446,12],[485,17,446,12,"_ref4"],[485,22,446,12],[485,23,446,4,"describe"],[485,31,446,12],[486,6,447,4,"descriptors"],[486,17,447,15],[486,20,447,15,"_ref4"],[486,25,447,15],[486,26,447,4,"descriptors"],[486,37,447,15],[487,4,464,2],[487,5,464,3],[487,6,464,4],[487,8,464,6,"_$$_REQUIRE"],[487,19,464,6],[487,20,464,6,"_dependencyMap"],[487,34,464,6],[487,65,464,24,"useCurrentRender"],[487,81,464,40],[487,83,464,42],[488,6,465,4,"state"],[488,11,465,9],[488,13,465,4,"state"],[488,18,465,9],[489,6,466,4,"navigation"],[489,16,466,14],[489,18,466,4,"navigation"],[489,28,466,14],[490,6,467,4,"descriptors"],[490,17,467,15],[490,19,467,4,"descriptors"],[491,4,468,2],[491,5,468,3],[491,6,468,4],[492,4,469,2],[492,8,469,8,"NavigationContent"],[492,25,469,25],[492,28,469,28],[492,29,469,29],[492,30,469,30],[492,32,469,32,"_$$_REQUIRE"],[492,43,469,32],[492,44,469,32,"_dependencyMap"],[492,58,469,32],[492,85,469,46,"useComponent"],[492,97,469,58],[492,99,469,60],[492,109,469,60,"children"],[492,117,469,68],[492,119,469,72],[493,6,470,4],[493,10,470,10,"element"],[493,17,470,17],[493,20,470,20,"layout"],[493,26,470,26],[493,30,470,30],[493,34,470,34],[493,37,470,37,"layout"],[493,43,470,43],[493,44,470,44],[494,8,471,6,"state"],[494,13,471,11],[494,15,471,6,"state"],[494,20,471,11],[495,8,472,6,"descriptors"],[495,19,472,17],[495,21,472,6,"descriptors"],[495,32,472,17],[496,8,473,6,"navigation"],[496,18,473,16],[496,20,473,6,"navigation"],[496,30,473,16],[497,8,474,6,"children"],[497,16,474,14],[497,18,474,6,"children"],[498,6,475,4],[498,7,475,5],[498,8,475,6],[498,11,475,9,"children"],[498,19,475,17],[499,6,476,4],[499,13,476,11],[499,26,476,24],[499,27,476,25],[499,28,476,26],[499,30,476,28,"_jsxRuntime"],[499,41,476,39],[499,42,476,40,"jsx"],[499,45,476,43],[499,47,476,45,"_$$_REQUIRE"],[499,58,476,45],[499,59,476,45,"_dependencyMap"],[499,73,476,45],[499,112,476,71,"NavigationHelpersContext"],[499,136,476,95],[499,137,476,96,"Provider"],[499,145,476,104],[499,147,476,106],[500,8,477,6,"value"],[500,13,477,11],[500,15,477,13,"navigation"],[500,25,477,23],[501,8,478,6,"children"],[501,16,478,14],[501,18,478,16],[501,31,478,29],[501,32,478,30],[501,33,478,31],[501,35,478,33,"_jsxRuntime"],[501,46,478,44],[501,47,478,45,"jsx"],[501,50,478,48],[501,52,478,50,"_$$_REQUIRE"],[501,63,478,50],[501,64,478,50,"_dependencyMap"],[501,78,478,50],[501,114,478,73,"PreventRemoveProvider"],[501,135,478,94],[501,137,478,96],[502,10,479,8,"children"],[502,18,479,16],[502,20,479,18,"element"],[503,8,480,6],[503,9,480,7],[504,6,481,4],[504,7,481,5],[504,8,481,6],[505,4,482,2],[505,5,482,3],[505,6,482,4],[506,4,483,2],[506,11,483,9],[507,6,484,4,"state"],[507,11,484,9],[507,13,484,4,"state"],[507,18,484,9],[508,6,485,4,"navigation"],[508,16,485,14],[508,18,485,4,"navigation"],[508,28,485,14],[509,6,486,4,"describe"],[509,14,486,12],[509,16,486,4,"describe"],[509,24,486,12],[510,6,487,4,"descriptors"],[510,17,487,15],[510,19,487,4,"descriptors"],[510,30,487,15],[511,6,488,4,"NavigationContent"],[511,23,488,21],[511,25,488,4,"NavigationContent"],[512,4,489,2],[512,5,489,3],[513,2,490,0],[514,0,490,1],[514,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_getRequireWildcardCache","_interopRequireWildcard","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","<anonymous>","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0"],"mappings":"AAA;ACqC,qFD;AEC,4MF;AGC,mkBH;mBIG,iEJ;oCKO;0DCC;GD6B;oBEE;KF0C;CLG;AQS;iDCY;4DCC,qDD;GDI;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;mDCU;GDQ;uESC;oDJC;KIU;GTsC;kBUE;GVE;wDWqB,yFX;kBUI;GVE;4CC6B;GDK;kBUM;WTW;KSM;GVE;4DCS;GDE;mDCC;GDG;wDCC;gCWI,+BX;qDUM,4BV;2CYQ;KZK,Oa;2CHK,uBG,MC,mBD;KbC;YeG,iDf;sBgBC,yBhB;GDC;kBUK;GVO;4DCqE;GDa;CRQ"}},"type":"js/module"}]}