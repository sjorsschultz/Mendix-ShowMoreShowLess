{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":42,"index":56}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":7,"column":17,"index":161}},{"start":{"line":3,"column":0,"index":57},"end":{"line":7,"column":17,"index":161}},{"start":{"line":3,"column":0,"index":57},"end":{"line":7,"column":17,"index":161}},{"start":{"line":3,"column":0,"index":57},"end":{"line":7,"column":17,"index":161}},{"start":{"line":3,"column":0,"index":57},"end":{"line":7,"column":17,"index":161}}],"key":"OSA8xsmyvVLjxZOJ/QFvle2ua2I="}},{"name":"../commonTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":252},"end":{"line":12,"column":47,"index":299}}],"key":"dQSfS57Pf/C96+Vvd1rktbJJov4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useAnimatedKeyboard = useAnimatedKeyboard;\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  /**\n   * Lets you synchronously get the position and state of the keyboard.\n   *\n   * @param options - An additional keyboard configuration options.\n   * @returns An object with the current keyboard `height` and `state` as [shared\n   *   values](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value).\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/device/useAnimatedKeyboard\n   */\n  var _worklet_8736910501164_init_data = {\n    code: \"function useAnimatedKeyboardTs1(state,height){const{keyboardEventData}=this.__closure;keyboardEventData.state.value=state;keyboardEventData.height.value=height;}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-reanimated\\\\src\\\\hook\\\\useAnimatedKeyboard.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useAnimatedKeyboardTs1\\\",\\\"state\\\",\\\"height\\\",\\\"keyboardEventData\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-reanimated/src/hook/useAnimatedKeyboard.ts\\\"],\\\"mappings\\\":\\\"AAoCoD,QAAC,CAAAA,sBAAkBA,CAAAC,KAAA,CAAAC,MAAA,QAAAC,iBAAA,OAAAC,SAAA,CAEjED,iBAAiB,CAACF,KAAK,CAACI,KAAK,CAAGJ,KAAK,CACrCE,iBAAiB,CAACD,MAAM,CAACG,KAAK,CAAGH,MAAM,CACzC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  var _worklet_5450117293744_init_data = {\n    code: \"function useAnimatedKeyboardTs2(state,height){const{_keyboardEventData}=this.__closure;_keyboardEventData.state.value=state;_keyboardEventData.height.value=height;}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-reanimated\\\\src\\\\hook\\\\useAnimatedKeyboard.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useAnimatedKeyboardTs2\\\",\\\"state\\\",\\\"height\\\",\\\"_keyboardEventData\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-reanimated/src/hook/useAnimatedKeyboard.ts\\\"],\\\"mappings\\\":\\\"AAgDsD,QAAC,CAAAA,sBAAkBA,CAAAC,KAAA,CAAAC,MAAA,QAAAC,kBAAA,OAAAC,SAAA,CAEjED,kBAAiB,CAACF,KAAK,CAACI,KAAK,CAAGJ,KAAK,CACrCE,kBAAiB,CAACD,MAAM,CAACG,KAAK,CAAGH,MAAM,CACzC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  function useAnimatedKeyboard() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      isStatusBarTranslucentAndroid: false,\n      isNavigationBarTranslucentAndroid: false\n    };\n    var ref = (0, _react.useRef)(null);\n    var listenerId = (0, _react.useRef)(-1);\n    var isSubscribed = (0, _react.useRef)(false);\n    if (ref.current === null) {\n      var keyboardEventData = {\n        state: (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").makeMutable)(_$$_REQUIRE(_dependencyMap[2], \"../commonTypes\").KeyboardState.UNKNOWN),\n        height: (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").makeMutable)(0)\n      };\n      listenerId.current = (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").subscribeForKeyboardEvents)(function () {\n        var _e = [new global.Error(), -2, -27];\n        var useAnimatedKeyboardTs1 = function useAnimatedKeyboardTs1(state, height) {\n          keyboardEventData.state.value = state;\n          keyboardEventData.height.value = height;\n        };\n        useAnimatedKeyboardTs1.__closure = {\n          keyboardEventData: keyboardEventData\n        };\n        useAnimatedKeyboardTs1.__workletHash = 8736910501164;\n        useAnimatedKeyboardTs1.__initData = _worklet_8736910501164_init_data;\n        useAnimatedKeyboardTs1.__stackDetails = _e;\n        return useAnimatedKeyboardTs1;\n      }(), options);\n      ref.current = keyboardEventData;\n      isSubscribed.current = true;\n    }\n    (0, _react.useEffect)(function () {\n      if (isSubscribed.current === false && ref.current !== null) {\n        var _keyboardEventData = ref.current;\n        // subscribe again after Fast Refresh\n        listenerId.current = (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").subscribeForKeyboardEvents)(function () {\n          var _e = [new global.Error(), -2, -27];\n          var useAnimatedKeyboardTs2 = function useAnimatedKeyboardTs2(state, height) {\n            _keyboardEventData.state.value = state;\n            _keyboardEventData.height.value = height;\n          };\n          useAnimatedKeyboardTs2.__closure = {\n            _keyboardEventData: _keyboardEventData\n          };\n          useAnimatedKeyboardTs2.__workletHash = 5450117293744;\n          useAnimatedKeyboardTs2.__initData = _worklet_5450117293744_init_data;\n          useAnimatedKeyboardTs2.__stackDetails = _e;\n          return useAnimatedKeyboardTs2;\n        }(), options);\n        isSubscribed.current = true;\n      }\n      return function () {\n        (0, _$$_REQUIRE(_dependencyMap[1], \"../core\").unsubscribeFromKeyboardEvents)(listenerId.current);\n        isSubscribed.current = false;\n      };\n    }, []);\n    return ref.current;\n  }\n});","lineCount":86,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useAnimatedKeyboard"],[7,29,1,13],[7,32,1,13,"useAnimatedKeyboard"],[7,51,1,13],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"_$$_REQUIRE"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,14,0],[10,0,15,0],[11,0,16,0],[12,0,17,0],[13,0,18,0],[14,0,19,0],[15,0,20,0],[16,0,21,0],[17,2,14,0],[17,6,14,0,"_worklet_8736910501164_init_data"],[17,38,14,0],[18,4,14,0,"code"],[18,8,14,0],[19,4,14,0,"location"],[19,12,14,0],[20,4,14,0,"sourceMap"],[20,13,14,0],[21,4,14,0,"version"],[21,11,14,0],[22,2,14,0],[23,2,14,0],[23,6,14,0,"_worklet_5450117293744_init_data"],[23,38,14,0],[24,4,14,0,"code"],[24,8,14,0],[25,4,14,0,"location"],[25,12,14,0],[26,4,14,0,"sourceMap"],[26,13,14,0],[27,4,14,0,"version"],[27,11,14,0],[28,2,14,0],[29,2,22,7],[29,11,22,16,"useAnimatedKeyboard"],[29,30,22,35,"useAnimatedKeyboard"],[29,31,22,35],[29,33,27,24],[30,4,27,24],[30,8,23,2,"options"],[30,15,23,34],[30,18,23,34,"arguments"],[30,27,23,34],[30,28,23,34,"length"],[30,34,23,34],[30,42,23,34,"arguments"],[30,51,23,34],[30,59,23,34,"undefined"],[30,68,23,34],[30,71,23,34,"arguments"],[30,80,23,34],[30,86,23,37],[31,6,24,4,"isStatusBarTranslucentAndroid"],[31,35,24,33],[31,37,24,35],[31,42,24,40],[32,6,25,4,"isNavigationBarTranslucentAndroid"],[32,39,25,37],[32,41,25,39],[33,4,26,2],[33,5,26,3],[34,4,28,2],[34,8,28,8,"ref"],[34,11,28,11],[34,14,28,14],[34,18,28,14,"useRef"],[34,31,28,20],[34,33,28,50],[34,37,28,54],[34,38,28,55],[35,4,29,2],[35,8,29,8,"listenerId"],[35,18,29,18],[35,21,29,21],[35,25,29,21,"useRef"],[35,38,29,27],[35,40,29,36],[35,41,29,37],[35,42,29,38],[35,43,29,39],[36,4,30,2],[36,8,30,8,"isSubscribed"],[36,20,30,20],[36,23,30,23],[36,27,30,23,"useRef"],[36,40,30,29],[36,42,30,39],[36,47,30,44],[36,48,30,45],[37,4,32,2],[37,8,32,6,"ref"],[37,11,32,9],[37,12,32,10,"current"],[37,19,32,17],[37,24,32,22],[37,28,32,26],[37,30,32,28],[38,6,33,4],[38,10,33,10,"keyboardEventData"],[38,27,33,49],[38,30,33,52],[39,8,34,6,"state"],[39,13,34,11],[39,15,34,13],[39,19,34,13,"makeMutable"],[39,49,34,13],[39,50,34,13,"makeMutable"],[39,72,34,24],[39,74,34,40,"KeyboardState"],[39,104,34,40],[39,105,34,40,"KeyboardState"],[39,136,34,53],[39,137,34,54,"UNKNOWN"],[39,144,34,61],[39,145,34,62],[40,8,35,6,"height"],[40,14,35,12],[40,16,35,14],[40,20,35,14,"makeMutable"],[40,50,35,14],[40,51,35,14,"makeMutable"],[40,73,35,25],[40,75,35,26],[40,76,35,27],[41,6,36,4],[41,7,36,5],[42,6,37,4,"listenerId"],[42,16,37,14],[42,17,37,15,"current"],[42,24,37,22],[42,27,37,25],[42,31,37,25,"subscribeForKeyboardEvents"],[42,61,37,25],[42,62,37,25,"subscribeForKeyboardEvents"],[42,99,37,51],[42,101,37,52],[43,8,37,52],[43,12,37,52,"_e"],[43,14,37,52],[43,22,37,52,"global"],[43,28,37,52],[43,29,37,52,"Error"],[43,34,37,52],[44,8,37,52],[44,12,37,52,"useAnimatedKeyboardTs1"],[44,34,37,52],[44,46,37,52,"useAnimatedKeyboardTs1"],[44,69,37,53,"state"],[44,74,37,58],[44,76,37,60,"height"],[44,82,37,66],[44,84,37,71],[45,10,39,6,"keyboardEventData"],[45,27,39,23],[45,28,39,24,"state"],[45,33,39,29],[45,34,39,30,"value"],[45,39,39,35],[45,42,39,38,"state"],[45,47,39,43],[46,10,40,6,"keyboardEventData"],[46,27,40,23],[46,28,40,24,"height"],[46,34,40,30],[46,35,40,31,"value"],[46,40,40,36],[46,43,40,39,"height"],[46,49,40,45],[47,8,41,4],[47,9,41,5],[48,8,41,5,"useAnimatedKeyboardTs1"],[48,30,41,5],[48,31,41,5,"__closure"],[48,40,41,5],[49,10,41,5,"keyboardEventData"],[49,27,41,5],[49,29,39,6,"keyboardEventData"],[50,8,39,23],[51,8,39,23,"useAnimatedKeyboardTs1"],[51,30,39,23],[51,31,39,23,"__workletHash"],[51,44,39,23],[52,8,39,23,"useAnimatedKeyboardTs1"],[52,30,39,23],[52,31,39,23,"__initData"],[52,41,39,23],[52,44,39,23,"_worklet_8736910501164_init_data"],[52,76,39,23],[53,8,39,23,"useAnimatedKeyboardTs1"],[53,30,39,23],[53,31,39,23,"__stackDetails"],[53,45,39,23],[53,48,39,23,"_e"],[53,50,39,23],[54,8,39,23],[54,15,39,23,"useAnimatedKeyboardTs1"],[54,37,39,23],[55,6,39,23],[55,7,37,52],[55,11,41,7,"options"],[55,18,41,14],[55,19,41,15],[56,6,42,4,"ref"],[56,9,42,7],[56,10,42,8,"current"],[56,17,42,15],[56,20,42,18,"keyboardEventData"],[56,37,42,35],[57,6,43,4,"isSubscribed"],[57,18,43,16],[57,19,43,17,"current"],[57,26,43,24],[57,29,43,27],[57,33,43,31],[58,4,44,2],[59,4,45,2],[59,8,45,2,"useEffect"],[59,24,45,11],[59,26,45,12],[59,38,45,18],[60,6,46,4],[60,10,46,8,"isSubscribed"],[60,22,46,20],[60,23,46,21,"current"],[60,30,46,28],[60,35,46,33],[60,40,46,38],[60,44,46,42,"ref"],[60,47,46,45],[60,48,46,46,"current"],[60,55,46,53],[60,60,46,58],[60,64,46,62],[60,66,46,64],[61,8,47,6],[61,12,47,12,"keyboardEventData"],[61,30,47,29],[61,33,47,32,"ref"],[61,36,47,35],[61,37,47,36,"current"],[61,44,47,43],[62,8,48,6],[63,8,49,6,"listenerId"],[63,18,49,16],[63,19,49,17,"current"],[63,26,49,24],[63,29,49,27],[63,33,49,27,"subscribeForKeyboardEvents"],[63,63,49,27],[63,64,49,27,"subscribeForKeyboardEvents"],[63,101,49,53],[63,103,49,54],[64,10,49,54],[64,14,49,54,"_e"],[64,16,49,54],[64,24,49,54,"global"],[64,30,49,54],[64,31,49,54,"Error"],[64,36,49,54],[65,10,49,54],[65,14,49,54,"useAnimatedKeyboardTs2"],[65,36,49,54],[65,48,49,54,"useAnimatedKeyboardTs2"],[65,71,49,55,"state"],[65,76,49,60],[65,78,49,62,"height"],[65,84,49,68],[65,86,49,73],[66,12,51,8,"keyboardEventData"],[66,30,51,25],[66,31,51,26,"state"],[66,36,51,31],[66,37,51,32,"value"],[66,42,51,37],[66,45,51,40,"state"],[66,50,51,45],[67,12,52,8,"keyboardEventData"],[67,30,52,25],[67,31,52,26,"height"],[67,37,52,32],[67,38,52,33,"value"],[67,43,52,38],[67,46,52,41,"height"],[67,52,52,47],[68,10,53,6],[68,11,53,7],[69,10,53,7,"useAnimatedKeyboardTs2"],[69,32,53,7],[69,33,53,7,"__closure"],[69,42,53,7],[70,12,53,7,"_keyboardEventData"],[70,30,53,7],[70,32,51,8,"keyboardEventData"],[71,10,51,25],[72,10,51,25,"useAnimatedKeyboardTs2"],[72,32,51,25],[72,33,51,25,"__workletHash"],[72,46,51,25],[73,10,51,25,"useAnimatedKeyboardTs2"],[73,32,51,25],[73,33,51,25,"__initData"],[73,43,51,25],[73,46,51,25,"_worklet_5450117293744_init_data"],[73,78,51,25],[74,10,51,25,"useAnimatedKeyboardTs2"],[74,32,51,25],[74,33,51,25,"__stackDetails"],[74,47,51,25],[74,50,51,25,"_e"],[74,52,51,25],[75,10,51,25],[75,17,51,25,"useAnimatedKeyboardTs2"],[75,39,51,25],[76,8,51,25],[76,9,49,54],[76,13,53,9,"options"],[76,20,53,16],[76,21,53,17],[77,8,54,6,"isSubscribed"],[77,20,54,18],[77,21,54,19,"current"],[77,28,54,26],[77,31,54,29],[77,35,54,33],[78,6,55,4],[79,6,56,4],[79,13,56,11],[79,25,56,17],[80,8,57,6],[80,12,57,6,"unsubscribeFromKeyboardEvents"],[80,42,57,6],[80,43,57,6,"unsubscribeFromKeyboardEvents"],[80,83,57,35],[80,85,57,36,"listenerId"],[80,95,57,46],[80,96,57,47,"current"],[80,103,57,54],[80,104,57,55],[81,8,58,6,"isSubscribed"],[81,20,58,18],[81,21,58,19,"current"],[81,28,58,26],[81,31,58,29],[81,36,58,34],[82,6,59,4],[82,7,59,5],[83,4,60,2],[83,5,60,3],[83,7,60,5],[83,9,60,7],[83,10,60,8],[84,4,61,2],[84,11,61,9,"ref"],[84,14,61,12],[84,15,61,13,"current"],[84,22,61,20],[85,2,62,0],[86,0,62,1],[86,3]],"functionMap":{"names":["<global>","useAnimatedKeyboard","subscribeForKeyboardEvents$argument_0","useEffect$argument_0","<anonymous>"],"mappings":"AAA;OCqB;oDCe;KDI;YEI;sDDI;OCI;WCG;KDG;GFC;CDE"}},"type":"js/module"}]}