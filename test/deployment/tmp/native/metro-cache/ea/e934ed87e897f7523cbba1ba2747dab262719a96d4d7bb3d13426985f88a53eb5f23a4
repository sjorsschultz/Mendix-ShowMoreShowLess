{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":327,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":327,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":327,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM="}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":70}}],"key":"WkNMKgqK4aOdBxtaLg+KYSUiZ0s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n  var ListMetricsAggregator = exports.default = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck2.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass2.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var offset;\n          var highestMeasuredCellIndex = this.getHighestMeasuredCellIndex();\n          if (highestMeasuredCellIndex < index) {\n            var highestMeasuredCellFrame = this.getCellMetrics(highestMeasuredCellIndex, props);\n            if (highestMeasuredCellFrame) {\n              offset = highestMeasuredCellFrame.offset + highestMeasuredCellFrame.length + this._averageCellLength * (index - highestMeasuredCellIndex - 1);\n            }\n          }\n          if (offset == null) {\n            offset = this._averageCellLength * index;\n          }\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset: offset,\n            index: index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var _props$keyExtractor;\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = (_props$keyExtractor = props.keyExtractor) != null ? _props$keyExtractor : _$$_REQUIRE(_dependencyMap[4], \"./VirtualizeUtils\").keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index: index,\n            length: length,\n            offset: offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        var _this$_contentLength;\n        return (_this$_contentLength = this._contentLength) != null ? _this$_contentLength : 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength != null ? referenceContentLength : this._contentLength;\n          (0, _invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, _invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":216,"map":[[9,2,15,0],[9,6,15,0,"_invariant"],[9,16,15,0],[9,19,15,0,"_interopRequireDefault"],[9,41,15,0],[9,42,15,0,"_$$_REQUIRE"],[9,53,15,0],[9,54,15,0,"_dependencyMap"],[9,68,15,0],[10,2,15,34],[10,6,59,21,"ListMetricsAggregator"],[10,27,59,42],[10,30,59,42,"exports"],[10,37,59,42],[10,38,59,42,"default"],[10,45,59,42],[11,4,59,42],[11,13,59,42,"ListMetricsAggregator"],[11,35,59,42],[12,6,59,42],[12,10,59,42,"_classCallCheck2"],[12,26,59,42],[12,27,59,42,"default"],[12,34,59,42],[12,42,59,42,"ListMetricsAggregator"],[12,63,59,42],[13,6,59,42],[13,11,60,2,"_averageCellLength"],[13,29,60,20],[13,32,60,23],[13,33,60,24],[14,6,60,24],[14,11,61,2,"_cellMetrics"],[14,23,61,14],[14,26,61,43],[14,30,61,47,"Map"],[14,33,61,50],[14,34,61,51],[14,35,61,52],[15,6,61,52],[15,11,63,2,"_highestMeasuredCellIndex"],[15,36,63,27],[15,39,63,30],[15,40,63,31],[16,6,63,31],[16,11,64,2,"_measuredCellsLength"],[16,31,64,22],[16,34,64,25],[16,35,64,26],[17,6,64,26],[17,11,65,2,"_measuredCellsCount"],[17,30,65,21],[17,33,65,24],[17,34,65,25],[18,6,65,25],[18,11,66,2,"_orientation"],[18,23,66,14],[18,26,66,34],[19,8,67,4,"horizontal"],[19,18,67,14],[19,20,67,16],[19,25,67,21],[20,8,68,4,"rtl"],[20,11,68,7],[20,13,68,9],[21,6,69,2],[21,7,69,3],[22,4,69,3],[23,4,69,3],[23,15,69,3,"_createClass2"],[23,28,69,3],[23,29,69,3,"default"],[23,36,69,3],[23,38,69,3,"ListMetricsAggregator"],[23,59,69,3],[24,6,69,3,"key"],[24,9,69,3],[25,6,69,3,"value"],[25,11,69,3],[25,13,76,2],[25,22,76,2,"notifyCellLayout"],[25,38,76,18,"notifyCellLayout"],[25,39,76,18,"_ref"],[25,43,76,18],[25,45,86,14],[26,8,86,14],[26,12,77,4,"cellIndex"],[26,21,77,13],[26,24,77,13,"_ref"],[26,28,77,13],[26,29,77,4,"cellIndex"],[26,38,77,13],[27,10,78,4,"cellKey"],[27,17,78,11],[27,20,78,11,"_ref"],[27,24,78,11],[27,25,78,4,"cellKey"],[27,32,78,11],[28,10,79,4,"orientation"],[28,21,79,15],[28,24,79,15,"_ref"],[28,28,79,15],[28,29,79,4,"orientation"],[28,40,79,15],[29,10,80,4,"layout"],[29,16,80,10],[29,19,80,10,"_ref"],[29,23,80,10],[29,24,80,4,"layout"],[29,30,80,10],[30,8,87,4],[30,12,87,8],[30,13,87,9,"_invalidateIfOrientationChanged"],[30,44,87,40],[30,45,87,41,"orientation"],[30,56,87,52],[30,57,87,53],[31,8,89,4],[31,12,89,10,"next"],[31,16,89,27],[31,19,89,30],[32,10,90,6,"index"],[32,15,90,11],[32,17,90,13,"cellIndex"],[32,26,90,22],[33,10,91,6,"length"],[33,16,91,12],[33,18,91,14],[33,22,91,18],[33,23,91,19,"_selectLength"],[33,36,91,32],[33,37,91,33,"layout"],[33,43,91,39],[33,44,91,40],[34,10,92,6,"isMounted"],[34,19,92,15],[34,21,92,17],[34,25,92,21],[35,10,93,6,"offset"],[35,16,93,12],[35,18,93,14],[35,22,93,18],[35,23,93,19,"flowRelativeOffset"],[35,41,93,37],[35,42,93,38,"layout"],[35,48,93,44],[36,8,94,4],[36,9,94,5],[37,8,95,4],[37,12,95,10,"curr"],[37,16,95,14],[37,19,95,17],[37,23,95,21],[37,24,95,22,"_cellMetrics"],[37,36,95,34],[37,37,95,35,"get"],[37,40,95,38],[37,41,95,39,"cellKey"],[37,48,95,46],[37,49,95,47],[38,8,97,4],[38,12,97,8],[38,13,97,9,"curr"],[38,17,97,13],[38,21,97,17,"next"],[38,25,97,21],[38,26,97,22,"offset"],[38,32,97,28],[38,37,97,33,"curr"],[38,41,97,37],[38,42,97,38,"offset"],[38,48,97,44],[38,52,97,48,"next"],[38,56,97,52],[38,57,97,53,"length"],[38,63,97,59],[38,68,97,64,"curr"],[38,72,97,68],[38,73,97,69,"length"],[38,79,97,75],[38,81,97,77],[39,10,98,6],[39,14,98,10,"curr"],[39,18,98,14],[39,20,98,16],[40,12,99,8],[40,16,99,14,"dLength"],[40,23,99,21],[40,26,99,24,"next"],[40,30,99,28],[40,31,99,29,"length"],[40,37,99,35],[40,40,99,38,"curr"],[40,44,99,42],[40,45,99,43,"length"],[40,51,99,49],[41,12,100,8],[41,16,100,12],[41,17,100,13,"_measuredCellsLength"],[41,37,100,33],[41,41,100,37,"dLength"],[41,48,100,44],[42,10,101,6],[42,11,101,7],[42,17,101,13],[43,12,102,8],[43,16,102,12],[43,17,102,13,"_measuredCellsLength"],[43,37,102,33],[43,41,102,37,"next"],[43,45,102,41],[43,46,102,42,"length"],[43,52,102,48],[44,12,103,8],[44,16,103,12],[44,17,103,13,"_measuredCellsCount"],[44,36,103,32],[44,40,103,36],[44,41,103,37],[45,10,104,6],[46,10,106,6],[46,14,106,10],[46,15,106,11,"_averageCellLength"],[46,33,106,29],[46,36,107,8],[46,40,107,12],[46,41,107,13,"_measuredCellsLength"],[46,61,107,33],[46,64,107,36],[46,68,107,40],[46,69,107,41,"_measuredCellsCount"],[46,88,107,60],[47,10,108,6],[47,14,108,10],[47,15,108,11,"_cellMetrics"],[47,27,108,23],[47,28,108,24,"set"],[47,31,108,27],[47,32,108,28,"cellKey"],[47,39,108,35],[47,41,108,37,"next"],[47,45,108,41],[47,46,108,42],[48,10,109,6],[48,14,109,10],[48,15,109,11,"_highestMeasuredCellIndex"],[48,40,109,36],[48,43,109,39,"Math"],[48,47,109,43],[48,48,109,44,"max"],[48,51,109,47],[48,52,110,8],[48,56,110,12],[48,57,110,13,"_highestMeasuredCellIndex"],[48,82,110,38],[48,84,111,8,"cellIndex"],[48,93,112,6],[48,94,112,7],[49,10,113,6],[49,17,113,13],[49,21,113,17],[50,8,114,4],[50,9,114,5],[50,15,114,11],[51,10,115,6,"curr"],[51,14,115,10],[51,15,115,11,"isMounted"],[51,24,115,20],[51,27,115,23],[51,31,115,27],[52,10,116,6],[52,17,116,13],[52,22,116,18],[53,8,117,4],[54,6,118,2],[55,4,118,3],[56,6,118,3,"key"],[56,9,118,3],[57,6,118,3,"value"],[57,11,118,3],[57,13,123,2],[57,22,123,2,"notifyCellUnmounted"],[57,41,123,21,"notifyCellUnmounted"],[57,42,123,22,"cellKey"],[57,49,123,37],[57,51,123,45],[58,8,124,4],[58,12,124,10,"curr"],[58,16,124,14],[58,19,124,17],[58,23,124,21],[58,24,124,22,"_cellMetrics"],[58,36,124,34],[58,37,124,35,"get"],[58,40,124,38],[58,41,124,39,"cellKey"],[58,48,124,46],[58,49,124,47],[59,8,125,4],[59,12,125,8,"curr"],[59,16,125,12],[59,18,125,14],[60,10,126,6,"curr"],[60,14,126,10],[60,15,126,11,"isMounted"],[60,24,126,20],[60,27,126,23],[60,32,126,28],[61,8,127,4],[62,6,128,2],[63,4,128,3],[64,6,128,3,"key"],[64,9,128,3],[65,6,128,3,"value"],[65,11,128,3],[65,13,133,2],[65,22,133,2,"notifyListContentLayout"],[65,45,133,25,"notifyListContentLayout"],[65,46,133,25,"_ref2"],[65,51,133,25],[65,53,139,11],[66,8,139,11],[66,12,134,4,"orientation"],[66,23,134,15],[66,26,134,15,"_ref2"],[66,31,134,15],[66,32,134,4,"orientation"],[66,43,134,15],[67,10,135,4,"layout"],[67,16,135,10],[67,19,135,10,"_ref2"],[67,24,135,10],[67,25,135,4,"layout"],[67,31,135,10],[68,8,140,4],[68,12,140,8],[68,13,140,9,"_invalidateIfOrientationChanged"],[68,44,140,40],[68,45,140,41,"orientation"],[68,56,140,52],[68,57,140,53],[69,8,141,4],[69,12,141,8],[69,13,141,9,"_contentLength"],[69,27,141,23],[69,30,141,26],[69,34,141,30],[69,35,141,31,"_selectLength"],[69,48,141,44],[69,49,141,45,"layout"],[69,55,141,51],[69,56,141,52],[70,6,142,2],[71,4,142,3],[72,6,142,3,"key"],[72,9,142,3],[73,6,142,3,"value"],[73,11,142,3],[73,13,147,2],[73,22,147,2,"getAverageCellLength"],[73,42,147,22,"getAverageCellLength"],[73,43,147,22],[73,45,147,33],[74,8,148,4],[74,15,148,11],[74,19,148,15],[74,20,148,16,"_averageCellLength"],[74,38,148,34],[75,6,149,2],[76,4,149,3],[77,6,149,3,"key"],[77,9,149,3],[78,6,149,3,"value"],[78,11,149,3],[78,13,155,2],[78,22,155,2,"getHighestMeasuredCellIndex"],[78,49,155,29,"getHighestMeasuredCellIndex"],[78,50,155,29],[78,52,155,40],[79,8,156,4],[79,15,156,11],[79,19,156,15],[79,20,156,16,"_highestMeasuredCellIndex"],[79,45,156,41],[80,6,157,2],[81,4,157,3],[82,6,157,3,"key"],[82,9,157,3],[83,6,157,3,"value"],[83,11,157,3],[83,13,164,2],[83,22,164,2,"getCellMetricsApprox"],[83,42,164,22,"getCellMetricsApprox"],[83,43,164,23,"index"],[83,48,164,36],[83,50,164,38,"props"],[83,55,164,60],[83,57,164,75],[84,8,165,4],[84,12,165,10,"frame"],[84,17,165,15],[84,20,165,18],[84,24,165,22],[84,25,165,23,"getCellMetrics"],[84,39,165,37],[84,40,165,38,"index"],[84,45,165,43],[84,47,165,45,"props"],[84,52,165,50],[84,53,165,51],[85,8,166,4],[85,12,166,8,"frame"],[85,17,166,13],[85,21,166,17,"frame"],[85,26,166,22],[85,27,166,23,"index"],[85,32,166,28],[85,37,166,33,"index"],[85,42,166,38],[85,44,166,40],[86,10,168,6],[86,17,168,13,"frame"],[86,22,168,18],[87,8,169,4],[87,9,169,5],[87,15,169,11],[88,10,170,6],[88,14,170,10,"offset"],[88,20,170,16],[89,10,172,6],[89,14,172,12,"highestMeasuredCellIndex"],[89,38,172,36],[89,41,172,39],[89,45,172,43],[89,46,172,44,"getHighestMeasuredCellIndex"],[89,73,172,71],[89,74,172,72],[89,75,172,73],[90,10,173,6],[90,14,173,10,"highestMeasuredCellIndex"],[90,38,173,34],[90,41,173,37,"index"],[90,46,173,42],[90,48,173,44],[91,12,178,8],[91,16,178,14,"highestMeasuredCellFrame"],[91,40,178,38],[91,43,178,41],[91,47,178,45],[91,48,178,46,"getCellMetrics"],[91,62,178,60],[91,63,179,10,"highestMeasuredCellIndex"],[91,87,179,34],[91,89,180,10,"props"],[91,94,181,8],[91,95,181,9],[92,12,182,8],[92,16,182,12,"highestMeasuredCellFrame"],[92,40,182,36],[92,42,182,38],[93,14,183,10,"offset"],[93,20,183,16],[93,23,184,12,"highestMeasuredCellFrame"],[93,47,184,36],[93,48,184,37,"offset"],[93,54,184,43],[93,57,185,12,"highestMeasuredCellFrame"],[93,81,185,36],[93,82,185,37,"length"],[93,88,185,43],[93,91,186,12],[93,95,186,16],[93,96,186,17,"_averageCellLength"],[93,114,186,35],[93,118,186,39,"index"],[93,123,186,44],[93,126,186,47,"highestMeasuredCellIndex"],[93,150,186,71],[93,153,186,74],[93,154,186,75],[93,155,186,76],[94,12,187,8],[95,10,188,6],[96,10,190,6],[96,14,190,10,"offset"],[96,20,190,16],[96,24,190,20],[96,28,190,24],[96,30,190,26],[97,12,191,8,"offset"],[97,18,191,14],[97,21,191,17],[97,25,191,21],[97,26,191,22,"_averageCellLength"],[97,44,191,40],[97,47,191,43,"index"],[97,52,191,48],[98,10,192,6],[99,10,194,6],[99,14,194,13,"data"],[99,18,194,17],[99,21,194,35,"props"],[99,26,194,40],[99,27,194,13,"data"],[99,31,194,17],[100,12,194,19,"getItemCount"],[100,24,194,31],[100,27,194,35,"props"],[100,32,194,40],[100,33,194,19,"getItemCount"],[100,45,194,31],[101,10,195,6],[101,14,195,6,"invariant"],[101,32,195,15],[101,34,196,8,"index"],[101,39,196,13],[101,43,196,17],[101,44,196,18],[101,48,196,22,"index"],[101,53,196,27],[101,56,196,30,"getItemCount"],[101,68,196,42],[101,69,196,43,"data"],[101,73,196,47],[101,74,196,48],[101,76,197,8],[101,120,197,52],[101,123,197,55,"index"],[101,128,198,6],[101,129,198,7],[102,10,199,6],[102,17,199,13],[103,12,200,8,"length"],[103,18,200,14],[103,20,200,16],[103,24,200,20],[103,25,200,21,"_averageCellLength"],[103,43,200,39],[104,12,201,8,"offset"],[104,18,201,14],[104,20,201,8,"offset"],[104,26,201,14],[105,12,202,8,"index"],[105,17,202,13],[105,19,202,8,"index"],[105,24,202,13],[106,12,203,8,"isMounted"],[106,21,203,17],[106,23,203,19],[107,10,204,6],[107,11,204,7],[108,8,205,4],[109,6,206,2],[110,4,206,3],[111,6,206,3,"key"],[111,9,206,3],[112,6,206,3,"value"],[112,11,206,3],[112,13,211,2],[112,22,211,2,"getCellMetrics"],[112,36,211,16,"getCellMetrics"],[112,37,211,17,"index"],[112,42,211,30],[112,44,211,32,"props"],[112,49,211,54],[112,51,211,70],[113,8,211,70],[113,12,211,70,"_props$keyExtractor"],[113,31,211,70],[114,8,212,4],[114,12,212,11,"data"],[114,16,212,15],[114,19,212,57,"props"],[114,24,212,62],[114,25,212,11,"data"],[114,29,212,15],[115,10,212,17,"getItem"],[115,17,212,24],[115,20,212,57,"props"],[115,25,212,62],[115,26,212,17,"getItem"],[115,33,212,24],[116,10,212,26,"getItemCount"],[116,22,212,38],[116,25,212,57,"props"],[116,30,212,62],[116,31,212,26,"getItemCount"],[116,43,212,38],[117,10,212,40,"getItemLayout"],[117,23,212,53],[117,26,212,57,"props"],[117,31,212,62],[117,32,212,40,"getItemLayout"],[117,45,212,53],[118,8,213,4],[118,12,213,4,"invariant"],[118,30,213,13],[118,32,214,6,"index"],[118,37,214,11],[118,41,214,15],[118,42,214,16],[118,46,214,20,"index"],[118,51,214,25],[118,54,214,28,"getItemCount"],[118,66,214,40],[118,67,214,41,"data"],[118,71,214,45],[118,72,214,46],[118,74,215,6],[118,125,215,57],[118,128,215,60,"index"],[118,133,216,4],[118,134,216,5],[119,8,217,4],[119,12,217,10,"keyExtractor"],[119,24,217,22],[119,28,217,22,"_props$keyExtractor"],[119,47,217,22],[119,50,217,25,"props"],[119,55,217,30],[119,56,217,31,"keyExtractor"],[119,68,217,43],[119,80,217,43,"_props$keyExtractor"],[119,99,217,43],[119,102,217,47,"defaultKeyExtractor"],[119,132,217,47],[119,133,217,47,"defaultKeyExtractor"],[119,166,217,66],[120,8,218,4],[120,12,218,10,"frame"],[120,17,218,15],[120,20,218,18],[120,24,218,22],[120,25,218,23,"_cellMetrics"],[120,37,218,35],[120,38,218,36,"get"],[120,41,218,39],[120,42,219,6,"keyExtractor"],[120,54,219,18],[120,55,219,19,"getItem"],[120,62,219,26],[120,63,219,27,"data"],[120,67,219,31],[120,69,219,33,"index"],[120,74,219,38],[120,75,219,39],[120,77,219,41,"index"],[120,82,219,46],[120,83,220,4],[120,84,220,5],[121,8,221,4],[121,12,221,8,"frame"],[121,17,221,13],[121,21,221,17,"frame"],[121,26,221,22],[121,27,221,23,"index"],[121,32,221,28],[121,37,221,33,"index"],[121,42,221,38],[121,44,221,40],[122,10,222,6],[122,17,222,13,"frame"],[122,22,222,18],[123,8,223,4],[124,8,225,4],[124,12,225,8,"getItemLayout"],[124,25,225,21],[124,27,225,23],[125,10,226,6],[125,14,226,6,"_getItemLayout"],[125,28,226,6],[125,31,226,31,"getItemLayout"],[125,44,226,44],[125,45,226,45,"data"],[125,49,226,49],[125,51,226,51,"index"],[125,56,226,56],[125,57,226,57],[126,12,226,13,"length"],[126,18,226,19],[126,21,226,19,"_getItemLayout"],[126,35,226,19],[126,36,226,13,"length"],[126,42,226,19],[127,12,226,21,"offset"],[127,18,226,27],[127,21,226,27,"_getItemLayout"],[127,35,226,27],[127,36,226,21,"offset"],[127,42,226,27],[128,10,229,6],[128,17,229,13],[129,12,229,14,"index"],[129,17,229,19],[129,19,229,14,"index"],[129,24,229,19],[130,12,229,21,"length"],[130,18,229,27],[130,20,229,21,"length"],[130,26,229,27],[131,12,229,29,"offset"],[131,18,229,35],[131,20,229,29,"offset"],[131,26,229,35],[132,12,229,37,"isMounted"],[132,21,229,46],[132,23,229,48],[133,10,229,52],[133,11,229,53],[134,8,230,4],[135,8,232,4],[135,15,232,11],[135,19,232,15],[136,6,233,2],[137,4,233,3],[138,6,233,3,"key"],[138,9,233,3],[139,6,233,3,"value"],[139,11,233,3],[139,13,239,2],[139,22,239,2,"getCellOffsetApprox"],[139,41,239,21,"getCellOffsetApprox"],[139,42,239,22,"index"],[139,47,239,35],[139,49,239,37,"props"],[139,54,239,59],[139,56,239,69],[140,8,240,4],[140,12,240,8,"Number"],[140,18,240,14],[140,19,240,15,"isInteger"],[140,28,240,24],[140,29,240,25,"index"],[140,34,240,30],[140,35,240,31],[140,37,240,33],[141,10,241,6],[141,17,241,13],[141,21,241,17],[141,22,241,18,"getCellMetricsApprox"],[141,42,241,38],[141,43,241,39,"index"],[141,48,241,44],[141,50,241,46,"props"],[141,55,241,51],[141,56,241,52],[141,57,241,53,"offset"],[141,63,241,59],[142,8,242,4],[142,9,242,5],[142,15,242,11],[143,10,243,6],[143,14,243,12,"frameMetrics"],[143,26,243,24],[143,29,243,27],[143,33,243,31],[143,34,243,32,"getCellMetricsApprox"],[143,54,243,52],[143,55,243,53,"Math"],[143,59,243,57],[143,60,243,58,"floor"],[143,65,243,63],[143,66,243,64,"index"],[143,71,243,69],[143,72,243,70],[143,74,243,72,"props"],[143,79,243,77],[143,80,243,78],[144,10,244,6],[144,14,244,12,"remainder"],[144,23,244,21],[144,26,244,24,"index"],[144,31,244,29],[144,34,244,32,"Math"],[144,38,244,36],[144,39,244,37,"floor"],[144,44,244,42],[144,45,244,43,"index"],[144,50,244,48],[144,51,244,49],[145,10,245,6],[145,17,245,13,"frameMetrics"],[145,29,245,25],[145,30,245,26,"offset"],[145,36,245,32],[145,39,245,35,"remainder"],[145,48,245,44],[145,51,245,47,"frameMetrics"],[145,63,245,59],[145,64,245,60,"length"],[145,70,245,66],[146,8,246,4],[147,6,247,2],[148,4,247,3],[149,6,247,3,"key"],[149,9,247,3],[150,6,247,3,"value"],[150,11,247,3],[150,13,252,2],[150,22,252,2,"getContentLength"],[150,38,252,18,"getContentLength"],[150,39,252,18],[150,41,252,29],[151,8,252,29],[151,12,252,29,"_this$_contentLength"],[151,32,252,29],[152,8,253,4],[152,16,253,4,"_this$_contentLength"],[152,36,253,4],[152,39,253,11],[152,43,253,15],[152,44,253,16,"_contentLength"],[152,58,253,30],[152,70,253,30,"_this$_contentLength"],[152,90,253,30],[152,93,253,34],[152,94,253,35],[153,6,254,2],[154,4,254,3],[155,6,254,3,"key"],[155,9,254,3],[156,6,254,3,"value"],[156,11,254,3],[156,13,259,2],[156,22,259,2,"hasContentLength"],[156,38,259,18,"hasContentLength"],[156,39,259,18],[156,41,259,30],[157,8,260,4],[157,15,260,11],[157,19,260,15],[157,20,260,16,"_contentLength"],[157,34,260,30],[157,38,260,34],[157,42,260,38],[158,6,261,2],[159,4,261,3],[160,6,261,3,"key"],[160,9,261,3],[161,6,261,3,"value"],[161,11,261,3],[161,13,267,2],[161,22,267,2,"flowRelativeOffset"],[161,40,267,20,"flowRelativeOffset"],[161,41,267,21,"layout"],[161,47,267,35],[161,49,267,37,"referenceContentLength"],[161,71,267,69],[161,73,267,79],[162,8,268,4],[162,12,268,4,"_this$_orientation"],[162,30,268,4],[162,33,268,30],[162,37,268,34],[162,38,268,35,"_orientation"],[162,50,268,47],[163,10,268,11,"horizontal"],[163,20,268,21],[163,23,268,21,"_this$_orientation"],[163,41,268,21],[163,42,268,11,"horizontal"],[163,52,268,21],[164,10,268,23,"rtl"],[164,13,268,26],[164,16,268,26,"_this$_orientation"],[164,34,268,26],[164,35,268,23,"rtl"],[164,38,268,26],[165,8,270,4],[165,12,270,8,"horizontal"],[165,22,270,18],[165,26,270,22,"rtl"],[165,29,270,25],[165,31,270,27],[166,10,271,6],[166,14,271,12,"contentLength"],[166,27,271,25],[166,30,271,28,"referenceContentLength"],[166,52,271,50],[166,63,271,28,"referenceContentLength"],[166,85,271,50],[166,88,271,54],[166,92,271,58],[166,93,271,59,"_contentLength"],[166,107,271,73],[167,10,272,6],[167,14,272,6,"invariant"],[167,32,272,15],[167,34,273,8,"contentLength"],[167,47,273,21],[167,51,273,25],[167,55,273,29],[167,57,274,8],[167,145,275,6],[167,146,275,7],[168,10,276,6],[168,17,277,8,"contentLength"],[168,30,277,21],[168,34,278,9],[168,38,278,13],[168,39,278,14,"_selectOffset"],[168,52,278,27],[168,53,278,28,"layout"],[168,59,278,34],[168,60,278,35],[168,63,278,38],[168,67,278,42],[168,68,278,43,"_selectLength"],[168,81,278,56],[168,82,278,57,"layout"],[168,88,278,63],[168,89,278,64],[168,90,278,65],[169,8,280,4],[169,9,280,5],[169,15,280,11],[170,10,281,6],[170,17,281,13],[170,21,281,17],[170,22,281,18,"_selectOffset"],[170,35,281,31],[170,36,281,32,"layout"],[170,42,281,38],[170,43,281,39],[171,8,282,4],[172,6,283,2],[173,4,283,3],[174,6,283,3,"key"],[174,9,283,3],[175,6,283,3,"value"],[175,11,283,3],[175,13,288,2],[175,22,288,2,"cartesianOffset"],[175,37,288,17,"cartesianOffset"],[175,38,288,18,"flowRelativeOffset"],[175,56,288,44],[175,58,288,54],[176,8,289,4],[176,12,289,4,"_this$_orientation2"],[176,31,289,4],[176,34,289,30],[176,38,289,34],[176,39,289,35,"_orientation"],[176,51,289,47],[177,10,289,11,"horizontal"],[177,20,289,21],[177,23,289,21,"_this$_orientation2"],[177,42,289,21],[177,43,289,11,"horizontal"],[177,53,289,21],[178,10,289,23,"rtl"],[178,13,289,26],[178,16,289,26,"_this$_orientation2"],[178,35,289,26],[178,36,289,23,"rtl"],[178,39,289,26],[179,8,291,4],[179,12,291,8,"horizontal"],[179,22,291,18],[179,26,291,22,"rtl"],[179,29,291,25],[179,31,291,27],[180,10,292,6],[180,14,292,6,"invariant"],[180,32,292,15],[180,34,293,8],[180,38,293,12],[180,39,293,13,"_contentLength"],[180,53,293,27],[180,57,293,31],[180,61,293,35],[180,63,294,8],[180,151,295,6],[180,152,295,7],[181,10,296,6],[181,17,296,13],[181,21,296,17],[181,22,296,18,"_contentLength"],[181,36,296,32],[181,39,296,35,"flowRelativeOffset"],[181,57,296,53],[182,8,297,4],[182,9,297,5],[182,15,297,11],[183,10,298,6],[183,17,298,13,"flowRelativeOffset"],[183,35,298,31],[184,8,299,4],[185,6,300,2],[186,4,300,3],[187,6,300,3,"key"],[187,9,300,3],[188,6,300,3,"value"],[188,11,300,3],[188,13,302,2],[188,22,302,2,"_invalidateIfOrientationChanged"],[188,53,302,33,"_invalidateIfOrientationChanged"],[188,54,302,34,"orientation"],[188,65,302,62],[188,67,302,70],[189,8,303,4],[189,12,303,8,"orientation"],[189,23,303,19],[189,24,303,20,"rtl"],[189,27,303,23],[189,32,303,28],[189,36,303,32],[189,37,303,33,"_orientation"],[189,49,303,45],[189,50,303,46,"rtl"],[189,53,303,49],[189,55,303,51],[190,10,304,6],[190,14,304,10],[190,15,304,11,"_cellMetrics"],[190,27,304,23],[190,28,304,24,"clear"],[190,33,304,29],[190,34,304,30],[190,35,304,31],[191,8,305,4],[192,8,307,4],[192,12,307,8,"orientation"],[192,23,307,19],[192,24,307,20,"horizontal"],[192,34,307,30],[192,39,307,35],[192,43,307,39],[192,44,307,40,"_orientation"],[192,56,307,52],[192,57,307,53,"horizontal"],[192,67,307,63],[192,69,307,65],[193,10,308,6],[193,14,308,10],[193,15,308,11,"_averageCellLength"],[193,33,308,29],[193,36,308,32],[193,37,308,33],[194,10,309,6],[194,14,309,10],[194,15,309,11,"_highestMeasuredCellIndex"],[194,40,309,36],[194,43,309,39],[194,44,309,40],[195,10,310,6],[195,14,310,10],[195,15,310,11,"_measuredCellsLength"],[195,35,310,31],[195,38,310,34],[195,39,310,35],[196,10,311,6],[196,14,311,10],[196,15,311,11,"_measuredCellsCount"],[196,34,311,30],[196,37,311,33],[196,38,311,34],[197,8,312,4],[198,8,314,4],[198,12,314,8],[198,13,314,9,"_orientation"],[198,25,314,21],[198,28,314,24,"orientation"],[198,39,314,35],[199,6,315,2],[200,4,315,3],[201,6,315,3,"key"],[201,9,315,3],[202,6,315,3,"value"],[202,11,315,3],[202,13,317,2],[202,22,317,2,"_selectLength"],[202,35,317,15,"_selectLength"],[202,36,317,15,"_ref3"],[202,41,317,15],[202,43,320,62],[203,8,320,62],[203,12,318,4,"width"],[203,17,318,9],[203,20,318,9,"_ref3"],[203,25,318,9],[203,26,318,4,"width"],[203,31,318,9],[204,10,319,4,"height"],[204,16,319,10],[204,19,319,10,"_ref3"],[204,24,319,10],[204,25,319,4,"height"],[204,31,319,10],[205,8,321,4],[205,15,321,11],[205,19,321,15],[205,20,321,16,"_orientation"],[205,32,321,28],[205,33,321,29,"horizontal"],[205,43,321,39],[205,46,321,42,"width"],[205,51,321,47],[205,54,321,50,"height"],[205,60,321,56],[206,6,322,2],[207,4,322,3],[208,6,322,3,"key"],[208,9,322,3],[209,6,322,3,"value"],[209,11,322,3],[209,13,324,2],[209,22,324,2,"_selectOffset"],[209,35,324,15,"_selectOffset"],[209,36,324,15,"_ref4"],[209,41,324,15],[209,43,324,72],[210,8,324,72],[210,12,324,17,"x"],[210,13,324,18],[210,16,324,18,"_ref4"],[210,21,324,18],[210,22,324,17,"x"],[210,23,324,18],[211,10,324,20,"y"],[211,11,324,21],[211,14,324,21,"_ref4"],[211,19,324,21],[211,20,324,20,"y"],[211,21,324,21],[212,8,325,4],[212,15,325,11],[212,19,325,15],[212,20,325,16,"_orientation"],[212,32,325,28],[212,33,325,29,"horizontal"],[212,43,325,39],[212,46,325,42,"x"],[212,47,325,43],[212,50,325,46,"y"],[212,51,325,47],[213,6,326,2],[214,4,326,3],[215,2,326,3],[216,0,326,3],[216,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GN0C;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXgB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"}},"type":"js/module"}]}