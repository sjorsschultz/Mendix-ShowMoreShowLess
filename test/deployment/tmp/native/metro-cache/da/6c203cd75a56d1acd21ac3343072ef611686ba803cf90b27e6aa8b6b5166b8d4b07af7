{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":158,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":158,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":158,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseBase","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":158,"column":1}}],"key":"jktBven9cFmiXr10q2uuMiBaNBg="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseKey","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":158,"column":1}}],"key":"YYsVumDWjUPySlBONhl8so2wff4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _classPrivateFieldLooseBase2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n  var _classPrivateFieldLooseKey2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n  var _registry = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"registry\");\n  var EventEmitter = exports.default = /*#__PURE__*/function () {\n    function EventEmitter() {\n      (0, _classCallCheck2.default)(this, EventEmitter);\n      Object.defineProperty(this, _registry, {\n        writable: true,\n        value: {}\n      });\n    }\n    return (0, _createClass2.default)(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        if (typeof listener !== 'function') {\n          throw new TypeError('EventEmitter.addListener(...): 2nd argument must be a function.');\n        }\n        var registrations = allocate((0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry], eventType);\n        var registration = {\n          context: context,\n          listener: listener,\n          remove: function remove() {\n            registrations.delete(registration);\n          }\n        };\n        registrations.add(registration);\n        return registration;\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        if (registrations != null) {\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n          for (var registration of Array.from(registrations)) {\n            registration.listener.apply(registration.context, args);\n          }\n        }\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        if (eventType == null) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry] = {};\n        } else {\n          delete (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        }\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var registrations = (0, _classPrivateFieldLooseBase2.default)(this, _registry)[_registry][eventType];\n        return registrations == null ? 0 : registrations.size;\n      }\n    }]);\n  }();\n  function allocate(registry, eventType) {\n    var registrations = registry[eventType];\n    if (registrations == null) {\n      registrations = new Set();\n      registry[eventType] = registrations;\n    }\n    return registrations;\n  }\n});","lineCount":75,"map":[[12,6,62,21,"EventEmitter"],[12,18,62,33],[12,21,62,33,"exports"],[12,28,62,33],[12,29,62,33,"default"],[12,36,62,33],[13,4,62,33],[13,13,62,33,"EventEmitter"],[13,26,62,33],[14,6,62,33],[14,10,62,33,"_classCallCheck2"],[14,26,62,33],[14,27,62,33,"default"],[14,34,62,33],[14,42,62,33,"EventEmitter"],[14,54,62,33],[15,6,62,33,"Object"],[15,12,62,33],[15,13,62,33,"defineProperty"],[15,27,62,33],[15,34,62,33,"_registry"],[15,43,62,33],[16,8,62,33,"writable"],[16,16,62,33],[17,8,62,33,"value"],[17,13,62,33],[17,15,66,41],[17,16,66,42],[18,6,66,43],[19,4,66,43],[20,4,66,43],[20,15,66,43,"_createClass2"],[20,28,66,43],[20,29,66,43,"default"],[20,36,66,43],[20,38,66,43,"EventEmitter"],[20,50,66,43],[21,6,66,43,"key"],[21,9,66,43],[22,6,66,43,"value"],[22,11,66,43],[22,13,72,2],[22,22,72,2,"addListener"],[22,33,72,13,"addListener"],[22,34,73,4,"eventType"],[22,43,73,21],[22,45,74,4,"listener"],[22,53,74,57],[22,55,75,4,"context"],[22,62,75,18],[22,64,76,23],[23,8,77,4],[23,12,77,8],[23,19,77,15,"listener"],[23,27,77,23],[23,32,77,28],[23,42,77,38],[23,44,77,40],[24,10,78,6],[24,16,78,12],[24,20,78,16,"TypeError"],[24,29,78,25],[24,30,79,8],[24,95,80,6],[24,96,80,7],[25,8,81,4],[26,8,82,4],[26,12,82,10,"registrations"],[26,25,82,23],[26,28,82,26,"allocate"],[26,36,82,34],[26,41,82,34,"_classPrivateFieldLooseBase2"],[26,69,82,34],[26,70,82,34,"default"],[26,77,82,34],[26,79,86,6],[26,83,86,10],[26,85,86,10,"_registry"],[26,94,86,10],[26,96,86,10,"_registry"],[26,105,86,10],[26,108,86,22,"eventType"],[26,117,86,31],[26,118,86,32],[27,8,87,4],[27,12,87,10,"registration"],[27,24,87,61],[27,27,87,64],[28,10,88,6,"context"],[28,17,88,13],[28,19,88,6,"context"],[28,26,88,13],[29,10,89,6,"listener"],[29,18,89,14],[29,20,89,6,"listener"],[29,28,89,14],[30,10,90,6,"remove"],[30,16,90,12],[30,27,90,6,"remove"],[30,33,90,12,"remove"],[30,34,90,12],[30,36,90,21],[31,12,91,8,"registrations"],[31,25,91,21],[31,26,91,22,"delete"],[31,32,91,28],[31,33,91,29,"registration"],[31,45,91,41],[31,46,91,42],[32,10,92,6],[33,8,93,4],[33,9,93,5],[34,8,94,4,"registrations"],[34,21,94,17],[34,22,94,18,"add"],[34,25,94,21],[34,26,94,22,"registration"],[34,38,94,34],[34,39,94,35],[35,8,95,4],[35,15,95,11,"registration"],[35,27,95,23],[36,6,96,2],[37,4,96,3],[38,6,96,3,"key"],[38,9,96,3],[39,6,96,3,"value"],[39,11,96,3],[39,13,105,2],[39,22,105,2,"emit"],[39,26,105,6,"emit"],[39,27,106,4,"eventType"],[39,36,106,21],[39,38,108,10],[40,8,109,4],[40,12,109,10,"registrations"],[40,25,109,68],[40,28,110,6],[40,32,110,6,"_classPrivateFieldLooseBase2"],[40,60,110,6],[40,61,110,6,"default"],[40,68,110,6],[40,74,110,10],[40,76,110,10,"_registry"],[40,85,110,10],[40,87,110,10,"_registry"],[40,96,110,10],[40,98,110,21,"eventType"],[40,107,110,30],[40,108,110,31],[41,8,111,4],[41,12,111,8,"registrations"],[41,25,111,21],[41,29,111,25],[41,33,111,29],[41,35,111,31],[42,10,111,31],[42,19,111,31,"_len"],[42,23,111,31],[42,26,111,31,"arguments"],[42,35,111,31],[42,36,111,31,"length"],[42,42,111,31],[42,44,107,7,"args"],[42,48,107,11],[42,55,107,11,"Array"],[42,60,107,11],[42,61,107,11,"_len"],[42,65,107,11],[42,72,107,11,"_len"],[42,76,107,11],[42,87,107,11,"_key"],[42,91,107,11],[42,97,107,11,"_key"],[42,101,107,11],[42,104,107,11,"_len"],[42,108,107,11],[42,110,107,11,"_key"],[42,114,107,11],[43,12,107,7,"args"],[43,16,107,11],[43,17,107,11,"_key"],[43,21,107,11],[43,29,107,11,"arguments"],[43,38,107,11],[43,39,107,11,"_key"],[43,43,107,11],[44,10,107,11],[45,10,114,6],[45,15,114,11],[45,19,114,17,"registration"],[45,31,114,29],[45,35,114,33,"Array"],[45,40,114,38],[45,41,114,39,"from"],[45,45,114,43],[45,46,114,44,"registrations"],[45,59,114,57],[45,60,114,58],[45,62,114,60],[46,12,116,8,"registration"],[46,24,116,20],[46,25,116,21,"listener"],[46,33,116,29],[46,34,116,30,"apply"],[46,39,116,35],[46,40,116,36,"registration"],[46,52,116,48],[46,53,116,49,"context"],[46,60,116,56],[46,62,116,58,"args"],[46,66,116,62],[46,67,116,63],[47,10,117,6],[48,8,118,4],[49,6,119,2],[50,4,119,3],[51,6,119,3,"key"],[51,9,119,3],[52,6,119,3,"value"],[52,11,119,3],[52,13,124,2],[52,22,124,2,"removeAllListeners"],[52,40,124,20,"removeAllListeners"],[52,41,125,4,"eventType"],[52,50,125,23],[52,52,126,10],[53,8,127,4],[53,12,127,8,"eventType"],[53,21,127,17],[53,25,127,21],[53,29,127,25],[53,31,127,27],[54,10,129,6],[54,14,129,6,"_classPrivateFieldLooseBase2"],[54,42,129,6],[54,43,129,6,"default"],[54,50,129,6],[54,56,129,10],[54,58,129,10,"_registry"],[54,67,129,10],[54,69,129,10,"_registry"],[54,78,129,10],[54,82,129,23],[54,83,129,24],[54,84,129,25],[55,8,130,4],[55,9,130,5],[55,15,130,11],[56,10,131,6],[56,17,131,13],[56,21,131,13,"_classPrivateFieldLooseBase2"],[56,49,131,13],[56,50,131,13,"default"],[56,57,131,13],[56,63,131,17],[56,65,131,17,"_registry"],[56,74,131,17],[56,76,131,17,"_registry"],[56,85,131,17],[56,87,131,28,"eventType"],[56,96,131,37],[56,97,131,38],[57,8,132,4],[58,6,133,2],[59,4,133,3],[60,6,133,3,"key"],[60,9,133,3],[61,6,133,3,"value"],[61,11,133,3],[61,13,138,2],[61,22,138,2,"listenerCount"],[61,35,138,15,"listenerCount"],[61,36,138,48,"eventType"],[61,45,138,65],[61,47,138,75],[62,8,139,4],[62,12,139,10,"registrations"],[62,25,139,50],[62,28,139,53],[62,32,139,53,"_classPrivateFieldLooseBase2"],[62,60,139,53],[62,61,139,53,"default"],[62,68,139,53],[62,74,139,57],[62,76,139,57,"_registry"],[62,85,139,57],[62,87,139,57,"_registry"],[62,96,139,57],[62,98,139,68,"eventType"],[62,107,139,77],[62,108,139,78],[63,8,140,4],[63,15,140,11,"registrations"],[63,28,140,24],[63,32,140,28],[63,36,140,32],[63,39,140,35],[63,40,140,36],[63,43,140,39,"registrations"],[63,56,140,52],[63,57,140,53,"size"],[63,61,140,57],[64,6,141,2],[65,4,141,3],[66,2,141,3],[67,2,144,0],[67,11,144,9,"allocate"],[67,19,144,17,"allocate"],[67,20,149,2,"registry"],[67,28,149,37],[67,30,150,2,"eventType"],[67,39,150,19],[67,41,151,33],[68,4,152,2],[68,8,152,6,"registrations"],[68,21,152,51],[68,24,152,54,"registry"],[68,32,152,62],[68,33,152,63,"eventType"],[68,42,152,72],[68,43,152,73],[69,4,153,2],[69,8,153,6,"registrations"],[69,21,153,19],[69,25,153,23],[69,29,153,27],[69,31,153,29],[70,6,154,4,"registrations"],[70,19,154,17],[70,22,154,20],[70,26,154,24,"Set"],[70,29,154,27],[70,30,154,28],[70,31,154,29],[71,6,155,4,"registry"],[71,14,155,12],[71,15,155,13,"eventType"],[71,24,155,22],[71,25,155,23],[71,28,155,26,"registrations"],[71,41,155,39],[72,4,156,2],[73,4,157,2],[73,11,157,9,"registrations"],[73,24,157,22],[74,2,158,0],[75,0,158,1],[75,3]],"functionMap":{"names":["<global>","EventEmitter","addListener","registration.remove","emit","removeAllListeners","listenerCount","allocate"],"mappings":"AAA;eC6D;ECU;MCkB;ODE;GDI;EGS;GHc;EIK;GJS;EKK;GLG;CDC;AOE"}},"type":"js/module"}]}