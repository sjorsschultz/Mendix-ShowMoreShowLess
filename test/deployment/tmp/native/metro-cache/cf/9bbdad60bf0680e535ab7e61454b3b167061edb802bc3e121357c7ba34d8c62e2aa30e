{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":192,"column":0,"index":6210}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":8,"column":15,"index":146}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":147},"end":{"line":9,"column":40,"index":187}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../../../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":188},"end":{"line":10,"column":53,"index":241}}],"key":"k+xfarWxri7fB3IShKFMK0oi5UQ="}},{"name":"../../../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":456},"end":{"line":16,"column":83,"index":539}}],"key":"v6b9cfauRqYeWu9wWOEUTyMIHSA="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":192,"column":0,"index":6210}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":411},"end":{"line":14,"column":43,"index":454}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":820},"end":{"line":22,"column":46,"index":866}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"./useDetectorUpdater","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":912},"end":{"line":24,"column":58,"index":970}}],"key":"707zRwYZ3uzpHSm+Rwc2R1MvfJw="}},{"name":"./useViewRefHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":971},"end":{"line":25,"column":56,"index":1027}}],"key":"tm4O9dzaDCUn7KS1TB05c8nzNaA="}},{"name":"./needsToReattach","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":720},"end":{"line":20,"column":52,"index":772}}],"key":"AnC4N1Crd90FP+3Mxk358neOkRo="}},{"name":"./useAnimatedGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":610},"end":{"line":18,"column":58,"index":668}}],"key":"2qsvw/0Wn5ZQ0k+d9VbJV8PW2us="}},{"name":"./attachHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":669},"end":{"line":19,"column":50,"index":719}}],"key":"3mjR74KCCo5t43evU8Hvoyi9yu0="}},{"name":"./dropHandlers","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":773},"end":{"line":21,"column":46,"index":819}}],"key":"3pg09hFbTrtcJ+KzQ97dAmmPlSE="}},{"name":"./useMountReactions","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1028},"end":{"line":26,"column":56,"index":1084}}],"key":"PrdD1p6YXRuOP5neQrVF/37n7P4="}},{"name":"./Wrap","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":867},"end":{"line":23,"column":44,"index":911}},{"start":{"line":23,"column":0,"index":867},"end":{"line":23,"column":44,"index":911}}],"key":"3O9fTt6BDgaEKEy9t1chSR0HFNQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.GestureDetector = void 0;\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n  var _findNodeHandle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../../../findNodeHandle\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../../../GestureHandlerRootViewContext\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[5], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  /* eslint-disable react/no-unused-prop-types */\n\n  function propagateDetectorConfig(props, gesture) {\n    var keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n    for (var key of keysToPropagate) {\n      var value = props[key];\n      if (value === undefined) {\n        continue;\n      }\n      for (var g of gesture.toGestureArray()) {\n        var config = g.config;\n        config[key] = value;\n      }\n    }\n  }\n  /**\n   * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n   *\n   * ### Props\n   * - `gesture`\n   * - `userSelect` (**Web only**)\n   * - `enableContextMenu` (**Web only**)\n   * - `touchAction` (**Web only**)\n   *\n   * ### Remarks\n   * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n   * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n   */\n  var GestureDetector = exports.GestureDetector = function GestureDetector(props) {\n    var rootViewContext = (0, _react.useContext)(_GestureHandlerRootViewContext.default);\n    if (__DEV__ && !rootViewContext && !(0, _$$_REQUIRE(_dependencyMap[6], \"../../../utils\").isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n      throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n    }\n\n    // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n    var gestureConfig = props.gesture;\n    propagateDetectorConfig(props, gestureConfig);\n    var gesturesToAttach = (0, _react.useMemo)(function () {\n      return gestureConfig.toGestureArray();\n    }, [gestureConfig]);\n    var shouldUseReanimated = gesturesToAttach.some(function (g) {\n      return g.shouldUseReanimated;\n    });\n    var webEventHandlersRef = (0, _$$_REQUIRE(_dependencyMap[7], \"./utils\").useWebEventHandlers)();\n    // Store state in ref to prevent unnecessary renders\n    var state = (0, _react.useRef)({\n      firstRender: true,\n      viewRef: null,\n      previousViewTag: -1,\n      forceRebuildReanimatedEvent: false\n    }).current;\n    var preparedGesture = _react.default.useRef({\n      attachedGestures: [],\n      animatedEventHandler: null,\n      animatedHandlers: null,\n      shouldUseReanimated: shouldUseReanimated,\n      isMounted: false\n    }).current;\n    var updateAttachedGestures = (0, _$$_REQUIRE(_dependencyMap[8], \"./useDetectorUpdater\").useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n    var refHandler = (0, _$$_REQUIRE(_dependencyMap[9], \"./useViewRefHandler\").useViewRefHandler)(state, updateAttachedGestures);\n\n    // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n    // config update will be enough as all necessary items are stored in shared values anyway\n    var needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _$$_REQUIRE(_dependencyMap[10], \"./needsToReattach\").needsToReattach)(preparedGesture, gesturesToAttach);\n    state.forceRebuildReanimatedEvent = false;\n    (0, _$$_REQUIRE(_dependencyMap[11], \"./useAnimatedGesture\").useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n    (0, _react.useLayoutEffect)(function () {\n      var viewTag = (0, _findNodeHandle.default)(state.viewRef);\n      preparedGesture.isMounted = true;\n      (0, _$$_REQUIRE(_dependencyMap[12], \"./attachHandlers\").attachHandlers)({\n        preparedGesture: preparedGesture,\n        gestureConfig: gestureConfig,\n        gesturesToAttach: gesturesToAttach,\n        webEventHandlersRef: webEventHandlersRef,\n        viewTag: viewTag\n      });\n      return function () {\n        preparedGesture.isMounted = false;\n        (0, _$$_REQUIRE(_dependencyMap[13], \"./dropHandlers\").dropHandlers)(preparedGesture);\n      };\n    }, []);\n    (0, _react.useEffect)(function () {\n      if (state.firstRender) {\n        state.firstRender = false;\n      } else {\n        updateAttachedGestures();\n      }\n    }, [props]);\n    (0, _$$_REQUIRE(_dependencyMap[14], \"./useMountReactions\").useMountReactions)(updateAttachedGestures, preparedGesture);\n    if (shouldUseReanimated) {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[15], \"./Wrap\").AnimatedWrap, {\n        ref: refHandler,\n        onGestureHandlerEvent: preparedGesture.animatedEventHandler,\n        children: props.children\n      });\n    } else {\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[15], \"./Wrap\").Wrap, {\n        ref: refHandler,\n        children: props.children\n      });\n    }\n  };\n});","lineCount":118,"map":[[7,2,2,0],[7,6,2,0,"_react"],[7,12,2,0],[7,15,2,0,"_interopRequireWildcard"],[7,38,2,0],[7,39,2,0,"_$$_REQUIRE"],[7,50,2,0],[7,51,2,0,"_dependencyMap"],[7,65,2,0],[8,2,9,0],[8,6,9,0,"_reactNative"],[8,18,9,0],[8,21,9,0,"_$$_REQUIRE"],[8,32,9,0],[8,33,9,0,"_dependencyMap"],[8,47,9,0],[9,2,10,0],[9,6,10,0,"_findNodeHandle"],[9,21,10,0],[9,24,10,0,"_interopRequireDefault"],[9,46,10,0],[9,47,10,0,"_$$_REQUIRE"],[9,58,10,0],[9,59,10,0,"_dependencyMap"],[9,73,10,0],[10,2,16,0],[10,6,16,0,"_GestureHandlerRootViewContext"],[10,36,16,0],[10,39,16,0,"_interopRequireDefault"],[10,61,16,0],[10,62,16,0,"_$$_REQUIRE"],[10,73,16,0],[10,74,16,0,"_dependencyMap"],[10,88,16,0],[11,2,16,83],[11,6,16,83,"_jsxRuntime"],[11,17,16,83],[11,20,16,83,"_$$_REQUIRE"],[11,31,16,83],[11,32,16,83,"_dependencyMap"],[11,46,16,83],[12,2,16,83],[12,11,16,83,"_getRequireWildcardCache"],[12,36,16,83,"e"],[12,37,16,83],[12,66,16,83,"WeakMap"],[12,73,16,83],[12,92,16,83,"r"],[12,93,16,83],[12,100,16,83,"WeakMap"],[12,107,16,83],[12,111,16,83,"t"],[12,112,16,83],[12,119,16,83,"WeakMap"],[12,126,16,83],[12,138,16,83,"_getRequireWildcardCache"],[12,162,16,83],[12,174,16,83,"_getRequireWildcardCache"],[12,199,16,83,"e"],[12,200,16,83],[12,211,16,83,"e"],[12,212,16,83],[12,215,16,83,"t"],[12,216,16,83],[12,219,16,83,"r"],[12,220,16,83],[12,225,16,83,"e"],[12,226,16,83],[13,2,16,83],[13,11,16,83,"_interopRequireWildcard"],[13,35,16,83,"e"],[13,36,16,83],[13,38,16,83,"r"],[13,39,16,83],[13,48,16,83,"r"],[13,49,16,83],[13,53,16,83,"e"],[13,54,16,83],[13,58,16,83,"e"],[13,59,16,83],[13,60,16,83,"__esModule"],[13,70,16,83],[13,79,16,83,"e"],[13,80,16,83],[13,95,16,83,"e"],[13,96,16,83],[13,119,16,83,"e"],[13,120,16,83],[13,145,16,83,"e"],[13,146,16,83],[13,157,16,83,"default"],[13,164,16,83],[13,166,16,83,"e"],[13,167,16,83],[13,175,16,83,"t"],[13,176,16,83],[13,179,16,83,"_getRequireWildcardCache"],[13,203,16,83],[13,204,16,83,"r"],[13,205,16,83],[13,212,16,83,"t"],[13,213,16,83],[13,217,16,83,"t"],[13,218,16,83],[13,219,16,83,"has"],[13,222,16,83],[13,223,16,83,"e"],[13,224,16,83],[13,234,16,83,"t"],[13,235,16,83],[13,236,16,83,"get"],[13,239,16,83],[13,240,16,83,"e"],[13,241,16,83],[13,248,16,83,"n"],[13,249,16,83],[13,254,16,83,"__proto__"],[13,263,16,83],[13,273,16,83,"a"],[13,274,16,83],[13,277,16,83,"Object"],[13,283,16,83],[13,284,16,83,"defineProperty"],[13,298,16,83],[13,302,16,83,"Object"],[13,308,16,83],[13,309,16,83,"getOwnPropertyDescriptor"],[13,333,16,83],[13,344,16,83,"u"],[13,345,16,83],[13,349,16,83,"e"],[13,350,16,83],[13,370,16,83,"u"],[13,371,16,83],[13,378,16,83,"hasOwnProperty"],[13,392,16,83],[13,393,16,83,"call"],[13,397,16,83],[13,398,16,83,"e"],[13,399,16,83],[13,401,16,83,"u"],[13,402,16,83],[13,411,16,83,"i"],[13,412,16,83],[13,415,16,83,"a"],[13,416,16,83],[13,419,16,83,"Object"],[13,425,16,83],[13,426,16,83,"getOwnPropertyDescriptor"],[13,450,16,83],[13,451,16,83,"e"],[13,452,16,83],[13,454,16,83,"u"],[13,455,16,83],[13,465,16,83,"i"],[13,466,16,83],[13,471,16,83,"i"],[13,472,16,83],[13,473,16,83,"get"],[13,476,16,83],[13,480,16,83,"i"],[13,481,16,83],[13,482,16,83,"set"],[13,485,16,83],[13,489,16,83,"Object"],[13,495,16,83],[13,496,16,83,"defineProperty"],[13,510,16,83],[13,511,16,83,"n"],[13,512,16,83],[13,514,16,83,"u"],[13,515,16,83],[13,517,16,83,"i"],[13,518,16,83],[13,522,16,83,"n"],[13,523,16,83],[13,524,16,83,"u"],[13,525,16,83],[13,529,16,83,"e"],[13,530,16,83],[13,531,16,83,"u"],[13,532,16,83],[13,544,16,83,"n"],[13,545,16,83],[13,546,16,83,"default"],[13,553,16,83],[13,556,16,83,"e"],[13,557,16,83],[13,559,16,83,"t"],[13,560,16,83],[13,564,16,83,"t"],[13,565,16,83],[13,566,16,83,"set"],[13,569,16,83],[13,570,16,83,"e"],[13,571,16,83],[13,573,16,83,"n"],[13,574,16,83],[13,577,16,83,"n"],[13,578,16,83],[14,2,1,0],[16,2,28,0],[16,11,28,9,"propagateDetectorConfig"],[16,34,28,32,"propagateDetectorConfig"],[16,35,29,2,"props"],[16,40,29,29],[16,42,30,2,"gesture"],[16,49,30,40],[16,51,31,2],[17,4,32,2],[17,8,32,8,"keysToPropagate"],[17,23,32,55],[17,26,32,58],[17,27,33,4],[17,39,33,16],[17,41,34,4],[17,60,34,23],[17,62,35,4],[17,75,35,17],[17,76,36,3],[18,4,38,2],[18,9,38,7],[18,13,38,13,"key"],[18,16,38,16],[18,20,38,20,"keysToPropagate"],[18,35,38,35],[18,37,38,37],[19,6,39,4],[19,10,39,10,"value"],[19,15,39,15],[19,18,39,18,"props"],[19,23,39,23],[19,24,39,24,"key"],[19,27,39,27],[19,28,39,28],[20,6,40,4],[20,10,40,8,"value"],[20,15,40,13],[20,20,40,18,"undefined"],[20,29,40,27],[20,31,40,29],[21,8,41,6],[22,6,42,4],[23,6,44,4],[23,11,44,9],[23,15,44,15,"g"],[23,16,44,16],[23,20,44,20,"gesture"],[23,27,44,27],[23,28,44,28,"toGestureArray"],[23,42,44,42],[23,43,44,43],[23,44,44,44],[23,46,44,46],[24,8,45,6],[24,12,45,12,"config"],[24,18,45,18],[24,21,45,21,"g"],[24,22,45,22],[24,23,45,23,"config"],[24,29,45,59],[25,8,46,6,"config"],[25,14,46,12],[25,15,46,13,"key"],[25,18,46,16],[25,19,46,17],[25,22,46,20,"value"],[25,27,46,25],[26,6,47,4],[27,4,48,2],[28,2,49,0],[29,2,80,0],[30,0,81,0],[31,0,82,0],[32,0,83,0],[33,0,84,0],[34,0,85,0],[35,0,86,0],[36,0,87,0],[37,0,88,0],[38,0,89,0],[39,0,90,0],[40,0,91,0],[41,0,92,0],[42,0,93,0],[43,0,94,0],[44,2,95,7],[44,6,95,13,"GestureDetector"],[44,21,95,28],[44,24,95,28,"exports"],[44,31,95,28],[44,32,95,28,"GestureDetector"],[44,47,95,28],[44,50,95,31],[44,59,95,13,"GestureDetector"],[44,74,95,28,"GestureDetector"],[44,75,95,32,"props"],[44,80,95,59],[44,82,95,64],[45,4,96,2],[45,8,96,8,"rootViewContext"],[45,23,96,23],[45,26,96,26],[45,30,96,26,"useContext"],[45,47,96,36],[45,49,96,37,"GestureHandlerRootViewContext"],[45,87,96,66],[45,88,96,67],[46,4,97,2],[46,8,97,6,"__DEV__"],[46,15,97,13],[46,19,97,17],[46,20,97,18,"rootViewContext"],[46,35,97,33],[46,39,97,37],[46,40,97,38],[46,44,97,38,"isTestEnv"],[46,74,97,38],[46,75,97,38,"isTestEnv"],[46,102,97,47],[46,104,97,48],[46,105,97,49],[46,109,97,53,"Platform"],[46,130,97,61],[46,131,97,62,"OS"],[46,133,97,64],[46,138,97,69],[46,143,97,74],[46,145,97,76],[47,6,98,4],[47,12,98,10],[47,16,98,14,"Error"],[47,21,98,19],[47,22,99,6],[47,238,100,4],[47,239,100,5],[48,4,101,2],[50,4,103,2],[51,4,104,2],[51,8,104,8,"gestureConfig"],[51,21,104,21],[51,24,104,24,"props"],[51,29,104,29],[51,30,104,30,"gesture"],[51,37,104,37],[52,4,105,2,"propagateDetectorConfig"],[52,27,105,25],[52,28,105,26,"props"],[52,33,105,31],[52,35,105,33,"gestureConfig"],[52,48,105,46],[52,49,105,47],[53,4,107,2],[53,8,107,8,"gesturesToAttach"],[53,24,107,24],[53,27,107,27],[53,31,107,27,"useMemo"],[53,45,107,34],[53,47,108,4],[54,6,108,4],[54,13,108,10,"gestureConfig"],[54,26,108,23],[54,27,108,24,"toGestureArray"],[54,41,108,38],[54,42,108,39],[54,43,108,40],[55,4,108,40],[55,7,109,4],[55,8,109,5,"gestureConfig"],[55,21,109,18],[55,22,110,2],[55,23,110,3],[56,4,111,2],[56,8,111,8,"shouldUseReanimated"],[56,27,111,27],[56,30,111,30,"gesturesToAttach"],[56,46,111,46],[56,47,111,47,"some"],[56,51,111,51],[56,52,112,4],[56,62,112,5,"g"],[56,63,112,6],[57,6,112,6],[57,13,112,11,"g"],[57,14,112,12],[57,15,112,13,"shouldUseReanimated"],[57,34,112,32],[58,4,112,32],[58,5,113,2],[58,6,113,3],[59,4,115,2],[59,8,115,8,"webEventHandlersRef"],[59,27,115,27],[59,30,115,30],[59,34,115,30,"useWebEventHandlers"],[59,64,115,30],[59,65,115,30,"useWebEventHandlers"],[59,95,115,49],[59,97,115,50],[59,98,115,51],[60,4,116,2],[61,4,117,2],[61,8,117,8,"state"],[61,13,117,13],[61,16,117,16],[61,20,117,16,"useRef"],[61,33,117,22],[61,35,117,45],[62,6,118,4,"firstRender"],[62,17,118,15],[62,19,118,17],[62,23,118,21],[63,6,119,4,"viewRef"],[63,13,119,11],[63,15,119,13],[63,19,119,17],[64,6,120,4,"previousViewTag"],[64,21,120,19],[64,23,120,21],[64,24,120,22],[64,25,120,23],[65,6,121,4,"forceRebuildReanimatedEvent"],[65,33,121,31],[65,35,121,33],[66,4,122,2],[66,5,122,3],[66,6,122,4],[66,7,122,5,"current"],[66,14,122,12],[67,4,124,2],[67,8,124,8,"preparedGesture"],[67,23,124,23],[67,26,124,26,"React"],[67,40,124,31],[67,41,124,32,"useRef"],[67,47,124,38],[67,48,124,61],[68,6,125,4,"attachedGestures"],[68,22,125,20],[68,24,125,22],[68,26,125,24],[69,6,126,4,"animatedEventHandler"],[69,26,126,24],[69,28,126,26],[69,32,126,30],[70,6,127,4,"animatedHandlers"],[70,22,127,20],[70,24,127,22],[70,28,127,26],[71,6,128,4,"shouldUseReanimated"],[71,25,128,23],[71,27,128,25,"shouldUseReanimated"],[71,46,128,44],[72,6,129,4,"isMounted"],[72,15,129,13],[72,17,129,15],[73,4,130,2],[73,5,130,3],[73,6,130,4],[73,7,130,5,"current"],[73,14,130,12],[74,4,132,2],[74,8,132,8,"updateAttachedGestures"],[74,30,132,30],[74,33,132,33],[74,37,132,33,"useDetectorUpdater"],[74,67,132,33],[74,68,132,33,"useDetectorUpdater"],[74,110,132,51],[74,112,133,4,"state"],[74,117,133,9],[74,119,134,4,"preparedGesture"],[74,134,134,19],[74,136,135,4,"gesturesToAttach"],[74,152,135,20],[74,154,136,4,"gestureConfig"],[74,167,136,17],[74,169,137,4,"webEventHandlersRef"],[74,188,138,2],[74,189,138,3],[75,4,140,2],[75,8,140,8,"refHandler"],[75,18,140,18],[75,21,140,21],[75,25,140,21,"useViewRefHandler"],[75,55,140,21],[75,56,140,21,"useViewRefHandler"],[75,96,140,38],[75,98,140,39,"state"],[75,103,140,44],[75,105,140,46,"updateAttachedGestures"],[75,127,140,68],[75,128,140,69],[77,4,142,2],[78,4,143,2],[79,4,144,2],[79,8,144,8,"needsToRebuildReanimatedEvent"],[79,37,144,37],[79,40,145,4,"state"],[79,45,145,9],[79,46,145,10,"firstRender"],[79,57,145,21],[79,61,146,4,"state"],[79,66,146,9],[79,67,146,10,"forceRebuildReanimatedEvent"],[79,94,146,37],[79,98,147,4],[79,102,147,4,"needsToReattach"],[79,133,147,4],[79,134,147,4,"needsToReattach"],[79,170,147,19],[79,172,147,20,"preparedGesture"],[79,187,147,35],[79,189,147,37,"gesturesToAttach"],[79,205,147,53],[79,206,147,54],[80,4,148,2,"state"],[80,9,148,7],[80,10,148,8,"forceRebuildReanimatedEvent"],[80,37,148,35],[80,40,148,38],[80,45,148,43],[81,4,150,2],[81,8,150,2,"useAnimatedGesture"],[81,39,150,2],[81,40,150,2,"useAnimatedGesture"],[81,82,150,20],[81,84,150,21,"preparedGesture"],[81,99,150,36],[81,101,150,38,"needsToRebuildReanimatedEvent"],[81,130,150,67],[81,131,150,68],[82,4,152,2],[82,8,152,2,"useLayoutEffect"],[82,30,152,17],[82,32,152,18],[82,44,152,24],[83,6,153,4],[83,10,153,10,"viewTag"],[83,17,153,17],[83,20,153,20],[83,24,153,20,"findNodeHandle"],[83,47,153,34],[83,49,153,35,"state"],[83,54,153,40],[83,55,153,41,"viewRef"],[83,62,153,48],[83,63,153,59],[84,6,154,4,"preparedGesture"],[84,21,154,19],[84,22,154,20,"isMounted"],[84,31,154,29],[84,34,154,32],[84,38,154,36],[85,6,156,4],[85,10,156,4,"attachHandlers"],[85,41,156,4],[85,42,156,4,"attachHandlers"],[85,76,156,18],[85,78,156,19],[86,8,157,6,"preparedGesture"],[86,23,157,21],[86,25,157,6,"preparedGesture"],[86,40,157,21],[87,8,158,6,"gestureConfig"],[87,21,158,19],[87,23,158,6,"gestureConfig"],[87,36,158,19],[88,8,159,6,"gesturesToAttach"],[88,24,159,22],[88,26,159,6,"gesturesToAttach"],[88,42,159,22],[89,8,160,6,"webEventHandlersRef"],[89,27,160,25],[89,29,160,6,"webEventHandlersRef"],[89,48,160,25],[90,8,161,6,"viewTag"],[90,15,161,13],[90,17,161,6,"viewTag"],[91,6,162,4],[91,7,162,5],[91,8,162,6],[92,6,164,4],[92,13,164,11],[92,25,164,17],[93,8,165,6,"preparedGesture"],[93,23,165,21],[93,24,165,22,"isMounted"],[93,33,165,31],[93,36,165,34],[93,41,165,39],[94,8,166,6],[94,12,166,6,"dropHandlers"],[94,43,166,6],[94,44,166,6,"dropHandlers"],[94,74,166,18],[94,76,166,19,"preparedGesture"],[94,91,166,34],[94,92,166,35],[95,6,167,4],[95,7,167,5],[96,4,168,2],[96,5,168,3],[96,7,168,5],[96,9,168,7],[96,10,168,8],[97,4,170,2],[97,8,170,2,"useEffect"],[97,24,170,11],[97,26,170,12],[97,38,170,18],[98,6,171,4],[98,10,171,8,"state"],[98,15,171,13],[98,16,171,14,"firstRender"],[98,27,171,25],[98,29,171,27],[99,8,172,6,"state"],[99,13,172,11],[99,14,172,12,"firstRender"],[99,25,172,23],[99,28,172,26],[99,33,172,31],[100,6,173,4],[100,7,173,5],[100,13,173,11],[101,8,174,6,"updateAttachedGestures"],[101,30,174,28],[101,31,174,29],[101,32,174,30],[102,6,175,4],[103,4,176,2],[103,5,176,3],[103,7,176,5],[103,8,176,6,"props"],[103,13,176,11],[103,14,176,12],[103,15,176,13],[104,4,178,2],[104,8,178,2,"useMountReactions"],[104,39,178,2],[104,40,178,2,"useMountReactions"],[104,80,178,19],[104,82,178,20,"updateAttachedGestures"],[104,104,178,42],[104,106,178,44,"preparedGesture"],[104,121,178,59],[104,122,178,60],[105,4,180,2],[105,8,180,6,"shouldUseReanimated"],[105,27,180,25],[105,29,180,27],[106,6,181,4],[106,26,182,6],[106,30,182,6,"_jsxRuntime"],[106,41,182,6],[106,42,182,6,"jsx"],[106,45,182,6],[106,47,182,7,"_$$_REQUIRE"],[106,58,182,7],[106,59,182,7,"_dependencyMap"],[106,73,182,7],[106,89,182,7,"AnimatedWrap"],[106,101,182,19],[107,8,183,8,"ref"],[107,11,183,11],[107,13,183,13,"refHandler"],[107,23,183,24],[108,8,184,8,"onGestureHandlerEvent"],[108,29,184,29],[108,31,184,31,"preparedGesture"],[108,46,184,46],[108,47,184,47,"animatedEventHandler"],[108,67,184,68],[109,8,184,68,"children"],[109,16,184,68],[109,18,185,9,"props"],[109,23,185,14],[109,24,185,15,"children"],[110,6,185,23],[110,7,186,20],[110,8,186,21],[111,4,188,2],[111,5,188,3],[111,11,188,9],[112,6,189,4],[112,26,189,11],[112,30,189,11,"_jsxRuntime"],[112,41,189,11],[112,42,189,11,"jsx"],[112,45,189,11],[112,47,189,12,"_$$_REQUIRE"],[112,58,189,12],[112,59,189,12,"_dependencyMap"],[112,73,189,12],[112,89,189,12,"Wrap"],[112,93,189,16],[113,8,189,17,"ref"],[113,11,189,20],[113,13,189,22,"refHandler"],[113,23,189,33],[114,8,189,33,"children"],[114,16,189,33],[114,18,189,35,"props"],[114,23,189,40],[114,24,189,41,"children"],[115,6,189,49],[115,7,189,56],[115,8,189,57],[116,4,190,2],[117,2,191,0],[117,3,191,1],[118,0,191,2],[118,3]],"functionMap":{"names":["<global>","propagateDetectorConfig","GestureDetector","useMemo$argument_0","gesturesToAttach.some$argument_0","useLayoutEffect$argument_0","<anonymous>","useEffect$argument_0"],"mappings":"AAA;AC2B;CDqB;+BE8C;ICa,oCD;IEI,4BF;kBGwC;WCY;KDG;GHC;YKE;GLM;CFe"}},"type":"js/module"}]}