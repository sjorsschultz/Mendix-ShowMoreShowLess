{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":56,"column":46,"index":2273}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.validatePathConfig = validatePathConfig;\n  var formatToList = function formatToList(items) {\n    return Object.entries(items).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n      return `- ${key} (${value})`;\n    }).join('\\n');\n  };\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validation = Object.assign({\n      path: 'string',\n      initialRouteName: 'string',\n      screens: 'object'\n    }, root ? null : {\n      alias: 'array',\n      exact: 'boolean',\n      stringify: 'object',\n      parse: 'object'\n    });\n    if (typeof config !== 'object' || config === null) {\n      throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(config)}.`);\n    }\n    var validationErrors = Object.fromEntries(Object.keys(config).map(function (key) {\n      if (key in validation) {\n        var type = validation[key];\n        // @ts-expect-error: we know the key exists\n        var value = config[key];\n        if (value !== undefined) {\n          if (type === 'array') {\n            if (!Array.isArray(value)) {\n              return [key, `expected 'Array', got '${typeof value}'`];\n            }\n          } else if (typeof value !== type) {\n            return [key, `expected '${type}', got '${typeof value}'`];\n          }\n        }\n      } else {\n        return [key, 'extraneous'];\n      }\n      return null;\n    }).filter(Boolean));\n    if (Object.keys(validationErrors).length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(validationErrors)}\\n\\nYou can only specify the following properties:\\n${formatToList(validation)}\\n\\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (root && 'path' in config && typeof config.path === 'string' && config.path.includes(':')) {\n      throw new Error(`Found invalid path '${config.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);\n    }\n    if ('screens' in config && config.screens) {\n      Object.entries(config.screens).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n          _ = _ref4[0],\n          value = _ref4[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"validatePathConfig"],[8,28,6,26],[8,31,6,29,"validatePathConfig"],[8,49,6,47],[9,2,7,0],[9,6,7,6,"formatToList"],[9,18,7,18],[9,21,7,21],[9,30,7,6,"formatToList"],[9,42,7,18,"formatToList"],[9,43,7,21,"items"],[9,48,7,26],[10,4,7,26],[10,11,7,30,"Object"],[10,17,7,36],[10,18,7,37,"entries"],[10,25,7,44],[10,26,7,45,"items"],[10,31,7,50],[10,32,7,51],[10,33,7,52,"map"],[10,36,7,55],[10,37,7,56],[10,47,7,56,"_ref"],[10,51,7,56],[11,6,7,56],[11,10,7,56,"_ref2"],[11,15,7,56],[11,18,7,56,"_slicedToArray"],[11,32,7,56],[11,33,7,56,"_ref"],[11,37,7,56],[12,8,7,58,"key"],[12,11,7,61],[12,14,7,61,"_ref2"],[12,19,7,61],[13,8,7,63,"value"],[13,13,7,68],[13,16,7,68,"_ref2"],[13,21,7,68],[14,6,7,68],[14,13,7,74],[14,18,7,79,"key"],[14,21,7,82],[14,26,7,87,"value"],[14,31,7,92],[14,34,7,95],[15,4,7,95],[15,6,7,96],[15,7,7,97,"join"],[15,11,7,101],[15,12,7,102],[15,16,7,106],[15,17,7,107],[16,2,7,107],[17,2,8,0],[17,11,8,9,"validatePathConfig"],[17,29,8,27,"validatePathConfig"],[17,30,8,28,"config"],[17,36,8,34],[17,38,8,49],[18,4,8,49],[18,8,8,36,"root"],[18,12,8,40],[18,15,8,40,"arguments"],[18,24,8,40],[18,25,8,40,"length"],[18,31,8,40],[18,39,8,40,"arguments"],[18,48,8,40],[18,56,8,40,"undefined"],[18,65,8,40],[18,68,8,40,"arguments"],[18,77,8,40],[18,83,8,43],[18,87,8,47],[19,4,9,2],[19,8,9,8,"validation"],[19,18,9,18],[19,21,9,18,"Object"],[19,27,9,18],[19,28,9,18,"assign"],[19,34,9,18],[20,6,10,4,"path"],[20,10,10,8],[20,12,10,10],[20,20,10,18],[21,6,11,4,"initialRouteName"],[21,22,11,20],[21,24,11,22],[21,32,11,30],[22,6,12,4,"screens"],[22,13,12,11],[22,15,12,13],[23,4,12,21],[23,7,13,8,"root"],[23,11,13,12],[23,14,13,15],[23,18,13,19],[23,21,13,22],[24,6,14,6,"alias"],[24,11,14,11],[24,13,14,13],[24,20,14,20],[25,6,15,6,"exact"],[25,11,15,11],[25,13,15,13],[25,22,15,22],[26,6,16,6,"stringify"],[26,15,16,15],[26,17,16,17],[26,25,16,25],[27,6,17,6,"parse"],[27,11,17,11],[27,13,17,13],[28,4,18,4],[28,5,18,5],[28,6,19,3],[29,4,20,2],[29,8,20,6],[29,15,20,13,"config"],[29,21,20,19],[29,26,20,24],[29,34,20,32],[29,38,20,36,"config"],[29,44,20,42],[29,49,20,47],[29,53,20,51],[29,55,20,53],[30,6,21,4],[30,12,21,10],[30,16,21,14,"Error"],[30,21,21,19],[30,22,21,20],[30,77,21,75,"JSON"],[30,81,21,79],[30,82,21,80,"stringify"],[30,91,21,89],[30,92,21,90,"config"],[30,98,21,96],[30,99,21,97],[30,102,21,100],[30,103,21,101],[31,4,22,2],[32,4,23,2],[32,8,23,8,"validationErrors"],[32,24,23,24],[32,27,23,27,"Object"],[32,33,23,33],[32,34,23,34,"fromEntries"],[32,45,23,45],[32,46,23,46,"Object"],[32,52,23,52],[32,53,23,53,"keys"],[32,57,23,57],[32,58,23,58,"config"],[32,64,23,64],[32,65,23,65],[32,66,23,66,"map"],[32,69,23,69],[32,70,23,70],[32,80,23,70,"key"],[32,83,23,73],[32,85,23,77],[33,6,24,4],[33,10,24,8,"key"],[33,13,24,11],[33,17,24,15,"validation"],[33,27,24,25],[33,29,24,27],[34,8,25,6],[34,12,25,12,"type"],[34,16,25,16],[34,19,25,19,"validation"],[34,29,25,29],[34,30,25,30,"key"],[34,33,25,33],[34,34,25,34],[35,8,26,6],[36,8,27,6],[36,12,27,12,"value"],[36,17,27,17],[36,20,27,20,"config"],[36,26,27,26],[36,27,27,27,"key"],[36,30,27,30],[36,31,27,31],[37,8,28,6],[37,12,28,10,"value"],[37,17,28,15],[37,22,28,20,"undefined"],[37,31,28,29],[37,33,28,31],[38,10,29,8],[38,14,29,12,"type"],[38,18,29,16],[38,23,29,21],[38,30,29,28],[38,32,29,30],[39,12,30,10],[39,16,30,14],[39,17,30,15,"Array"],[39,22,30,20],[39,23,30,21,"isArray"],[39,30,30,28],[39,31,30,29,"value"],[39,36,30,34],[39,37,30,35],[39,39,30,37],[40,14,31,12],[40,21,31,19],[40,22,31,20,"key"],[40,25,31,23],[40,27,31,25],[40,53,31,51],[40,60,31,58,"value"],[40,65,31,63],[40,68,31,66],[40,69,31,67],[41,12,32,10],[42,10,33,8],[42,11,33,9],[42,17,33,15],[42,21,33,19],[42,28,33,26,"value"],[42,33,33,31],[42,38,33,36,"type"],[42,42,33,40],[42,44,33,42],[43,12,34,10],[43,19,34,17],[43,20,34,18,"key"],[43,23,34,21],[43,25,34,23],[43,38,34,36,"type"],[43,42,34,40],[43,53,34,51],[43,60,34,58,"value"],[43,65,34,63],[43,68,34,66],[43,69,34,67],[44,10,35,8],[45,8,36,6],[46,6,37,4],[46,7,37,5],[46,13,37,11],[47,8,38,6],[47,15,38,13],[47,16,38,14,"key"],[47,19,38,17],[47,21,38,19],[47,33,38,31],[47,34,38,32],[48,6,39,4],[49,6,40,4],[49,13,40,11],[49,17,40,15],[50,4,41,2],[50,5,41,3],[50,6,41,4],[50,7,41,5,"filter"],[50,13,41,11],[50,14,41,12,"Boolean"],[50,21,41,19],[50,22,41,20],[50,23,41,21],[51,4,42,2],[51,8,42,6,"Object"],[51,14,42,12],[51,15,42,13,"keys"],[51,19,42,17],[51,20,42,18,"validationErrors"],[51,36,42,34],[51,37,42,35],[51,38,42,36,"length"],[51,44,42,42],[51,46,42,44],[52,6,43,4],[52,12,43,10],[52,16,43,14,"Error"],[52,21,43,19],[52,22,43,20],[52,73,43,71,"formatToList"],[52,85,43,83],[52,86,43,84,"validationErrors"],[52,102,43,100],[52,103,43,101],[52,158,43,156,"formatToList"],[52,170,43,168],[52,171,43,169,"validation"],[52,181,43,179],[52,182,43,180],[52,408,43,406],[52,409,43,407],[53,4,44,2],[54,4,45,2],[54,8,45,6,"root"],[54,12,45,10],[54,16,45,14],[54,22,45,20],[54,26,45,24,"config"],[54,32,45,30],[54,36,45,34],[54,43,45,41,"config"],[54,49,45,47],[54,50,45,48,"path"],[54,54,45,52],[54,59,45,57],[54,67,45,65],[54,71,45,69,"config"],[54,77,45,75],[54,78,45,76,"path"],[54,82,45,80],[54,83,45,81,"includes"],[54,91,45,89],[54,92,45,90],[54,95,45,93],[54,96,45,94],[54,98,45,96],[55,6,46,4],[55,12,46,10],[55,16,46,14,"Error"],[55,21,46,19],[55,22,46,20],[55,45,46,43,"config"],[55,51,46,49],[55,52,46,50,"path"],[55,56,46,54],[55,138,46,136],[55,139,46,137],[56,4,47,2],[57,4,48,2],[57,8,48,6],[57,17,48,15],[57,21,48,19,"config"],[57,27,48,25],[57,31,48,29,"config"],[57,37,48,35],[57,38,48,36,"screens"],[57,45,48,43],[57,47,48,45],[58,6,49,4,"Object"],[58,12,49,10],[58,13,49,11,"entries"],[58,20,49,18],[58,21,49,19,"config"],[58,27,49,25],[58,28,49,26,"screens"],[58,35,49,33],[58,36,49,34],[58,37,49,35,"forEach"],[58,44,49,42],[58,45,49,43],[58,55,49,43,"_ref3"],[58,60,49,43],[58,62,49,59],[59,8,49,59],[59,12,49,59,"_ref4"],[59,17,49,59],[59,20,49,59,"_slicedToArray"],[59,34,49,59],[59,35,49,59,"_ref3"],[59,40,49,59],[60,10,49,45,"_"],[60,11,49,46],[60,14,49,46,"_ref4"],[60,19,49,46],[61,10,49,48,"value"],[61,15,49,53],[61,18,49,53,"_ref4"],[61,23,49,53],[62,8,50,6],[62,12,50,10],[62,19,50,17,"value"],[62,24,50,22],[62,29,50,27],[62,37,50,35],[62,39,50,37],[63,10,51,8,"validatePathConfig"],[63,28,51,26],[63,29,51,27,"value"],[63,34,51,32],[63,36,51,34],[63,41,51,39],[63,42,51,40],[64,8,52,6],[65,6,53,4],[65,7,53,5],[65,8,53,6],[66,4,54,2],[67,2,55,0],[68,0,55,1],[68,3]],"functionMap":{"names":["<global>","formatToList","Object.entries.map$argument_0","validatePathConfig","Object.keys.map$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;qBCM,mCC,uCD,YD;AGC;sECe;GDkB;2CEQ;KFI;CHE"}},"type":"js/module"}]}