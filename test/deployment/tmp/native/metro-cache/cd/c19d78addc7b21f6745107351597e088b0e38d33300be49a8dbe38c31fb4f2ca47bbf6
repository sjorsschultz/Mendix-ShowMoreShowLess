{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":351,"column":0,"index":12908}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./utils/uri","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":34,"index":85}}],"key":"FPIYFugfvBb7ZOOwcTE1fk5JWVg="}},{"name":"./fs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":86},"end":{"line":3,"column":22,"index":108}}],"key":"emVCwJIW++aOb7jIDhjg3u98HbU="}},{"name":"./utils/uuid","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":35,"index":144}}],"key":"f0fM4cnbp8gCB45JRkrfBw7ug1o="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":145},"end":{"line":5,"column":48,"index":193}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./class/ReactNativeBlobUtilCanceledFetchError","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":269},"end":{"line":7,"column":79,"index":348}}],"key":"7SSujoLhKy2es9ewSnVMYitYm3o="}},{"name":"./codegenSpecs/NativeBlobUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":349},"end":{"line":8,"column":65,"index":414}}],"key":"qzrRZ2rOqZA7YaXRNx3bViAt2Aw="}},{"name":"./class/ReactNativeBlobUtilBlobResponse","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":194},"end":{"line":6,"column":74,"index":268}},{"start":{"line":6,"column":0,"index":194},"end":{"line":6,"column":74,"index":268}}],"key":"JBgPGwruOEUGcyZXT/myjX+eysI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.config = config;\n  exports.fetch = fetch;\n  var _uri = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./utils/uri\"));\n  var _fs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./fs\"));\n  var _uuid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./utils/uuid\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n  var _ReactNativeBlobUtilCanceledFetchError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./class/ReactNativeBlobUtilCanceledFetchError\"));\n  var _NativeBlobUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./codegenSpecs/NativeBlobUtils\"));\n  var eventEmitter = new _reactNative.NativeEventEmitter(_NativeBlobUtils.default);\n\n  // register message channel event handler.\n  eventEmitter.addListener('ReactNativeBlobUtilMessage', function (e) {\n    if (typeof e === 'string') e = JSON.parse(e);\n    if (e.event === 'warn') {\n      console.warn(e.detail);\n    } else if (e.event === 'error') {\n      throw e.detail;\n    } else {\n      console.log('ReactNativeBlobUtil native message', e.detail);\n    }\n  });\n\n  /**\n   * Calling this method will inject configurations into followed `fetch` method.\n   * @param  {ReactNativeBlobUtilConfig} options\n   *         Fetch API configurations, contains the following options :\n   *         @property {boolean} fileCache\n   *                   When fileCache is `true`, response data will be saved in\n   *                   storage with a random generated file name, rather than\n   *                   a BASE64 encoded string.\n   *         @property {string} appendExt\n   *                   Set this property to change file extension of random-\n   *                   generated file name.\n   *         @property {string} path\n   *                   If this property has a valid string format, resonse data\n   *                   will be saved to specific file path. Default string format\n   *                   is : `ReactNativeBlobUtil-file://path-to-file`\n   *         @property {string} key\n   *                   If this property is set, it will be converted to md5, to\n   *                   check if a file with this name exists.\n   *                   If it exists, the absolute path is returned (no network\n   *                   activity takes place )\n   *                   If it doesn't exist, the file is downloaded as usual\n   *         @property {number} timeout\n   *                   Request timeout in millionseconds, by default it's 60000ms.\n   *         @property {boolean} followRedirect\n   *                   Follow redirects automatically, default true\n   *         @property {boolean} trusty\n   *                   Trust all certificates\n   *         @property {boolean} wifiOnly\n   *                   Only do requests through WiFi. Android SDK 21 or above only.\n   *\n   * @return {function} This method returns a `fetch` method instance.\n   */\n  function config(options) {\n    return {\n      fetch: fetch.bind(options)\n    };\n  }\n\n  /**\n   * Fetch from file system, use the same interface as RNFB.fetch\n   * @param  {ReactNativeBlobUtilConfig} [options={}] Fetch configurations\n   * @param  {string} method     Should be one of `get`, `post`, `put`\n   * @param  {string} url        A file URI string\n   * @param  {string} headers    Arguments of file system API\n   * @param  {any}    body       Data to put or post to file systen.\n   * @return {Promise}\n   */\n  function fetchFile() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var method = arguments.length > 1 ? arguments[1] : undefined;\n    var url = arguments.length > 2 ? arguments[2] : undefined;\n    var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var body = arguments.length > 4 ? arguments[4] : undefined;\n    if (!_uri.default.isFileURI(url)) {\n      throw `could not fetch file from an invalid URI : ${url}`;\n    }\n    url = _uri.default.unwrapFileURI(url);\n    var promise = null,\n      cursor = 0,\n      total = -1,\n      cacheData = '',\n      info = null,\n      _progress,\n      _uploadProgress,\n      _stateChange;\n    switch (method.toLowerCase()) {\n      case 'post':\n        break;\n      case 'put':\n        break;\n\n      // read data from file system\n      default:\n        promise = _fs.default.stat(url).then(function (stat) {\n          total = stat.size;\n          return _fs.default.readStream(url, headers.encoding || 'utf8', Math.floor(headers.bufferSize) || 409600, Math.floor(headers.interval) || 100);\n        }).then(function (stream) {\n          return new Promise(function (resolve, reject) {\n            stream.open();\n            info = {\n              state: '2',\n              headers: {\n                'source': 'system-fs'\n              },\n              status: 200,\n              respType: 'text',\n              rnfbEncode: headers.encoding || 'utf8'\n            };\n            _stateChange(info);\n            stream.onData(function (chunk) {\n              _progress && _progress(cursor, total, chunk);\n              if (headers.noCache) return;\n              cacheData += chunk;\n            });\n            stream.onError(function (err) {\n              reject(err);\n            });\n            stream.onEnd(function () {\n              resolve(new (_$$_REQUIRE(_dependencyMap[7], \"./class/ReactNativeBlobUtilBlobResponse\").FetchBlobResponse)(null, info, cacheData));\n            });\n          });\n        });\n        break;\n    }\n    promise.progress = function (fn) {\n      _progress = fn;\n      return promise;\n    };\n    promise.stateChange = function (fn) {\n      _stateChange = fn;\n      return promise;\n    };\n    promise.uploadProgress = function (fn) {\n      _uploadProgress = fn;\n      return promise;\n    };\n    return promise;\n  }\n\n  /**\n   * Create a HTTP request by settings, the `this` context is a `ReactNativeBlobUtilConfig` object.\n   * @param  {string} method HTTP method, should be `GET`, `POST`, `PUT`, `DELETE`\n   * @param  {string} url Request target url string.\n   * @param  {object} headers HTTP request headers.\n   * @param  {string} body\n   *         Request body, can be either a BASE64 encoded data string,\n   *         or a file path with prefix `ReactNativeBlobUtil-file://` (can be changed)\n   * @return {Promise}\n   *         This promise instance also contains a Customized method `progress`for\n   *         register progress event handler.\n   */\n  function fetch() {\n    // create task ID for receiving progress event\n    var taskId = (0, _uuid.default)();\n    var options = this || {};\n    var subscription, subscriptionUpload, stateEvent, partEvent;\n    var respInfo = {\n      'uninit': true\n    };\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var _ref = [].concat(args),\n      method = _ref[0],\n      url = _ref[1],\n      headers = _ref[2],\n      body = _ref[3];\n\n    // # 241 normalize null or undefined headers, in case nil or null string\n    // pass to native context\n    headers = headers && Object.keys(headers).reduce(function (result, key) {\n      result[key] = headers[key] || '';\n      return result;\n    }, {});\n\n    // fetch from file system\n    if (_uri.default.isFileURI(url)) {\n      return fetchFile(options, method, url, headers, body);\n    }\n    var promiseResolve;\n    var promiseReject;\n\n    // from remote HTTP(S)\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n      var nativeMethodName = Array.isArray(body) ? 'fetchBlobForm' : 'fetchBlob';\n\n      // on progress event listener\n      subscription = eventEmitter.addListener('ReactNativeBlobUtilProgress', function (e) {\n        if (typeof e === 'string') e = JSON.parse(e);\n        if (e.taskId === taskId && promise.onProgress) {\n          promise.onProgress(e.written, e.total, e.chunk);\n        }\n      });\n      subscriptionUpload = eventEmitter.addListener('ReactNativeBlobUtilProgress-upload', function (e) {\n        if (typeof e === 'string') e = JSON.parse(e);\n        if (e.taskId === taskId && promise.onUploadProgress) {\n          promise.onUploadProgress(e.written, e.total);\n        }\n      });\n      stateEvent = eventEmitter.addListener('ReactNativeBlobUtilState', function (e) {\n        if (typeof e === 'string') e = JSON.parse(e);\n        if (e.taskId === taskId) respInfo = e;\n        promise.onStateChange && promise.onStateChange(e);\n      });\n      subscription = eventEmitter.addListener('ReactNativeBlobUtilExpire', function (e) {\n        if (typeof e === 'string') e = JSON.parse(e);\n        if (e.taskId === taskId && promise.onExpire) {\n          promise.onExpire(e);\n        }\n      });\n      partEvent = eventEmitter.addListener('ReactNativeBlobUtilServerPush', function (e) {\n        if (typeof e === 'string') e = JSON.parse(e);\n        if (e.taskId === taskId && promise.onPartData) {\n          promise.onPartData(e.chunk);\n        }\n      });\n\n      // When the request body comes from Blob polyfill, we should use special its ref\n      // as the request body\n      if (body instanceof Blob && body.isReactNativeBlobUtilPolyfill) {\n        body = body.getReactNativeBlobUtilRef();\n      }\n      var req = _NativeBlobUtils.default[nativeMethodName];\n\n      /**\n       * Send request via native module, the response callback accepts three arguments\n       * @callback\n          * @param err {any} Error message or object, when the request success, this\n       *                  parameter should be `null`.\n       * @param rawType { 'utf8' | 'base64' | 'path'} RNFB request will be stored\n       *                  as UTF8 string, BASE64 string, or a file path reference\n       *                  in JS context, and this parameter indicates which one\n       *                  dose the response data presents.\n       * @param data {string} Response data or its reference.\n       * @param responseInfo {Object.<>}\n       */\n      req(options, taskId, method, url, headers || {}, body, function (err, rawType, data, responseInfo) {\n        // task done, remove event listeners\n        subscription.remove();\n        subscriptionUpload.remove();\n        stateEvent.remove();\n        partEvent.remove();\n        delete promise.progress;\n        delete promise.uploadProgress;\n        delete promise.stateChange;\n        delete promise.part;\n        delete promise.cancel;\n        // delete promise['expire']\n        promise.cancel = function () {};\n        if (!responseInfo) responseInfo = {}; // should not be null / undefined\n\n        if (err) reject(new Error(err, respInfo));else {\n          // response data is saved to storage, create a session for it\n          if (options.path || options.fileCache || options.addAndroidDownloads || options.key || options.auto && respInfo.respType === 'blob') {\n            if (options.session) _fs.default.session(options.session).add(data);\n          }\n          if ('uninit' in respInfo && respInfo.uninit)\n            // event didn't fire yet so we override it here\n            respInfo = responseInfo;\n          respInfo.rnfbEncode = rawType;\n          resolve(new (_$$_REQUIRE(_dependencyMap[7], \"./class/ReactNativeBlobUtilBlobResponse\").FetchBlobResponse)(taskId, respInfo, data));\n        }\n      });\n    });\n\n    // extend Promise object, add `progress`, `uploadProgress`, and `cancel`\n    // method for register progress event handler and cancel request.\n    // Add second parameter for performance purpose #140\n    // When there's only one argument pass to this method, use default `interval`\n    // and `count`, otherwise use the given on.\n    // TODO : code refactor, move `uploadProgress` and `progress` to StatefulPromise\n    promise.progress = function () {\n      var interval = 250;\n      var count = -1;\n      var fn = function fn() {};\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      if (args.length === 2) {\n        interval = args[0].interval || interval;\n        count = args[0].count || count;\n        fn = args[1];\n      } else {\n        fn = args[0];\n      }\n      promise.onProgress = fn;\n      _NativeBlobUtils.default.enableProgressReport(taskId, interval, count);\n      return promise;\n    };\n    promise.uploadProgress = function () {\n      var interval = 250;\n      var count = -1;\n      var fn = function fn() {};\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      if (args.length === 2) {\n        interval = args[0].interval || interval;\n        count = args[0].count || count;\n        fn = args[1];\n      } else {\n        fn = args[0];\n      }\n      promise.onUploadProgress = fn;\n      _NativeBlobUtils.default.enableUploadProgressReport(taskId, interval, count);\n      return promise;\n    };\n    promise.part = function (fn) {\n      promise.onPartData = fn;\n      return promise;\n    };\n    promise.stateChange = function (fn) {\n      promise.onStateChange = fn;\n      return promise;\n    };\n    promise.expire = function (fn) {\n      promise.onExpire = fn;\n      return promise;\n    };\n    promise.cancel = function (fn) {\n      fn = fn || function () {};\n      subscription.remove();\n      subscriptionUpload.remove();\n      stateEvent.remove();\n      _NativeBlobUtils.default.cancelRequest(taskId, fn);\n      promiseReject(new _ReactNativeBlobUtilCanceledFetchError.default('canceled'));\n    };\n    promise.taskId = taskId;\n    return promise;\n  }\n});","lineCount":340,"map":[[8,2,2,0],[8,6,2,0,"_uri"],[8,10,2,0],[8,13,2,0,"_interopRequireDefault"],[8,35,2,0],[8,36,2,0,"_$$_REQUIRE"],[8,47,2,0],[8,48,2,0,"_dependencyMap"],[8,62,2,0],[9,2,3,0],[9,6,3,0,"_fs"],[9,9,3,0],[9,12,3,0,"_interopRequireDefault"],[9,34,3,0],[9,35,3,0,"_$$_REQUIRE"],[9,46,3,0],[9,47,3,0,"_dependencyMap"],[9,61,3,0],[10,2,4,0],[10,6,4,0,"_uuid"],[10,11,4,0],[10,14,4,0,"_interopRequireDefault"],[10,36,4,0],[10,37,4,0,"_$$_REQUIRE"],[10,48,4,0],[10,49,4,0,"_dependencyMap"],[10,63,4,0],[11,2,5,0],[11,6,5,0,"_reactNative"],[11,18,5,0],[11,21,5,0,"_$$_REQUIRE"],[11,32,5,0],[11,33,5,0,"_dependencyMap"],[11,47,5,0],[12,2,7,0],[12,6,7,0,"_ReactNativeBlobUtilCanceledFetchError"],[12,44,7,0],[12,47,7,0,"_interopRequireDefault"],[12,69,7,0],[12,70,7,0,"_$$_REQUIRE"],[12,81,7,0],[12,82,7,0,"_dependencyMap"],[12,96,7,0],[13,2,8,0],[13,6,8,0,"_NativeBlobUtils"],[13,22,8,0],[13,25,8,0,"_interopRequireDefault"],[13,47,8,0],[13,48,8,0,"_$$_REQUIRE"],[13,59,8,0],[13,60,8,0,"_dependencyMap"],[13,74,8,0],[14,2,10,0],[14,6,10,6,"eventEmitter"],[14,18,10,18],[14,21,10,21],[14,25,10,25,"NativeEventEmitter"],[14,56,10,43],[14,57,10,44,"ReactNativeBlobUtil"],[14,81,10,63],[14,82,10,64],[16,2,12,0],[17,2,13,0,"eventEmitter"],[17,14,13,12],[17,15,13,13,"addListener"],[17,26,13,24],[17,27,13,25],[17,55,13,53],[17,57,13,55],[17,67,13,56,"e"],[17,68,13,57],[17,70,13,62],[18,4,14,4],[18,8,14,8],[18,15,14,15,"e"],[18,16,14,16],[18,21,14,21],[18,29,14,29],[18,31,14,31,"e"],[18,32,14,32],[18,35,14,35,"JSON"],[18,39,14,39],[18,40,14,40,"parse"],[18,45,14,45],[18,46,14,46,"e"],[18,47,14,47],[18,48,14,48],[19,4,16,4],[19,8,16,8,"e"],[19,9,16,9],[19,10,16,10,"event"],[19,15,16,15],[19,20,16,20],[19,26,16,26],[19,28,16,28],[20,6,17,8,"console"],[20,13,17,15],[20,14,17,16,"warn"],[20,18,17,20],[20,19,17,21,"e"],[20,20,17,22],[20,21,17,23,"detail"],[20,27,17,29],[20,28,17,30],[21,4,18,4],[21,5,18,5],[21,11,19,9],[21,15,19,13,"e"],[21,16,19,14],[21,17,19,15,"event"],[21,22,19,20],[21,27,19,25],[21,34,19,32],[21,36,19,34],[22,6,20,8],[22,12,20,14,"e"],[22,13,20,15],[22,14,20,16,"detail"],[22,20,20,22],[23,4,21,4],[23,5,21,5],[23,11,22,9],[24,6,23,8,"console"],[24,13,23,15],[24,14,23,16,"log"],[24,17,23,19],[24,18,23,20],[24,54,23,56],[24,56,23,58,"e"],[24,57,23,59],[24,58,23,60,"detail"],[24,64,23,66],[24,65,23,67],[25,4,24,4],[26,2,25,0],[26,3,25,1],[26,4,25,2],[28,2,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,0,50,0],[52,0,51,0],[53,0,52,0],[54,0,53,0],[55,0,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,2,59,7],[60,11,59,16,"config"],[60,17,59,22,"config"],[60,18,59,23,"options"],[60,25,59,57],[60,27,59,59],[61,4,60,4],[61,11,60,11],[62,6,60,12,"fetch"],[62,11,60,17],[62,13,60,19,"fetch"],[62,18,60,24],[62,19,60,25,"bind"],[62,23,60,29],[62,24,60,30,"options"],[62,31,60,37],[63,4,60,38],[63,5,60,39],[64,2,61,0],[66,2,63,0],[67,0,64,0],[68,0,65,0],[69,0,66,0],[70,0,67,0],[71,0,68,0],[72,0,69,0],[73,0,70,0],[74,0,71,0],[75,2,72,0],[75,11,72,9,"fetchFile"],[75,20,72,18,"fetchFile"],[75,21,72,18],[75,23,72,75],[76,4,72,75],[76,8,72,19,"options"],[76,15,72,26],[76,18,72,26,"arguments"],[76,27,72,26],[76,28,72,26,"length"],[76,34,72,26],[76,42,72,26,"arguments"],[76,51,72,26],[76,59,72,26,"undefined"],[76,68,72,26],[76,71,72,26,"arguments"],[76,80,72,26],[76,86,72,29],[76,87,72,30],[76,88,72,31],[77,4,72,31],[77,8,72,33,"method"],[77,14,72,39],[77,17,72,39,"arguments"],[77,26,72,39],[77,27,72,39,"length"],[77,33,72,39],[77,40,72,39,"arguments"],[77,49,72,39],[77,55,72,39,"undefined"],[77,64,72,39],[78,4,72,39],[78,8,72,41,"url"],[78,11,72,44],[78,14,72,44,"arguments"],[78,23,72,44],[78,24,72,44,"length"],[78,30,72,44],[78,37,72,44,"arguments"],[78,46,72,44],[78,52,72,44,"undefined"],[78,61,72,44],[79,4,72,44],[79,8,72,46,"headers"],[79,15,72,53],[79,18,72,53,"arguments"],[79,27,72,53],[79,28,72,53,"length"],[79,34,72,53],[79,42,72,53,"arguments"],[79,51,72,53],[79,59,72,53,"undefined"],[79,68,72,53],[79,71,72,53,"arguments"],[79,80,72,53],[79,86,72,56],[79,87,72,57],[79,88,72,58],[80,4,72,58],[80,8,72,60,"body"],[80,12,72,64],[80,15,72,64,"arguments"],[80,24,72,64],[80,25,72,64,"length"],[80,31,72,64],[80,38,72,64,"arguments"],[80,47,72,64],[80,53,72,64,"undefined"],[80,62,72,64],[81,4,74,4],[81,8,74,8],[81,9,74,9,"URIUtil"],[81,21,74,16],[81,22,74,17,"isFileURI"],[81,31,74,26],[81,32,74,27,"url"],[81,35,74,30],[81,36,74,31],[81,38,74,33],[82,6,75,8],[82,12,75,14],[82,58,75,60,"url"],[82,61,75,63],[82,63,75,65],[83,4,76,4],[84,4,78,4,"url"],[84,7,78,7],[84,10,78,10,"URIUtil"],[84,22,78,17],[84,23,78,18,"unwrapFileURI"],[84,36,78,31],[84,37,78,32,"url"],[84,40,78,35],[84,41,78,36],[85,4,80,4],[85,8,80,8,"promise"],[85,15,80,15],[85,18,80,18],[85,22,80,22],[86,6,81,8,"cursor"],[86,12,81,14],[86,15,81,17],[86,16,81,18],[87,6,82,8,"total"],[87,11,82,13],[87,14,82,16],[87,15,82,17],[87,16,82,18],[88,6,83,8,"cacheData"],[88,15,83,17],[88,18,83,20],[88,20,83,22],[89,6,84,8,"info"],[89,10,84,12],[89,13,84,15],[89,17,84,19],[90,6,85,8,"_progress"],[90,15,85,17],[91,6,85,19,"_uploadProgress"],[91,21,85,34],[92,6,85,36,"_stateChange"],[92,18,85,48],[93,4,87,4],[93,12,87,12,"method"],[93,18,87,18],[93,19,87,19,"toLowerCase"],[93,30,87,30],[93,31,87,31],[93,32,87,32],[94,6,89,8],[94,11,89,13],[94,17,89,19],[95,8,90,12],[96,6,92,8],[96,11,92,13],[96,16,92,18],[97,8,93,12],[99,6,95,8],[100,6,96,8],[101,8,97,12,"promise"],[101,15,97,19],[101,18,97,22,"fs"],[101,29,97,24],[101,30,97,25,"stat"],[101,34,97,29],[101,35,97,30,"url"],[101,38,97,33],[101,39,97,34],[101,40,98,17,"then"],[101,44,98,21],[101,45,98,22],[101,55,98,23,"stat"],[101,59,98,27],[101,61,98,32],[102,10,99,20,"total"],[102,15,99,25],[102,18,99,28,"stat"],[102,22,99,32],[102,23,99,33,"size"],[102,27,99,37],[103,10,100,20],[103,17,100,27,"fs"],[103,28,100,29],[103,29,100,30,"readStream"],[103,39,100,40],[103,40,100,41,"url"],[103,43,100,44],[103,45,101,24,"headers"],[103,52,101,31],[103,53,101,32,"encoding"],[103,61,101,40],[103,65,101,44],[103,71,101,50],[103,73,102,24,"Math"],[103,77,102,28],[103,78,102,29,"floor"],[103,83,102,34],[103,84,102,35,"headers"],[103,91,102,42],[103,92,102,43,"bufferSize"],[103,102,102,53],[103,103,102,54],[103,107,102,58],[103,113,102,64],[103,115,103,24,"Math"],[103,119,103,28],[103,120,103,29,"floor"],[103,125,103,34],[103,126,103,35,"headers"],[103,133,103,42],[103,134,103,43,"interval"],[103,142,103,51],[103,143,103,52],[103,147,103,56],[103,150,104,20],[103,151,104,21],[104,8,105,16],[104,9,105,17],[104,10,105,18],[104,11,106,17,"then"],[104,15,106,21],[104,16,106,22],[104,26,106,23,"stream"],[104,32,106,29],[105,10,106,29],[105,17,106,34],[105,21,106,38,"Promise"],[105,28,106,45],[105,29,106,46],[105,39,106,47,"resolve"],[105,46,106,54],[105,48,106,56,"reject"],[105,54,106,62],[105,56,106,67],[106,12,107,20,"stream"],[106,18,107,26],[106,19,107,27,"open"],[106,23,107,31],[106,24,107,32],[106,25,107,33],[107,12,108,20,"info"],[107,16,108,24],[107,19,108,27],[108,14,109,24,"state"],[108,19,109,29],[108,21,109,31],[108,24,109,34],[109,14,110,24,"headers"],[109,21,110,31],[109,23,110,33],[110,16,110,34],[110,24,110,42],[110,26,110,44],[111,14,110,55],[111,15,110,56],[112,14,111,24,"status"],[112,20,111,30],[112,22,111,32],[112,25,111,35],[113,14,112,24,"respType"],[113,22,112,32],[113,24,112,34],[113,30,112,40],[114,14,113,24,"rnfbEncode"],[114,24,113,34],[114,26,113,36,"headers"],[114,33,113,43],[114,34,113,44,"encoding"],[114,42,113,52],[114,46,113,56],[115,12,114,20],[115,13,114,21],[116,12,115,20,"_stateChange"],[116,24,115,32],[116,25,115,33,"info"],[116,29,115,37],[116,30,115,38],[117,12,116,20,"stream"],[117,18,116,26],[117,19,116,27,"onData"],[117,25,116,33],[117,26,116,34],[117,36,116,35,"chunk"],[117,41,116,40],[117,43,116,45],[118,14,117,24,"_progress"],[118,23,117,33],[118,27,117,37,"_progress"],[118,36,117,46],[118,37,117,47,"cursor"],[118,43,117,53],[118,45,117,55,"total"],[118,50,117,60],[118,52,117,62,"chunk"],[118,57,117,67],[118,58,117,68],[119,14,118,24],[119,18,118,28,"headers"],[119,25,118,35],[119,26,118,36,"noCache"],[119,33,118,43],[119,35,119,28],[120,14,120,24,"cacheData"],[120,23,120,33],[120,27,120,37,"chunk"],[120,32,120,42],[121,12,121,20],[121,13,121,21],[121,14,121,22],[122,12,122,20,"stream"],[122,18,122,26],[122,19,122,27,"onError"],[122,26,122,34],[122,27,122,35],[122,37,122,36,"err"],[122,40,122,39],[122,42,122,44],[123,14,123,24,"reject"],[123,20,123,30],[123,21,123,31,"err"],[123,24,123,34],[123,25,123,35],[124,12,124,20],[124,13,124,21],[124,14,124,22],[125,12,125,20,"stream"],[125,18,125,26],[125,19,125,27,"onEnd"],[125,24,125,32],[125,25,125,33],[125,37,125,39],[126,14,126,24,"resolve"],[126,21,126,31],[126,22,126,32],[126,27,126,36,"FetchBlobResponse"],[126,57,126,36],[126,58,126,36,"FetchBlobResponse"],[126,118,126,53],[126,120,126,54],[126,124,126,58],[126,126,126,60,"info"],[126,130,126,64],[126,132,126,66,"cacheData"],[126,141,126,75],[126,142,126,76],[126,143,126,77],[127,12,127,20],[127,13,127,21],[127,14,127,22],[128,10,128,16],[128,11,128,17],[128,12,128,18],[129,8,128,18],[129,10,128,19],[130,8,129,12],[131,4,130,4],[132,4,132,4,"promise"],[132,11,132,11],[132,12,132,12,"progress"],[132,20,132,20],[132,23,132,23],[132,33,132,24,"fn"],[132,35,132,26],[132,37,132,31],[133,6,133,8,"_progress"],[133,15,133,17],[133,18,133,20,"fn"],[133,20,133,22],[134,6,134,8],[134,13,134,15,"promise"],[134,20,134,22],[135,4,135,4],[135,5,135,5],[136,4,136,4,"promise"],[136,11,136,11],[136,12,136,12,"stateChange"],[136,23,136,23],[136,26,136,26],[136,36,136,27,"fn"],[136,38,136,29],[136,40,136,34],[137,6,137,8,"_stateChange"],[137,18,137,20],[137,21,137,23,"fn"],[137,23,137,25],[138,6,138,8],[138,13,138,15,"promise"],[138,20,138,22],[139,4,139,4],[139,5,139,5],[140,4,140,4,"promise"],[140,11,140,11],[140,12,140,12,"uploadProgress"],[140,26,140,26],[140,29,140,29],[140,39,140,30,"fn"],[140,41,140,32],[140,43,140,37],[141,6,141,8,"_uploadProgress"],[141,21,141,23],[141,24,141,26,"fn"],[141,26,141,28],[142,6,142,8],[142,13,142,15,"promise"],[142,20,142,22],[143,4,143,4],[143,5,143,5],[144,4,145,4],[144,11,145,11,"promise"],[144,18,145,18],[145,2,146,0],[147,2,148,0],[148,0,149,0],[149,0,150,0],[150,0,151,0],[151,0,152,0],[152,0,153,0],[153,0,154,0],[154,0,155,0],[155,0,156,0],[156,0,157,0],[157,0,158,0],[158,0,159,0],[159,2,160,7],[159,11,160,16,"fetch"],[159,16,160,21,"fetch"],[159,17,160,21],[159,19,160,45],[160,4,162,4],[161,4,163,4],[161,8,163,8,"taskId"],[161,14,163,14],[161,17,163,17],[161,21,163,17,"getUUID"],[161,34,163,24],[161,36,163,25],[161,37,163,26],[162,4,164,4],[162,8,164,8,"options"],[162,15,164,15],[162,18,164,18],[162,22,164,22],[162,26,164,26],[162,27,164,27],[162,28,164,28],[163,4,165,4],[163,8,165,8,"subscription"],[163,20,165,20],[163,22,165,22,"subscriptionUpload"],[163,40,165,40],[163,42,165,42,"stateEvent"],[163,52,165,52],[163,54,165,54,"partEvent"],[163,63,165,63],[164,4,166,4],[164,8,166,8,"respInfo"],[164,16,166,16],[164,19,166,19],[165,6,166,20],[165,14,166,28],[165,16,166,30],[166,4,166,34],[166,5,166,35],[167,4,166,36],[167,13,166,36,"_len"],[167,17,166,36],[167,20,166,36,"arguments"],[167,29,166,36],[167,30,166,36,"length"],[167,36,166,36],[167,38,160,25,"args"],[167,42,160,29],[167,49,160,29,"Array"],[167,54,160,29],[167,55,160,29,"_len"],[167,59,160,29],[167,62,160,29,"_key"],[167,66,160,29],[167,72,160,29,"_key"],[167,76,160,29],[167,79,160,29,"_len"],[167,83,160,29],[167,85,160,29,"_key"],[167,89,160,29],[168,6,160,25,"args"],[168,10,160,29],[168,11,160,29,"_key"],[168,15,160,29],[168,19,160,29,"arguments"],[168,28,160,29],[168,29,160,29,"_key"],[168,33,160,29],[169,4,160,29],[170,4,167,4],[170,8,167,4,"_ref"],[170,12,167,4],[170,18,167,4,"concat"],[170,24,167,4],[170,25,167,43,"args"],[170,29,167,47],[171,6,167,9,"method"],[171,12,167,15],[171,15,167,15,"_ref"],[171,19,167,15],[172,6,167,17,"url"],[172,9,167,20],[172,12,167,20,"_ref"],[172,16,167,20],[173,6,167,22,"headers"],[173,13,167,29],[173,16,167,29,"_ref"],[173,20,167,29],[174,6,167,31,"body"],[174,10,167,35],[174,13,167,35,"_ref"],[174,17,167,35],[176,4,169,4],[177,4,170,4],[178,4,171,4,"headers"],[178,11,171,11],[178,14,171,14,"headers"],[178,21,171,21],[178,25,171,25,"Object"],[178,31,171,31],[178,32,171,32,"keys"],[178,36,171,36],[178,37,171,37,"headers"],[178,44,171,44],[178,45,171,45],[178,46,171,46,"reduce"],[178,52,171,52],[178,53,171,53],[178,63,171,54,"result"],[178,69,171,60],[178,71,171,62,"key"],[178,74,171,65],[178,76,171,70],[179,6,172,8,"result"],[179,12,172,14],[179,13,172,15,"key"],[179,16,172,18],[179,17,172,19],[179,20,172,22,"headers"],[179,27,172,29],[179,28,172,30,"key"],[179,31,172,33],[179,32,172,34],[179,36,172,38],[179,38,172,40],[180,6,173,8],[180,13,173,15,"result"],[180,19,173,21],[181,4,174,4],[181,5,174,5],[181,7,174,7],[181,8,174,8],[181,9,174,9],[181,10,174,10],[183,4,176,4],[184,4,177,4],[184,8,177,8,"URIUtil"],[184,20,177,15],[184,21,177,16,"isFileURI"],[184,30,177,25],[184,31,177,26,"url"],[184,34,177,29],[184,35,177,30],[184,37,177,32],[185,6,178,8],[185,13,178,15,"fetchFile"],[185,22,178,24],[185,23,178,25,"options"],[185,30,178,32],[185,32,178,34,"method"],[185,38,178,40],[185,40,178,42,"url"],[185,43,178,45],[185,45,178,47,"headers"],[185,52,178,54],[185,54,178,56,"body"],[185,58,178,60],[185,59,178,61],[186,4,179,4],[187,4,181,4],[187,8,181,8,"promiseResolve"],[187,22,181,22],[188,4,182,4],[188,8,182,8,"promiseReject"],[188,21,182,21],[190,4,184,4],[191,4,185,4],[191,8,185,8,"promise"],[191,15,185,15],[191,18,185,18],[191,22,185,22,"Promise"],[191,29,185,29],[191,30,185,30],[191,40,185,31,"resolve"],[191,47,185,38],[191,49,185,40,"reject"],[191,55,185,46],[191,57,185,51],[192,6,186,8,"promiseResolve"],[192,20,186,22],[192,23,186,25,"resolve"],[192,30,186,32],[193,6,187,8,"promiseReject"],[193,19,187,21],[193,22,187,24,"reject"],[193,28,187,30],[194,6,189,8],[194,10,189,12,"nativeMethodName"],[194,26,189,28],[194,29,189,31,"Array"],[194,34,189,36],[194,35,189,37,"isArray"],[194,42,189,44],[194,43,189,45,"body"],[194,47,189,49],[194,48,189,50],[194,51,189,53],[194,66,189,68],[194,69,189,71],[194,80,189,82],[196,6,191,8],[197,6,192,8,"subscription"],[197,18,192,20],[197,21,192,23,"eventEmitter"],[197,33,192,35],[197,34,192,36,"addListener"],[197,45,192,47],[197,46,192,48],[197,75,192,77],[197,77,192,79],[197,87,192,80,"e"],[197,88,192,81],[197,90,192,86],[198,8,193,12],[198,12,193,16],[198,19,193,23,"e"],[198,20,193,24],[198,25,193,29],[198,33,193,37],[198,35,193,39,"e"],[198,36,193,40],[198,39,193,43,"JSON"],[198,43,193,47],[198,44,193,48,"parse"],[198,49,193,53],[198,50,193,54,"e"],[198,51,193,55],[198,52,193,56],[199,8,194,12],[199,12,194,16,"e"],[199,13,194,17],[199,14,194,18,"taskId"],[199,20,194,24],[199,25,194,29,"taskId"],[199,31,194,35],[199,35,194,39,"promise"],[199,42,194,46],[199,43,194,47,"onProgress"],[199,53,194,57],[199,55,194,59],[200,10,195,16,"promise"],[200,17,195,23],[200,18,195,24,"onProgress"],[200,28,195,34],[200,29,195,35,"e"],[200,30,195,36],[200,31,195,37,"written"],[200,38,195,44],[200,40,195,46,"e"],[200,41,195,47],[200,42,195,48,"total"],[200,47,195,53],[200,49,195,55,"e"],[200,50,195,56],[200,51,195,57,"chunk"],[200,56,195,62],[200,57,195,63],[201,8,196,12],[202,6,197,8],[202,7,197,9],[202,8,197,10],[203,6,199,8,"subscriptionUpload"],[203,24,199,26],[203,27,199,29,"eventEmitter"],[203,39,199,41],[203,40,199,42,"addListener"],[203,51,199,53],[203,52,199,54],[203,88,199,90],[203,90,199,92],[203,100,199,93,"e"],[203,101,199,94],[203,103,199,99],[204,8,200,12],[204,12,200,16],[204,19,200,23,"e"],[204,20,200,24],[204,25,200,29],[204,33,200,37],[204,35,200,39,"e"],[204,36,200,40],[204,39,200,43,"JSON"],[204,43,200,47],[204,44,200,48,"parse"],[204,49,200,53],[204,50,200,54,"e"],[204,51,200,55],[204,52,200,56],[205,8,201,12],[205,12,201,16,"e"],[205,13,201,17],[205,14,201,18,"taskId"],[205,20,201,24],[205,25,201,29,"taskId"],[205,31,201,35],[205,35,201,39,"promise"],[205,42,201,46],[205,43,201,47,"onUploadProgress"],[205,59,201,63],[205,61,201,65],[206,10,202,16,"promise"],[206,17,202,23],[206,18,202,24,"onUploadProgress"],[206,34,202,40],[206,35,202,41,"e"],[206,36,202,42],[206,37,202,43,"written"],[206,44,202,50],[206,46,202,52,"e"],[206,47,202,53],[206,48,202,54,"total"],[206,53,202,59],[206,54,202,60],[207,8,203,12],[208,6,204,8],[208,7,204,9],[208,8,204,10],[209,6,206,8,"stateEvent"],[209,16,206,18],[209,19,206,21,"eventEmitter"],[209,31,206,33],[209,32,206,34,"addListener"],[209,43,206,45],[209,44,206,46],[209,70,206,72],[209,72,206,74],[209,82,206,75,"e"],[209,83,206,76],[209,85,206,81],[210,8,207,12],[210,12,207,16],[210,19,207,23,"e"],[210,20,207,24],[210,25,207,29],[210,33,207,37],[210,35,207,39,"e"],[210,36,207,40],[210,39,207,43,"JSON"],[210,43,207,47],[210,44,207,48,"parse"],[210,49,207,53],[210,50,207,54,"e"],[210,51,207,55],[210,52,207,56],[211,8,208,12],[211,12,208,16,"e"],[211,13,208,17],[211,14,208,18,"taskId"],[211,20,208,24],[211,25,208,29,"taskId"],[211,31,208,35],[211,33,209,16,"respInfo"],[211,41,209,24],[211,44,209,27,"e"],[211,45,209,28],[212,8,210,12,"promise"],[212,15,210,19],[212,16,210,20,"onStateChange"],[212,29,210,33],[212,33,210,37,"promise"],[212,40,210,44],[212,41,210,45,"onStateChange"],[212,54,210,58],[212,55,210,59,"e"],[212,56,210,60],[212,57,210,61],[213,6,211,8],[213,7,211,9],[213,8,211,10],[214,6,213,8,"subscription"],[214,18,213,20],[214,21,213,23,"eventEmitter"],[214,33,213,35],[214,34,213,36,"addListener"],[214,45,213,47],[214,46,213,48],[214,73,213,75],[214,75,213,77],[214,85,213,78,"e"],[214,86,213,79],[214,88,213,84],[215,8,214,12],[215,12,214,16],[215,19,214,23,"e"],[215,20,214,24],[215,25,214,29],[215,33,214,37],[215,35,214,39,"e"],[215,36,214,40],[215,39,214,43,"JSON"],[215,43,214,47],[215,44,214,48,"parse"],[215,49,214,53],[215,50,214,54,"e"],[215,51,214,55],[215,52,214,56],[216,8,215,12],[216,12,215,16,"e"],[216,13,215,17],[216,14,215,18,"taskId"],[216,20,215,24],[216,25,215,29,"taskId"],[216,31,215,35],[216,35,215,39,"promise"],[216,42,215,46],[216,43,215,47,"onExpire"],[216,51,215,55],[216,53,215,57],[217,10,216,16,"promise"],[217,17,216,23],[217,18,216,24,"onExpire"],[217,26,216,32],[217,27,216,33,"e"],[217,28,216,34],[217,29,216,35],[218,8,217,12],[219,6,218,8],[219,7,218,9],[219,8,218,10],[220,6,220,8,"partEvent"],[220,15,220,17],[220,18,220,20,"eventEmitter"],[220,30,220,32],[220,31,220,33,"addListener"],[220,42,220,44],[220,43,220,45],[220,74,220,76],[220,76,220,78],[220,86,220,79,"e"],[220,87,220,80],[220,89,220,85],[221,8,221,12],[221,12,221,16],[221,19,221,23,"e"],[221,20,221,24],[221,25,221,29],[221,33,221,37],[221,35,221,39,"e"],[221,36,221,40],[221,39,221,43,"JSON"],[221,43,221,47],[221,44,221,48,"parse"],[221,49,221,53],[221,50,221,54,"e"],[221,51,221,55],[221,52,221,56],[222,8,222,12],[222,12,222,16,"e"],[222,13,222,17],[222,14,222,18,"taskId"],[222,20,222,24],[222,25,222,29,"taskId"],[222,31,222,35],[222,35,222,39,"promise"],[222,42,222,46],[222,43,222,47,"onPartData"],[222,53,222,57],[222,55,222,59],[223,10,223,16,"promise"],[223,17,223,23],[223,18,223,24,"onPartData"],[223,28,223,34],[223,29,223,35,"e"],[223,30,223,36],[223,31,223,37,"chunk"],[223,36,223,42],[223,37,223,43],[224,8,224,12],[225,6,225,8],[225,7,225,9],[225,8,225,10],[227,6,227,8],[228,6,228,8],[229,6,229,8],[229,10,229,12,"body"],[229,14,229,16],[229,26,229,28,"Blob"],[229,30,229,32],[229,34,229,36,"body"],[229,38,229,40],[229,39,229,41,"isReactNativeBlobUtilPolyfill"],[229,68,229,70],[229,70,229,72],[230,8,230,12,"body"],[230,12,230,16],[230,15,230,19,"body"],[230,19,230,23],[230,20,230,24,"getReactNativeBlobUtilRef"],[230,45,230,49],[230,46,230,50],[230,47,230,51],[231,6,231,8],[232,6,233,8],[232,10,233,12,"req"],[232,13,233,15],[232,16,233,18,"ReactNativeBlobUtil"],[232,40,233,37],[232,41,233,38,"nativeMethodName"],[232,57,233,54],[232,58,233,55],[234,6,235,8],[235,0,236,0],[236,0,237,0],[237,0,238,0],[238,0,239,0],[239,0,240,0],[240,0,241,0],[241,0,242,0],[242,0,243,0],[243,0,244,0],[244,0,245,0],[245,0,246,0],[246,6,247,8,"req"],[246,9,247,11],[246,10,247,12,"options"],[246,17,247,19],[246,19,247,21,"taskId"],[246,25,247,27],[246,27,247,29,"method"],[246,33,247,35],[246,35,247,37,"url"],[246,38,247,40],[246,40,247,42,"headers"],[246,47,247,49],[246,51,247,53],[246,52,247,54],[246,53,247,55],[246,55,247,57,"body"],[246,59,247,61],[246,61,247,63],[246,71,247,64,"err"],[246,74,247,67],[246,76,247,69,"rawType"],[246,83,247,76],[246,85,247,78,"data"],[246,89,247,82],[246,91,247,84,"responseInfo"],[246,103,247,96],[246,105,247,101],[247,8,249,12],[248,8,250,12,"subscription"],[248,20,250,24],[248,21,250,25,"remove"],[248,27,250,31],[248,28,250,32],[248,29,250,33],[249,8,251,12,"subscriptionUpload"],[249,26,251,30],[249,27,251,31,"remove"],[249,33,251,37],[249,34,251,38],[249,35,251,39],[250,8,252,12,"stateEvent"],[250,18,252,22],[250,19,252,23,"remove"],[250,25,252,29],[250,26,252,30],[250,27,252,31],[251,8,253,12,"partEvent"],[251,17,253,21],[251,18,253,22,"remove"],[251,24,253,28],[251,25,253,29],[251,26,253,30],[252,8,254,12],[252,15,254,19,"promise"],[252,22,254,26],[252,23,254,27,"progress"],[252,31,254,35],[253,8,255,12],[253,15,255,19,"promise"],[253,22,255,26],[253,23,255,27,"uploadProgress"],[253,37,255,41],[254,8,256,12],[254,15,256,19,"promise"],[254,22,256,26],[254,23,256,27,"stateChange"],[254,34,256,38],[255,8,257,12],[255,15,257,19,"promise"],[255,22,257,26],[255,23,257,27,"part"],[255,27,257,31],[256,8,258,12],[256,15,258,19,"promise"],[256,22,258,26],[256,23,258,27,"cancel"],[256,29,258,33],[257,8,259,12],[258,8,260,12,"promise"],[258,15,260,19],[258,16,260,20,"cancel"],[258,22,260,26],[258,25,260,29],[258,37,260,35],[258,38,261,12],[258,39,261,13],[259,8,263,12],[259,12,263,15],[259,13,263,16,"responseInfo"],[259,25,263,28],[259,27,263,30,"responseInfo"],[259,39,263,42],[259,42,263,45],[259,43,263,46],[259,44,263,47],[259,45,263,48],[259,46,263,49],[261,8,265,12],[261,12,265,16,"err"],[261,15,265,19],[261,17,266,16,"reject"],[261,23,266,22],[261,24,266,23],[261,28,266,27,"Error"],[261,33,266,32],[261,34,266,33,"err"],[261,37,266,36],[261,39,266,38,"respInfo"],[261,47,266,46],[261,48,266,47],[261,49,266,48],[261,50,266,49],[261,55,267,17],[262,10,268,16],[263,10,269,16],[263,14,269,20,"options"],[263,21,269,27],[263,22,269,28,"path"],[263,26,269,32],[263,30,269,36,"options"],[263,37,269,43],[263,38,269,44,"fileCache"],[263,47,269,53],[263,51,269,57,"options"],[263,58,269,64],[263,59,269,65,"addAndroidDownloads"],[263,78,269,84],[263,82,270,23,"options"],[263,89,270,30],[263,90,270,31,"key"],[263,93,270,34],[263,97,270,38,"options"],[263,104,270,45],[263,105,270,46,"auto"],[263,109,270,50],[263,113,270,54,"respInfo"],[263,121,270,62],[263,122,270,63,"respType"],[263,130,270,71],[263,135,270,76],[263,141,270,82],[263,143,270,84],[264,12,271,20],[264,16,271,24,"options"],[264,23,271,31],[264,24,271,32,"session"],[264,31,271,39],[264,33,272,24,"fs"],[264,44,272,26],[264,45,272,27,"session"],[264,52,272,34],[264,53,272,35,"options"],[264,60,272,42],[264,61,272,43,"session"],[264,68,272,50],[264,69,272,51],[264,70,272,52,"add"],[264,73,272,55],[264,74,272,56,"data"],[264,78,272,60],[264,79,272,61],[265,10,273,16],[266,10,274,16],[266,14,274,20],[266,22,274,28],[266,26,274,32,"respInfo"],[266,34,274,40],[266,38,274,44,"respInfo"],[266,46,274,52],[266,47,274,53,"uninit"],[266,53,274,59],[267,12,274,61],[268,12,275,20,"respInfo"],[268,20,275,28],[268,23,275,31,"responseInfo"],[268,35,275,43],[269,10,277,16,"respInfo"],[269,18,277,24],[269,19,277,25,"rnfbEncode"],[269,29,277,35],[269,32,277,38,"rawType"],[269,39,277,45],[270,10,278,16,"resolve"],[270,17,278,23],[270,18,278,24],[270,23,278,28,"FetchBlobResponse"],[270,53,278,28],[270,54,278,28,"FetchBlobResponse"],[270,114,278,45],[270,116,278,46,"taskId"],[270,122,278,52],[270,124,278,54,"respInfo"],[270,132,278,62],[270,134,278,64,"data"],[270,138,278,68],[270,139,278,69],[270,140,278,70],[271,8,279,12],[272,6,281,8],[272,7,281,9],[272,8,281,10],[273,4,283,4],[273,5,283,5],[273,6,283,6],[275,4,285,4],[276,4,286,4],[277,4,287,4],[278,4,288,4],[279,4,289,4],[280,4,290,4],[281,4,291,4,"promise"],[281,11,291,11],[281,12,291,12,"progress"],[281,20,291,20],[281,23,291,23],[281,35,291,36],[282,6,292,8],[282,10,292,12,"interval"],[282,18,292,20],[282,21,292,23],[282,24,292,26],[283,6,293,8],[283,10,293,12,"count"],[283,15,293,17],[283,18,293,20],[283,19,293,21],[283,20,293,22],[284,6,294,8],[284,10,294,12,"fn"],[284,12,294,14],[284,15,294,17],[284,24,294,12,"fn"],[284,26,294,14,"fn"],[284,27,294,14],[284,29,294,23],[284,30,295,8],[284,31,295,9],[285,6,295,10],[285,15,295,10,"_len2"],[285,20,295,10],[285,23,295,10,"arguments"],[285,32,295,10],[285,33,295,10,"length"],[285,39,295,10],[285,41,291,27,"args"],[285,45,291,31],[285,52,291,31,"Array"],[285,57,291,31],[285,58,291,31,"_len2"],[285,63,291,31],[285,66,291,31,"_key2"],[285,71,291,31],[285,77,291,31,"_key2"],[285,82,291,31],[285,85,291,31,"_len2"],[285,90,291,31],[285,92,291,31,"_key2"],[285,97,291,31],[286,8,291,27,"args"],[286,12,291,31],[286,13,291,31,"_key2"],[286,18,291,31],[286,22,291,31,"arguments"],[286,31,291,31],[286,32,291,31,"_key2"],[286,37,291,31],[287,6,291,31],[288,6,296,8],[288,10,296,12,"args"],[288,14,296,16],[288,15,296,17,"length"],[288,21,296,23],[288,26,296,28],[288,27,296,29],[288,29,296,31],[289,8,297,12,"interval"],[289,16,297,20],[289,19,297,23,"args"],[289,23,297,27],[289,24,297,28],[289,25,297,29],[289,26,297,30],[289,27,297,31,"interval"],[289,35,297,39],[289,39,297,43,"interval"],[289,47,297,51],[290,8,298,12,"count"],[290,13,298,17],[290,16,298,20,"args"],[290,20,298,24],[290,21,298,25],[290,22,298,26],[290,23,298,27],[290,24,298,28,"count"],[290,29,298,33],[290,33,298,37,"count"],[290,38,298,42],[291,8,299,12,"fn"],[291,10,299,14],[291,13,299,17,"args"],[291,17,299,21],[291,18,299,22],[291,19,299,23],[291,20,299,24],[292,6,300,8],[292,7,300,9],[292,13,301,13],[293,8,302,12,"fn"],[293,10,302,14],[293,13,302,17,"args"],[293,17,302,21],[293,18,302,22],[293,19,302,23],[293,20,302,24],[294,6,303,8],[295,6,304,8,"promise"],[295,13,304,15],[295,14,304,16,"onProgress"],[295,24,304,26],[295,27,304,29,"fn"],[295,29,304,31],[296,6,305,8,"ReactNativeBlobUtil"],[296,30,305,27],[296,31,305,28,"enableProgressReport"],[296,51,305,48],[296,52,305,49,"taskId"],[296,58,305,55],[296,60,305,57,"interval"],[296,68,305,65],[296,70,305,67,"count"],[296,75,305,72],[296,76,305,73],[297,6,306,8],[297,13,306,15,"promise"],[297,20,306,22],[298,4,307,4],[298,5,307,5],[299,4,308,4,"promise"],[299,11,308,11],[299,12,308,12,"uploadProgress"],[299,26,308,26],[299,29,308,29],[299,41,308,42],[300,6,309,8],[300,10,309,12,"interval"],[300,18,309,20],[300,21,309,23],[300,24,309,26],[301,6,310,8],[301,10,310,12,"count"],[301,15,310,17],[301,18,310,20],[301,19,310,21],[301,20,310,22],[302,6,311,8],[302,10,311,12,"fn"],[302,12,311,14],[302,15,311,17],[302,24,311,12,"fn"],[302,26,311,14,"fn"],[302,27,311,14],[302,29,311,23],[302,30,312,8],[302,31,312,9],[303,6,312,10],[303,15,312,10,"_len3"],[303,20,312,10],[303,23,312,10,"arguments"],[303,32,312,10],[303,33,312,10,"length"],[303,39,312,10],[303,41,308,33,"args"],[303,45,308,37],[303,52,308,37,"Array"],[303,57,308,37],[303,58,308,37,"_len3"],[303,63,308,37],[303,66,308,37,"_key3"],[303,71,308,37],[303,77,308,37,"_key3"],[303,82,308,37],[303,85,308,37,"_len3"],[303,90,308,37],[303,92,308,37,"_key3"],[303,97,308,37],[304,8,308,33,"args"],[304,12,308,37],[304,13,308,37,"_key3"],[304,18,308,37],[304,22,308,37,"arguments"],[304,31,308,37],[304,32,308,37,"_key3"],[304,37,308,37],[305,6,308,37],[306,6,313,8],[306,10,313,12,"args"],[306,14,313,16],[306,15,313,17,"length"],[306,21,313,23],[306,26,313,28],[306,27,313,29],[306,29,313,31],[307,8,314,12,"interval"],[307,16,314,20],[307,19,314,23,"args"],[307,23,314,27],[307,24,314,28],[307,25,314,29],[307,26,314,30],[307,27,314,31,"interval"],[307,35,314,39],[307,39,314,43,"interval"],[307,47,314,51],[308,8,315,12,"count"],[308,13,315,17],[308,16,315,20,"args"],[308,20,315,24],[308,21,315,25],[308,22,315,26],[308,23,315,27],[308,24,315,28,"count"],[308,29,315,33],[308,33,315,37,"count"],[308,38,315,42],[309,8,316,12,"fn"],[309,10,316,14],[309,13,316,17,"args"],[309,17,316,21],[309,18,316,22],[309,19,316,23],[309,20,316,24],[310,6,317,8],[310,7,317,9],[310,13,318,13],[311,8,319,12,"fn"],[311,10,319,14],[311,13,319,17,"args"],[311,17,319,21],[311,18,319,22],[311,19,319,23],[311,20,319,24],[312,6,320,8],[313,6,321,8,"promise"],[313,13,321,15],[313,14,321,16,"onUploadProgress"],[313,30,321,32],[313,33,321,35,"fn"],[313,35,321,37],[314,6,322,8,"ReactNativeBlobUtil"],[314,30,322,27],[314,31,322,28,"enableUploadProgressReport"],[314,57,322,54],[314,58,322,55,"taskId"],[314,64,322,61],[314,66,322,63,"interval"],[314,74,322,71],[314,76,322,73,"count"],[314,81,322,78],[314,82,322,79],[315,6,323,8],[315,13,323,15,"promise"],[315,20,323,22],[316,4,324,4],[316,5,324,5],[317,4,325,4,"promise"],[317,11,325,11],[317,12,325,12,"part"],[317,16,325,16],[317,19,325,19],[317,29,325,20,"fn"],[317,31,325,22],[317,33,325,27],[318,6,326,8,"promise"],[318,13,326,15],[318,14,326,16,"onPartData"],[318,24,326,26],[318,27,326,29,"fn"],[318,29,326,31],[319,6,327,8],[319,13,327,15,"promise"],[319,20,327,22],[320,4,328,4],[320,5,328,5],[321,4,329,4,"promise"],[321,11,329,11],[321,12,329,12,"stateChange"],[321,23,329,23],[321,26,329,26],[321,36,329,27,"fn"],[321,38,329,29],[321,40,329,34],[322,6,330,8,"promise"],[322,13,330,15],[322,14,330,16,"onStateChange"],[322,27,330,29],[322,30,330,32,"fn"],[322,32,330,34],[323,6,331,8],[323,13,331,15,"promise"],[323,20,331,22],[324,4,332,4],[324,5,332,5],[325,4,333,4,"promise"],[325,11,333,11],[325,12,333,12,"expire"],[325,18,333,18],[325,21,333,21],[325,31,333,22,"fn"],[325,33,333,24],[325,35,333,29],[326,6,334,8,"promise"],[326,13,334,15],[326,14,334,16,"onExpire"],[326,22,334,24],[326,25,334,27,"fn"],[326,27,334,29],[327,6,335,8],[327,13,335,15,"promise"],[327,20,335,22],[328,4,336,4],[328,5,336,5],[329,4,337,4,"promise"],[329,11,337,11],[329,12,337,12,"cancel"],[329,18,337,18],[329,21,337,21],[329,31,337,22,"fn"],[329,33,337,24],[329,35,337,29],[330,6,338,8,"fn"],[330,8,338,10],[330,11,338,13,"fn"],[330,13,338,15],[330,17,338,19],[330,29,338,31],[330,30,339,8],[330,31,339,9],[331,6,340,8,"subscription"],[331,18,340,20],[331,19,340,21,"remove"],[331,25,340,27],[331,26,340,28],[331,27,340,29],[332,6,341,8,"subscriptionUpload"],[332,24,341,26],[332,25,341,27,"remove"],[332,31,341,33],[332,32,341,34],[332,33,341,35],[333,6,342,8,"stateEvent"],[333,16,342,18],[333,17,342,19,"remove"],[333,23,342,25],[333,24,342,26],[333,25,342,27],[334,6,343,8,"ReactNativeBlobUtil"],[334,30,343,27],[334,31,343,28,"cancelRequest"],[334,44,343,41],[334,45,343,42,"taskId"],[334,51,343,48],[334,53,343,50,"fn"],[334,55,343,52],[334,56,343,53],[335,6,344,8,"promiseReject"],[335,19,344,21],[335,20,344,22],[335,24,344,26,"CanceledFetchError"],[335,70,344,44],[335,71,344,45],[335,81,344,55],[335,82,344,56],[335,83,344,57],[336,4,345,4],[336,5,345,5],[337,4,346,4,"promise"],[337,11,346,11],[337,12,346,12,"taskId"],[337,18,346,18],[337,21,346,21,"taskId"],[337,27,346,27],[338,4,348,4],[338,11,348,11,"promise"],[338,18,348,18],[339,2,350,0],[340,0,350,1],[340,3]],"functionMap":{"names":["<global>","eventEmitter.addListener$argument_1","config","fetchFile","fs.stat.then$argument_0","fs.stat.then.then$argument_0","Promise$argument_0","stream.onData$argument_0","stream.onError$argument_0","stream.onEnd$argument_0","promise.progress","promise.stateChange","promise.uploadProgress","fetch","Object.keys.reduce$argument_0","req$argument_6","promise.cancel","fn","promise.part","promise.expire","<anonymous>"],"mappings":"AAA;uDCY;CDY;OEkC;CFE;AGW;sBC0B;iBDO;sBEC,wBC;kCCU;qBDK;mCEC;qBFE;iCGC;qBHE;iBDC,CF;uBOI;KPG;0BQC;KRG;6BSC;KTG;CHG;Oac;qDCW;KDG;8BPW;+ELO;SKK;4FLE;SKK;0ELE;SKK;6ELE;SKK;8ELE;SKK;+DSsB;6BCa;aDC;SToB;KOE;uBHQ;iBOG;SPC;KGY;6BDC;iBKG;SLC;KCY;mBKC;KLG;0BFC;KEG;qBMC;KNG;qBGC;mBIC;SJC;KHM;CbK"}},"type":"js/module"}]}