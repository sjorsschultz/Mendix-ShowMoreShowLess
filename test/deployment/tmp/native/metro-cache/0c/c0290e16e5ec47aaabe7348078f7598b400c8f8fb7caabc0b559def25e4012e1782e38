{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nanoid = exports.customAlphabet = void 0;\n  // This alphabet uses `A-Za-z0-9_-` symbols.\n  // The order of characters is optimized for better gzip and brotli compression.\n  // References to the same file (works both for gzip and brotli):\n  // `'use`, `andom`, and `rict'`\n  // References to the brotli default dictionary:\n  // `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\n  var urlAlphabet = 'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict';\n  var customAlphabet = exports.customAlphabet = function customAlphabet(alphabet) {\n    var defaultSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 21;\n    return function () {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSize;\n      var id = '';\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      var i = size | 0;\n      while (i--) {\n        // `| 0` is more compact and faster than `Math.floor()`.\n        id += alphabet[Math.random() * alphabet.length | 0];\n      }\n      return id;\n    };\n  };\n  var nanoid = exports.nanoid = function nanoid() {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 21;\n    var id = '';\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    var i = size | 0;\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += urlAlphabet[Math.random() * 64 | 0];\n    }\n    return id;\n  };\n});","lineCount":38,"map":[[6,2,1,0],[7,2,2,0],[8,2,3,0],[9,2,4,0],[10,2,5,0],[11,2,6,0],[12,2,7,0],[12,6,7,4,"urlAlphabet"],[12,17,7,15],[12,20,8,2],[12,86,8,68],[13,2,10,0],[13,6,10,4,"customAlphabet"],[13,20,10,18],[13,23,10,18,"exports"],[13,30,10,18],[13,31,10,18,"customAlphabet"],[13,45,10,18],[13,48,10,21],[13,57,10,4,"customAlphabet"],[13,71,10,18,"customAlphabet"],[13,72,10,22,"alphabet"],[13,80,10,30],[13,82,10,53],[14,4,10,53],[14,8,10,32,"defaultSize"],[14,19,10,43],[14,22,10,43,"arguments"],[14,31,10,43],[14,32,10,43,"length"],[14,38,10,43],[14,46,10,43,"arguments"],[14,55,10,43],[14,63,10,43,"undefined"],[14,72,10,43],[14,75,10,43,"arguments"],[14,84,10,43],[14,90,10,46],[14,92,10,48],[15,4,11,2],[15,11,11,9],[15,23,11,33],[16,6,11,33],[16,10,11,10,"size"],[16,14,11,14],[16,17,11,14,"arguments"],[16,26,11,14],[16,27,11,14,"length"],[16,33,11,14],[16,41,11,14,"arguments"],[16,50,11,14],[16,58,11,14,"undefined"],[16,67,11,14],[16,70,11,14,"arguments"],[16,79,11,14],[16,85,11,17,"defaultSize"],[16,96,11,28],[17,6,12,4],[17,10,12,8,"id"],[17,12,12,10],[17,15,12,13],[17,17,12,15],[18,6,13,4],[19,6,14,4],[19,10,14,8,"i"],[19,11,14,9],[19,14,14,12,"size"],[19,18,14,16],[19,21,14,19],[19,22,14,20],[20,6,15,4],[20,13,15,11,"i"],[20,14,15,12],[20,16,15,14],[20,18,15,16],[21,8,16,6],[22,8,17,6,"id"],[22,10,17,8],[22,14,17,12,"alphabet"],[22,22,17,20],[22,23,17,22,"Math"],[22,27,17,26],[22,28,17,27,"random"],[22,34,17,33],[22,35,17,34],[22,36,17,35],[22,39,17,38,"alphabet"],[22,47,17,46],[22,48,17,47,"length"],[22,54,17,53],[22,57,17,57],[22,58,17,58],[22,59,17,59],[23,6,18,4],[24,6,19,4],[24,13,19,11,"id"],[24,15,19,13],[25,4,20,2],[25,5,20,3],[26,2,21,0],[26,3,21,1],[27,2,23,0],[27,6,23,4,"nanoid"],[27,12,23,10],[27,15,23,10,"exports"],[27,22,23,10],[27,23,23,10,"nanoid"],[27,29,23,10],[27,32,23,13],[27,41,23,4,"nanoid"],[27,47,23,10,"nanoid"],[27,48,23,10],[27,50,23,28],[28,4,23,28],[28,8,23,14,"size"],[28,12,23,18],[28,15,23,18,"arguments"],[28,24,23,18],[28,25,23,18,"length"],[28,31,23,18],[28,39,23,18,"arguments"],[28,48,23,18],[28,56,23,18,"undefined"],[28,65,23,18],[28,68,23,18,"arguments"],[28,77,23,18],[28,83,23,21],[28,85,23,23],[29,4,24,2],[29,8,24,6,"id"],[29,10,24,8],[29,13,24,11],[29,15,24,13],[30,4,25,2],[31,4,26,2],[31,8,26,6,"i"],[31,9,26,7],[31,12,26,10,"size"],[31,16,26,14],[31,19,26,17],[31,20,26,18],[32,4,27,2],[32,11,27,9,"i"],[32,12,27,10],[32,14,27,12],[32,16,27,14],[33,6,28,4],[34,6,29,4,"id"],[34,8,29,6],[34,12,29,10,"urlAlphabet"],[34,23,29,21],[34,24,29,23,"Math"],[34,28,29,27],[34,29,29,28,"random"],[34,35,29,34],[34,36,29,35],[34,37,29,36],[34,40,29,39],[34,42,29,41],[34,45,29,45],[34,46,29,46],[34,47,29,47],[35,4,30,2],[36,4,31,2],[36,11,31,9,"id"],[36,13,31,11],[37,2,32,0],[37,3,32,1],[38,0,32,1],[38,3]],"functionMap":{"names":["<global>","customAlphabet","<anonymous>","nanoid"],"mappings":"AAA;qBCS;SCC;GDS;CDC;aGE;CHS"}},"type":"js/module"}]}