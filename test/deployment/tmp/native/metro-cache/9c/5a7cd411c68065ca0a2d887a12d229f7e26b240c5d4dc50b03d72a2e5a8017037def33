{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":359,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":359,"column":1}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":359,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":359,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./specs/NativeDOM","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0},"end":{"line":21,"column":42}}],"key":"9AthY4AxLdDxCbVd7pMFoUw/FmE="}},{"name":"../oldstylecollections/NodeList","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":63}}],"key":"g5jmir8Q4+ANSEdKwIJy+zXvD+0="}},{"name":"./ReadOnlyElement","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":110,"column":29},"end":{"line":110,"column":57}}],"key":"zI0KNLDwEK2Wax54FqFoyWdYCCs="}},{"name":"../../../../../Libraries/ReactNative/RendererProxy","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":307,"column":24},"end":{"line":307,"column":85}},{"start":{"line":354,"column":24},"end":{"line":354,"column":85}}],"key":"U5eAE49qQ10LV20O9yUXABQK+zM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getChildNodes = getChildNodes;\n  exports.getInstanceHandle = getInstanceHandle;\n  exports.getPublicInstanceFromInternalInstanceHandle = getPublicInstanceFromInternalInstanceHandle;\n  exports.getShadowNode = getShadowNode;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _NativeDOM = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./specs/NativeDOM\"));\n  var ReadOnlyElementClass;\n  var ReadOnlyNode = exports.default = /*#__PURE__*/function () {\n    function ReadOnlyNode(internalInstanceHandle) {\n      (0, _classCallCheck2.default)(this, ReadOnlyNode);\n      setInstanceHandle(this, internalInstanceHandle);\n    }\n    return (0, _createClass2.default)(ReadOnlyNode, [{\n      key: \"childNodes\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        return (0, _$$_REQUIRE(_dependencyMap[5], \"../oldstylecollections/NodeList\").createNodeList)(childNodes);\n      }\n    }, {\n      key: \"firstChild\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[0];\n      }\n    }, {\n      key: \"isConnected\",\n      get: function get() {\n        var shadowNode = getShadowNode(this);\n        if (shadowNode == null) {\n          return false;\n        }\n        return _NativeDOM.default.isConnected(shadowNode);\n      }\n    }, {\n      key: \"lastChild\",\n      get: function get() {\n        var childNodes = getChildNodes(this);\n        if (childNodes.length === 0) {\n          return null;\n        }\n        return childNodes[childNodes.length - 1];\n      }\n    }, {\n      key: \"nextSibling\",\n      get: function get() {\n        var _getNodeSiblingsAndPo = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo2 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo, 2),\n          siblings = _getNodeSiblingsAndPo2[0],\n          position = _getNodeSiblingsAndPo2[1];\n        if (position === siblings.length - 1) {\n          return null;\n        }\n        return siblings[position + 1];\n      }\n    }, {\n      key: \"nodeName\",\n      get: function get() {\n        throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"nodeType\",\n      get: function get() {\n        throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"nodeValue\",\n      get: function get() {\n        throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"parentElement\",\n      get: function get() {\n        var parentNode = this.parentNode;\n        if (ReadOnlyElementClass == null) {\n          ReadOnlyElementClass = _$$_REQUIRE(_dependencyMap[6], \"./ReadOnlyElement\").default;\n        }\n        if (parentNode instanceof ReadOnlyElementClass) {\n          return parentNode;\n        }\n        return null;\n      }\n    }, {\n      key: \"parentNode\",\n      get: function get() {\n        var _getPublicInstanceFro;\n        var shadowNode = getShadowNode(this);\n        if (shadowNode == null) {\n          return null;\n        }\n        var parentInstanceHandle = _NativeDOM.default.getParentNode(shadowNode);\n        if (parentInstanceHandle == null) {\n          return null;\n        }\n        return (_getPublicInstanceFro = getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle)) != null ? _getPublicInstanceFro : null;\n      }\n    }, {\n      key: \"previousSibling\",\n      get: function get() {\n        var _getNodeSiblingsAndPo3 = getNodeSiblingsAndPosition(this),\n          _getNodeSiblingsAndPo4 = (0, _slicedToArray2.default)(_getNodeSiblingsAndPo3, 2),\n          siblings = _getNodeSiblingsAndPo4[0],\n          position = _getNodeSiblingsAndPo4[1];\n        if (position === 0) {\n          return null;\n        }\n        return siblings[position - 1];\n      }\n    }, {\n      key: \"textContent\",\n      get: function get() {\n        throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n      }\n    }, {\n      key: \"compareDocumentPosition\",\n      value: function compareDocumentPosition(otherNode) {\n        if (otherNode === this) {\n          return 0;\n        }\n        var shadowNode = getShadowNode(this);\n        var otherShadowNode = getShadowNode(otherNode);\n        if (shadowNode == null || otherShadowNode == null) {\n          return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n        }\n        return _NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);\n      }\n    }, {\n      key: \"contains\",\n      value: function contains(otherNode) {\n        if (otherNode === this) {\n          return true;\n        }\n        var position = this.compareDocumentPosition(otherNode);\n        return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n      }\n    }, {\n      key: \"getRootNode\",\n      value: function getRootNode() {\n        var lastKnownParent = this;\n        var nextPossibleParent = this.parentNode;\n        while (nextPossibleParent != null) {\n          lastKnownParent = nextPossibleParent;\n          nextPossibleParent = nextPossibleParent.parentNode;\n        }\n        return lastKnownParent;\n      }\n    }, {\n      key: \"hasChildNodes\",\n      value: function hasChildNodes() {\n        return getChildNodes(this).length > 0;\n      }\n    }]);\n  }();\n  ReadOnlyNode.ELEMENT_NODE = 1;\n  ReadOnlyNode.ATTRIBUTE_NODE = 2;\n  ReadOnlyNode.TEXT_NODE = 3;\n  ReadOnlyNode.CDATA_SECTION_NODE = 4;\n  ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;\n  ReadOnlyNode.ENTITY_NODE = 6;\n  ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;\n  ReadOnlyNode.COMMENT_NODE = 8;\n  ReadOnlyNode.DOCUMENT_NODE = 9;\n  ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;\n  ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;\n  ReadOnlyNode.NOTATION_NODE = 12;\n  ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;\n  ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;\n  ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;\n  ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;\n  ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;\n  var INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n  function getInstanceHandle(node) {\n    return node[INSTANCE_HANDLE_KEY];\n  }\n  function setInstanceHandle(node, instanceHandle) {\n    node[INSTANCE_HANDLE_KEY] = instanceHandle;\n  }\n  function getShadowNode(node) {\n    var RendererProxy = _$$_REQUIRE(_dependencyMap[7], \"../../../../../Libraries/ReactNative/RendererProxy\");\n    return RendererProxy.getNodeFromInternalInstanceHandle(getInstanceHandle(node));\n  }\n  function getChildNodes(node) {\n    var shadowNode = getShadowNode(node);\n    if (shadowNode == null) {\n      return [];\n    }\n    var childNodeInstanceHandles = _NativeDOM.default.getChildNodes(shadowNode);\n    return childNodeInstanceHandles.map(function (instanceHandle) {\n      return getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n    }).filter(Boolean);\n  }\n  function getNodeSiblingsAndPosition(node) {\n    var parent = node.parentNode;\n    if (parent == null) {\n      return [[node], 0];\n    }\n    var siblings = getChildNodes(parent);\n    var position = siblings.indexOf(node);\n    if (position === -1) {\n      throw new TypeError(\"Missing node in parent's child node list\");\n    }\n    return [siblings, position];\n  }\n  function getPublicInstanceFromInternalInstanceHandle(instanceHandle) {\n    var RendererProxy = _$$_REQUIRE(_dependencyMap[7], \"../../../../../Libraries/ReactNative/RendererProxy\");\n    var mixedPublicInstance = RendererProxy.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n    return mixedPublicInstance;\n  }\n});","lineCount":220,"map":[[14,2,21,0],[14,6,21,0,"_NativeDOM"],[14,16,21,0],[14,19,21,0,"_interopRequireDefault"],[14,41,21,0],[14,42,21,0,"_$$_REQUIRE"],[14,53,21,0],[14,54,21,0,"_dependencyMap"],[14,68,21,0],[15,2,25,0],[15,6,25,4,"ReadOnlyElementClass"],[15,26,25,48],[16,2,25,49],[16,6,27,21,"ReadOnlyNode"],[16,18,27,33],[16,21,27,33,"exports"],[16,28,27,33],[16,29,27,33,"default"],[16,36,27,33],[17,4,28,2],[17,13,28,2,"ReadOnlyNode"],[17,26,28,14,"internalInstanceHandle"],[17,48,28,60],[17,50,28,62],[18,6,28,62],[18,10,28,62,"_classCallCheck2"],[18,26,28,62],[18,27,28,62,"default"],[18,34,28,62],[18,42,28,62,"ReadOnlyNode"],[18,54,28,62],[19,6,29,4,"setInstanceHandle"],[19,23,29,21],[19,24,29,22],[19,28,29,26],[19,30,29,28,"internalInstanceHandle"],[19,52,29,50],[19,53,29,51],[20,4,30,2],[21,4,30,3],[21,15,30,3,"_createClass2"],[21,28,30,3],[21,29,30,3,"default"],[21,36,30,3],[21,38,30,3,"ReadOnlyNode"],[21,50,30,3],[22,6,30,3,"key"],[22,9,30,3],[23,6,30,3,"get"],[23,9,30,3],[23,11,32,2],[23,20,32,2,"get"],[23,24,32,2],[23,26,32,43],[24,8,33,4],[24,12,33,10,"childNodes"],[24,22,33,20],[24,25,33,23,"getChildNodes"],[24,38,33,36],[24,39,33,37],[24,43,33,41],[24,44,33,42],[25,8,34,4],[25,15,34,11],[25,19,34,11,"createNodeList"],[25,49,34,11],[25,50,34,11,"createNodeList"],[25,99,34,25],[25,101,34,26,"childNodes"],[25,111,34,36],[25,112,34,37],[26,6,35,2],[27,4,35,3],[28,6,35,3,"key"],[28,9,35,3],[29,6,35,3,"get"],[29,9,35,3],[29,11,37,2],[29,20,37,2,"get"],[29,24,37,2],[29,26,37,40],[30,8,38,4],[30,12,38,10,"childNodes"],[30,22,38,20],[30,25,38,23,"getChildNodes"],[30,38,38,36],[30,39,38,37],[30,43,38,41],[30,44,38,42],[31,8,40,4],[31,12,40,8,"childNodes"],[31,22,40,18],[31,23,40,19,"length"],[31,29,40,25],[31,34,40,30],[31,35,40,31],[31,37,40,33],[32,10,41,6],[32,17,41,13],[32,21,41,17],[33,8,42,4],[34,8,44,4],[34,15,44,11,"childNodes"],[34,25,44,21],[34,26,44,22],[34,27,44,23],[34,28,44,24],[35,6,45,2],[36,4,45,3],[37,6,45,3,"key"],[37,9,45,3],[38,6,45,3,"get"],[38,9,45,3],[38,11,47,2],[38,20,47,2,"get"],[38,24,47,2],[38,26,47,29],[39,8,48,4],[39,12,48,10,"shadowNode"],[39,22,48,20],[39,25,48,23,"getShadowNode"],[39,38,48,36],[39,39,48,37],[39,43,48,41],[39,44,48,42],[40,8,50,4],[40,12,50,8,"shadowNode"],[40,22,50,18],[40,26,50,22],[40,30,50,26],[40,32,50,28],[41,10,51,6],[41,17,51,13],[41,22,51,18],[42,8,52,4],[43,8,54,4],[43,15,54,11,"NativeDOM"],[43,33,54,20],[43,34,54,21,"isConnected"],[43,45,54,32],[43,46,54,33,"shadowNode"],[43,56,54,43],[43,57,54,44],[44,6,55,2],[45,4,55,3],[46,6,55,3,"key"],[46,9,55,3],[47,6,55,3,"get"],[47,9,55,3],[47,11,57,2],[47,20,57,2,"get"],[47,24,57,2],[47,26,57,39],[48,8,58,4],[48,12,58,10,"childNodes"],[48,22,58,20],[48,25,58,23,"getChildNodes"],[48,38,58,36],[48,39,58,37],[48,43,58,41],[48,44,58,42],[49,8,60,4],[49,12,60,8,"childNodes"],[49,22,60,18],[49,23,60,19,"length"],[49,29,60,25],[49,34,60,30],[49,35,60,31],[49,37,60,33],[50,10,61,6],[50,17,61,13],[50,21,61,17],[51,8,62,4],[52,8,64,4],[52,15,64,11,"childNodes"],[52,25,64,21],[52,26,64,22,"childNodes"],[52,36,64,32],[52,37,64,33,"length"],[52,43,64,39],[52,46,64,42],[52,47,64,43],[52,48,64,44],[53,6,65,2],[54,4,65,3],[55,6,65,3,"key"],[55,9,65,3],[56,6,65,3,"get"],[56,9,65,3],[56,11,67,2],[56,20,67,2,"get"],[56,24,67,2],[56,26,67,41],[57,8,68,4],[57,12,68,4,"_getNodeSiblingsAndPo"],[57,33,68,4],[57,36,68,33,"getNodeSiblingsAndPosition"],[57,62,68,59],[57,63,68,60],[57,67,68,64],[57,68,68,65],[58,10,68,65,"_getNodeSiblingsAndPo2"],[58,32,68,65],[58,39,68,65,"_slicedToArray2"],[58,54,68,65],[58,55,68,65,"default"],[58,62,68,65],[58,64,68,65,"_getNodeSiblingsAndPo"],[58,85,68,65],[59,10,68,11,"siblings"],[59,18,68,19],[59,21,68,19,"_getNodeSiblingsAndPo2"],[59,43,68,19],[60,10,68,21,"position"],[60,18,68,29],[60,21,68,29,"_getNodeSiblingsAndPo2"],[60,43,68,29],[61,8,70,4],[61,12,70,8,"position"],[61,20,70,16],[61,25,70,21,"siblings"],[61,33,70,29],[61,34,70,30,"length"],[61,40,70,36],[61,43,70,39],[61,44,70,40],[61,46,70,42],[62,10,72,6],[62,17,72,13],[62,21,72,17],[63,8,73,4],[64,8,75,4],[64,15,75,11,"siblings"],[64,23,75,19],[64,24,75,20,"position"],[64,32,75,28],[64,35,75,31],[64,36,75,32],[64,37,75,33],[65,6,76,2],[66,4,76,3],[67,6,76,3,"key"],[67,9,76,3],[68,6,76,3,"get"],[68,9,76,3],[68,11,81,2],[68,20,81,2,"get"],[68,24,81,2],[68,26,81,25],[69,8,82,4],[69,14,82,10],[69,18,82,14,"TypeError"],[69,27,82,23],[69,28,83,6],[69,108,84,4],[69,109,84,5],[70,6,85,2],[71,4,85,3],[72,6,85,3,"key"],[72,9,85,3],[73,6,85,3,"get"],[73,9,85,3],[73,11,90,2],[73,20,90,2,"get"],[73,24,90,2],[73,26,90,25],[74,8,91,4],[74,14,91,10],[74,18,91,14,"TypeError"],[74,27,91,23],[74,28,92,6],[74,108,93,4],[74,109,93,5],[75,6,94,2],[76,4,94,3],[77,6,94,3,"key"],[77,9,94,3],[78,6,94,3,"get"],[78,9,94,3],[78,11,99,2],[78,20,99,2,"get"],[78,24,99,2],[78,26,99,33],[79,8,100,4],[79,14,100,10],[79,18,100,14,"TypeError"],[79,27,100,23],[79,28,101,6],[79,109,102,4],[79,110,102,5],[80,6,103,2],[81,4,103,3],[82,6,103,3,"key"],[82,9,103,3],[83,6,103,3,"get"],[83,9,103,3],[83,11,105,2],[83,20,105,2,"get"],[83,24,105,2],[83,26,105,46],[84,8,106,4],[84,12,106,10,"parentNode"],[84,22,106,20],[84,25,106,23],[84,29,106,27],[84,30,106,28,"parentNode"],[84,40,106,38],[85,8,108,4],[85,12,108,8,"ReadOnlyElementClass"],[85,32,108,28],[85,36,108,32],[85,40,108,36],[85,42,108,38],[86,10,110,6,"ReadOnlyElementClass"],[86,30,110,26],[86,33,110,29,"require"],[86,44,110,36],[86,45,110,36,"_dependencyMap"],[86,59,110,36],[86,83,110,56],[86,84,110,57],[86,85,110,58,"default"],[86,92,110,65],[87,8,111,4],[88,8,113,4],[88,12,113,8,"parentNode"],[88,22,113,18],[88,34,113,30,"ReadOnlyElementClass"],[88,54,113,50],[88,56,113,52],[89,10,114,6],[89,17,114,13,"parentNode"],[89,27,114,23],[90,8,115,4],[91,8,117,4],[91,15,117,11],[91,19,117,15],[92,6,118,2],[93,4,118,3],[94,6,118,3,"key"],[94,9,118,3],[95,6,118,3,"get"],[95,9,118,3],[95,11,120,2],[95,20,120,2,"get"],[95,24,120,2],[95,26,120,40],[96,8,120,40],[96,12,120,40,"_getPublicInstanceFro"],[96,33,120,40],[97,8,121,4],[97,12,121,10,"shadowNode"],[97,22,121,20],[97,25,121,23,"getShadowNode"],[97,38,121,36],[97,39,121,37],[97,43,121,41],[97,44,121,42],[98,8,123,4],[98,12,123,8,"shadowNode"],[98,22,123,18],[98,26,123,22],[98,30,123,26],[98,32,123,28],[99,10,124,6],[99,17,124,13],[99,21,124,17],[100,8,125,4],[101,8,127,4],[101,12,127,10,"parentInstanceHandle"],[101,32,127,30],[101,35,127,33,"NativeDOM"],[101,53,127,42],[101,54,127,43,"getParentNode"],[101,67,127,56],[101,68,127,57,"shadowNode"],[101,78,127,67],[101,79,127,68],[102,8,129,4],[102,12,129,8,"parentInstanceHandle"],[102,32,129,28],[102,36,129,32],[102,40,129,36],[102,42,129,38],[103,10,130,6],[103,17,130,13],[103,21,130,17],[104,8,131,4],[105,8,133,4],[105,16,133,4,"_getPublicInstanceFro"],[105,37,133,4],[105,40,134,6,"getPublicInstanceFromInternalInstanceHandle"],[105,83,134,49],[105,84,134,50,"parentInstanceHandle"],[105,104,134,70],[105,105,134,71],[105,117,134,71,"_getPublicInstanceFro"],[105,138,134,71],[105,141,134,75],[105,145,134,79],[106,6,136,2],[107,4,136,3],[108,6,136,3,"key"],[108,9,136,3],[109,6,136,3,"get"],[109,9,136,3],[109,11,138,2],[109,20,138,2,"get"],[109,24,138,2],[109,26,138,45],[110,8,139,4],[110,12,139,4,"_getNodeSiblingsAndPo3"],[110,34,139,4],[110,37,139,33,"getNodeSiblingsAndPosition"],[110,63,139,59],[110,64,139,60],[110,68,139,64],[110,69,139,65],[111,10,139,65,"_getNodeSiblingsAndPo4"],[111,32,139,65],[111,39,139,65,"_slicedToArray2"],[111,54,139,65],[111,55,139,65,"default"],[111,62,139,65],[111,64,139,65,"_getNodeSiblingsAndPo3"],[111,86,139,65],[112,10,139,11,"siblings"],[112,18,139,19],[112,21,139,19,"_getNodeSiblingsAndPo4"],[112,43,139,19],[113,10,139,21,"position"],[113,18,139,29],[113,21,139,29,"_getNodeSiblingsAndPo4"],[113,43,139,29],[114,8,141,4],[114,12,141,8,"position"],[114,20,141,16],[114,25,141,21],[114,26,141,22],[114,28,141,24],[115,10,143,6],[115,17,143,13],[115,21,143,17],[116,8,144,4],[117,8,146,4],[117,15,146,11,"siblings"],[117,23,146,19],[117,24,146,20,"position"],[117,32,146,28],[117,35,146,31],[117,36,146,32],[117,37,146,33],[118,6,147,2],[119,4,147,3],[120,6,147,3,"key"],[120,9,147,3],[121,6,147,3,"get"],[121,9,147,3],[121,11,152,2],[121,20,152,2,"get"],[121,24,152,2],[121,26,152,35],[122,8,153,4],[122,14,153,10],[122,18,153,14,"TypeError"],[122,27,153,23],[122,28,154,6],[122,111,155,4],[122,112,155,5],[123,6,156,2],[124,4,156,3],[125,6,156,3,"key"],[125,9,156,3],[126,6,156,3,"value"],[126,11,156,3],[126,13,158,2],[126,22,158,2,"compareDocumentPosition"],[126,45,158,25,"compareDocumentPosition"],[126,46,158,26,"otherNode"],[126,55,158,49],[126,57,158,59],[127,8,160,4],[127,12,160,8,"otherNode"],[127,21,160,17],[127,26,160,22],[127,30,160,26],[127,32,160,28],[128,10,161,6],[128,17,161,13],[128,18,161,14],[129,8,162,4],[130,8,164,4],[130,12,164,10,"shadowNode"],[130,22,164,20],[130,25,164,23,"getShadowNode"],[130,38,164,36],[130,39,164,37],[130,43,164,41],[130,44,164,42],[131,8,165,4],[131,12,165,10,"otherShadowNode"],[131,27,165,25],[131,30,165,28,"getShadowNode"],[131,43,165,41],[131,44,165,42,"otherNode"],[131,53,165,51],[131,54,165,52],[132,8,167,4],[132,12,167,8,"shadowNode"],[132,22,167,18],[132,26,167,22],[132,30,167,26],[132,34,167,30,"otherShadowNode"],[132,49,167,45],[132,53,167,49],[132,57,167,53],[132,59,167,55],[133,10,168,6],[133,17,168,13,"ReadOnlyNode"],[133,29,168,25],[133,30,168,26,"DOCUMENT_POSITION_DISCONNECTED"],[133,60,168,56],[134,8,169,4],[135,8,171,4],[135,15,171,11,"NativeDOM"],[135,33,171,20],[135,34,171,21,"compareDocumentPosition"],[135,57,171,44],[135,58,171,45,"shadowNode"],[135,68,171,55],[135,70,171,57,"otherShadowNode"],[135,85,171,72],[135,86,171,73],[136,6,172,2],[137,4,172,3],[138,6,172,3,"key"],[138,9,172,3],[139,6,172,3,"value"],[139,11,172,3],[139,13,174,2],[139,22,174,2,"contains"],[139,30,174,10,"contains"],[139,31,174,11,"otherNode"],[139,40,174,34],[139,42,174,45],[140,8,175,4],[140,12,175,8,"otherNode"],[140,21,175,17],[140,26,175,22],[140,30,175,26],[140,32,175,28],[141,10,176,6],[141,17,176,13],[141,21,176,17],[142,8,177,4],[143,8,179,4],[143,12,179,10,"position"],[143,20,179,18],[143,23,179,21],[143,27,179,25],[143,28,179,26,"compareDocumentPosition"],[143,51,179,49],[143,52,179,50,"otherNode"],[143,61,179,59],[143,62,179,60],[144,8,181,4],[144,15,181,11],[144,16,181,12,"position"],[144,24,181,20],[144,27,181,23,"ReadOnlyNode"],[144,39,181,35],[144,40,181,36,"DOCUMENT_POSITION_CONTAINED_BY"],[144,70,181,66],[144,76,181,72],[144,77,181,73],[145,6,182,2],[146,4,182,3],[147,6,182,3,"key"],[147,9,182,3],[148,6,182,3,"value"],[148,11,182,3],[148,13,184,2],[148,22,184,2,"getRootNode"],[148,33,184,13,"getRootNode"],[148,34,184,13],[148,36,184,30],[149,8,186,4],[149,12,186,8,"lastKnownParent"],[149,27,186,37],[149,30,186,40],[149,34,186,44],[150,8,187,4],[150,12,187,8,"nextPossibleParent"],[150,30,187,41],[150,33,187,44],[150,37,187,48],[150,38,187,49,"parentNode"],[150,48,187,59],[151,8,189,4],[151,15,189,11,"nextPossibleParent"],[151,33,189,29],[151,37,189,33],[151,41,189,37],[151,43,189,39],[152,10,190,6,"lastKnownParent"],[152,25,190,21],[152,28,190,24,"nextPossibleParent"],[152,46,190,42],[153,10,191,6,"nextPossibleParent"],[153,28,191,24],[153,31,191,27,"nextPossibleParent"],[153,49,191,45],[153,50,191,46,"parentNode"],[153,60,191,56],[154,8,192,4],[155,8,194,4],[155,15,194,11,"lastKnownParent"],[155,30,194,26],[156,6,195,2],[157,4,195,3],[158,6,195,3,"key"],[158,9,195,3],[159,6,195,3,"value"],[159,11,195,3],[159,13,197,2],[159,22,197,2,"hasChildNodes"],[159,35,197,15,"hasChildNodes"],[159,36,197,15],[159,38,197,27],[160,8,198,4],[160,15,198,11,"getChildNodes"],[160,28,198,24],[160,29,198,25],[160,33,198,29],[160,34,198,30],[160,35,198,31,"length"],[160,41,198,37],[160,44,198,40],[160,45,198,41],[161,6,199,2],[162,4,199,3],[163,2,199,3],[164,2,27,21,"ReadOnlyNode"],[164,14,27,33],[164,15,208,9,"ELEMENT_NODE"],[164,27,208,21],[164,30,208,32],[164,31,208,33],[165,2,27,21,"ReadOnlyNode"],[165,14,27,33],[165,15,212,9,"ATTRIBUTE_NODE"],[165,29,212,23],[165,32,212,34],[165,33,212,35],[166,2,27,21,"ReadOnlyNode"],[166,14,27,33],[166,15,216,9,"TEXT_NODE"],[166,24,216,18],[166,27,216,29],[166,28,216,30],[167,2,27,21,"ReadOnlyNode"],[167,14,27,33],[167,15,220,9,"CDATA_SECTION_NODE"],[167,33,220,27],[167,36,220,38],[167,37,220,39],[168,2,27,21,"ReadOnlyNode"],[168,14,27,33],[168,15,224,9,"ENTITY_REFERENCE_NODE"],[168,36,224,30],[168,39,224,41],[168,40,224,42],[169,2,27,21,"ReadOnlyNode"],[169,14,27,33],[169,15,228,9,"ENTITY_NODE"],[169,26,228,20],[169,29,228,31],[169,30,228,32],[170,2,27,21,"ReadOnlyNode"],[170,14,27,33],[170,15,232,9,"PROCESSING_INSTRUCTION_NODE"],[170,42,232,36],[170,45,232,47],[170,46,232,48],[171,2,27,21,"ReadOnlyNode"],[171,14,27,33],[171,15,236,9,"COMMENT_NODE"],[171,27,236,21],[171,30,236,32],[171,31,236,33],[172,2,27,21,"ReadOnlyNode"],[172,14,27,33],[172,15,240,9,"DOCUMENT_NODE"],[172,28,240,22],[172,31,240,33],[172,32,240,34],[173,2,27,21,"ReadOnlyNode"],[173,14,27,33],[173,15,244,9,"DOCUMENT_TYPE_NODE"],[173,33,244,27],[173,36,244,38],[173,38,244,40],[174,2,27,21,"ReadOnlyNode"],[174,14,27,33],[174,15,248,9,"DOCUMENT_FRAGMENT_NODE"],[174,37,248,31],[174,40,248,42],[174,42,248,44],[175,2,27,21,"ReadOnlyNode"],[175,14,27,33],[175,15,252,9,"NOTATION_NODE"],[175,28,252,22],[175,31,252,33],[175,33,252,35],[176,2,27,21,"ReadOnlyNode"],[176,14,27,33],[176,15,262,9,"DOCUMENT_POSITION_DISCONNECTED"],[176,45,262,39],[176,48,262,50],[176,49,262,51],[177,2,27,21,"ReadOnlyNode"],[177,14,27,33],[177,15,268,9,"DOCUMENT_POSITION_PRECEDING"],[177,42,268,36],[177,45,268,47],[177,46,268,48],[178,2,27,21,"ReadOnlyNode"],[178,14,27,33],[178,15,274,9,"DOCUMENT_POSITION_FOLLOWING"],[178,42,274,36],[178,45,274,47],[178,46,274,48],[179,2,27,21,"ReadOnlyNode"],[179,14,27,33],[179,15,278,9,"DOCUMENT_POSITION_CONTAINS"],[179,41,278,35],[179,44,278,46],[179,45,278,47],[180,2,27,21,"ReadOnlyNode"],[180,14,27,33],[180,15,282,9,"DOCUMENT_POSITION_CONTAINED_BY"],[180,45,282,39],[180,48,282,50],[180,50,282,52],[181,2,27,21,"ReadOnlyNode"],[181,14,27,33],[181,15,286,9,"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"],[181,56,286,50],[181,59,286,61],[181,61,286,63],[182,2,289,0],[182,6,289,6,"INSTANCE_HANDLE_KEY"],[182,25,289,25],[182,28,289,28,"Symbol"],[182,34,289,34],[182,35,289,35],[182,59,289,59],[182,60,289,60],[183,2,291,7],[183,11,291,16,"getInstanceHandle"],[183,28,291,33,"getInstanceHandle"],[183,29,291,34,"node"],[183,33,291,52],[183,35,291,78],[184,4,293,2],[184,11,293,9,"node"],[184,15,293,13],[184,16,293,14,"INSTANCE_HANDLE_KEY"],[184,35,293,33],[184,36,293,34],[185,2,294,0],[186,2,296,0],[186,11,296,9,"setInstanceHandle"],[186,28,296,26,"setInstanceHandle"],[186,29,297,2,"node"],[186,33,297,20],[186,35,298,2,"instanceHandle"],[186,49,298,40],[186,51,299,8],[187,4,301,2,"node"],[187,8,301,6],[187,9,301,7,"INSTANCE_HANDLE_KEY"],[187,28,301,26],[187,29,301,27],[187,32,301,30,"instanceHandle"],[187,46,301,44],[188,2,302,0],[189,2,304,7],[189,11,304,16,"getShadowNode"],[189,24,304,29,"getShadowNode"],[189,25,304,30,"node"],[189,29,304,48],[189,31,304,63],[190,4,307,2],[190,8,307,8,"RendererProxy"],[190,21,307,21],[190,24,307,24,"require"],[190,35,307,31],[190,36,307,31,"_dependencyMap"],[190,50,307,31],[190,107,307,84],[190,108,307,85],[191,4,308,2],[191,11,308,9,"RendererProxy"],[191,24,308,22],[191,25,308,23,"getNodeFromInternalInstanceHandle"],[191,58,308,56],[191,59,309,4,"getInstanceHandle"],[191,76,309,21],[191,77,309,22,"node"],[191,81,309,26],[191,82,310,2],[191,83,310,3],[192,2,311,0],[193,2,313,7],[193,11,313,16,"getChildNodes"],[193,24,313,29,"getChildNodes"],[193,25,314,2,"node"],[193,29,314,20],[193,31,315,32],[194,4,316,2],[194,8,316,8,"shadowNode"],[194,18,316,18],[194,21,316,21,"getShadowNode"],[194,34,316,34],[194,35,316,35,"node"],[194,39,316,39],[194,40,316,40],[195,4,318,2],[195,8,318,6,"shadowNode"],[195,18,318,16],[195,22,318,20],[195,26,318,24],[195,28,318,26],[196,6,319,4],[196,13,319,11],[196,15,319,13],[197,4,320,2],[198,4,322,2],[198,8,322,8,"childNodeInstanceHandles"],[198,32,322,32],[198,35,322,35,"NativeDOM"],[198,53,322,44],[198,54,322,45,"getChildNodes"],[198,67,322,58],[198,68,322,59,"shadowNode"],[198,78,322,69],[198,79,322,70],[199,4,323,2],[199,11,323,9,"childNodeInstanceHandles"],[199,35,323,33],[199,36,324,5,"map"],[199,39,324,8],[199,40,324,9],[199,50,324,9,"instanceHandle"],[199,64,324,23],[200,6,324,23],[200,13,325,6,"getPublicInstanceFromInternalInstanceHandle"],[200,56,325,49],[200,57,325,50,"instanceHandle"],[200,71,325,64],[200,72,325,65],[201,4,325,65],[201,5,326,4],[201,6,326,5],[201,7,327,5,"filter"],[201,13,327,11],[201,14,327,12,"Boolean"],[201,21,327,19],[201,22,327,20],[202,2,328,0],[203,2,330,0],[203,11,330,9,"getNodeSiblingsAndPosition"],[203,37,330,35,"getNodeSiblingsAndPosition"],[203,38,331,2,"node"],[203,42,331,20],[203,44,332,42],[204,4,333,2],[204,8,333,8,"parent"],[204,14,333,14],[204,17,333,17,"node"],[204,21,333,21],[204,22,333,22,"parentNode"],[204,32,333,32],[205,4,334,2],[205,8,334,6,"parent"],[205,14,334,12],[205,18,334,16],[205,22,334,20],[205,24,334,22],[206,6,336,4],[206,13,336,11],[206,14,336,12],[206,15,336,13,"node"],[206,19,336,17],[206,20,336,18],[206,22,336,20],[206,23,336,21],[206,24,336,22],[207,4,337,2],[208,4,339,2],[208,8,339,8,"siblings"],[208,16,339,16],[208,19,339,19,"getChildNodes"],[208,32,339,32],[208,33,339,33,"parent"],[208,39,339,39],[208,40,339,40],[209,4,340,2],[209,8,340,8,"position"],[209,16,340,16],[209,19,340,19,"siblings"],[209,27,340,27],[209,28,340,28,"indexOf"],[209,35,340,35],[209,36,340,36,"node"],[209,40,340,40],[209,41,340,41],[210,4,342,2],[210,8,342,6,"position"],[210,16,342,14],[210,21,342,19],[210,22,342,20],[210,23,342,21],[210,25,342,23],[211,6,343,4],[211,12,343,10],[211,16,343,14,"TypeError"],[211,25,343,23],[211,26,343,24],[211,68,343,66],[211,69,343,67],[212,4,344,2],[213,4,346,2],[213,11,346,9],[213,12,346,10,"siblings"],[213,20,346,18],[213,22,346,20,"position"],[213,30,346,28],[213,31,346,29],[214,2,347,0],[215,2,349,7],[215,11,349,16,"getPublicInstanceFromInternalInstanceHandle"],[215,54,349,59,"getPublicInstanceFromInternalInstanceHandle"],[215,55,350,2,"instanceHandle"],[215,69,350,40],[215,71,351,17],[216,4,354,2],[216,8,354,8,"RendererProxy"],[216,21,354,21],[216,24,354,24,"require"],[216,35,354,31],[216,36,354,31,"_dependencyMap"],[216,50,354,31],[216,107,354,84],[216,108,354,85],[217,4,355,2],[217,8,355,8,"mixedPublicInstance"],[217,27,355,27],[217,30,356,4,"RendererProxy"],[217,43,356,17],[217,44,356,18,"getPublicInstanceFromInternalInstanceHandle"],[217,87,356,61],[217,88,356,62,"instanceHandle"],[217,102,356,76],[217,103,356,77],[218,4,358,2],[218,11,358,9,"mixedPublicInstance"],[218,30,358,28],[219,2,359,0],[220,0,359,1],[220,3]],"functionMap":{"names":["<global>","ReadOnlyNode","constructor","get__childNodes","get__firstChild","get__isConnected","get__lastChild","get__nextSibling","get__nodeName","get__nodeType","get__nodeValue","get__parentElement","get__parentNode","get__previousSibling","get__textContent","compareDocumentPosition","contains","getRootNode","hasChildNodes","getInstanceHandle","setInstanceHandle","getShadowNode","getChildNodes","childNodeInstanceHandles.map$argument_0","getNodeSiblingsAndPosition","getPublicInstanceFromInternalInstanceHandle"],"mappings":"AAA;eC0B;ECC;GDE;EEE;GFG;EGE;GHQ;EIE;GJQ;EKE;GLQ;EME;GNS;EOK;GPI;EQK;GRI;ESK;GTI;EUE;GVa;EWE;GXgB;EYE;GZS;EaK;GbI;EcE;Gdc;EeE;GfQ;EgBE;GhBW;EiBE;GjBE;CDwF;OmBI;CnBG;AoBE;CpBM;OqBE;CrBO;OsBE;SCW;iEDC;CtBG;AwBE;CxBiB;OyBE"}},"type":"js/module"}]}