{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":2,"column":0,"index":10775}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":2,"column":0,"index":10775}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":2,"column":0,"index":10775}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":2,"column":0,"index":10775}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"rKAWVuQOSSDHxC6IWcmkeWszaWg="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":40,"index":40},"end":{"line":1,"column":120,"index":120}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"./d8tU0RI4.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}},{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}},{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}},{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}},{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}},{"start":{"line":1,"column":366,"index":366},"end":{"line":1,"column":453,"index":453}}],"key":"napopFwt0tvLf3J7TGQCmHmUxlM="}},{"name":"./BzY-eDl-.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}},{"start":{"line":1,"column":120,"index":120},"end":{"line":1,"column":239,"index":239}}],"key":"ZadcIuln/UH+GO/jGOmFc9NJ0oA="}},{"name":"./C8qSJwIh.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}},{"start":{"line":1,"column":281,"index":281},"end":{"line":1,"column":366,"index":366}}],"key":"VpE3KCBNN5O0+u+3FEve5/tJ3TI="}},{"name":"./CF3f8JjG.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":239,"index":239},"end":{"line":1,"column":281,"index":281}},{"start":{"line":1,"column":239,"index":239},"end":{"line":1,"column":281,"index":281}},{"start":{"line":1,"column":239,"index":239},"end":{"line":1,"column":281,"index":281}}],"key":"CvKiCR2/shnZ/t1CetRqJTiqPPM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.N = NestedStoreProvider;\n  exports.R = RootStoreProvider;\n  exports.S = void 0;\n  exports.a = useOwnStoreBackendSlot;\n  exports.b = void 0;\n  exports.c = useComponentStore;\n  exports.r = exports.e = exports.d = void 0;\n  exports.u = useStoreBackendValue;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[4], \"react/jsx-runtime\");\n  var _react = _$$_REQUIRE(_dependencyMap[5], \"react\");\n  function __decorate(decorators, target, key, desc) {\n    var d,\n      c = arguments.length,\n      r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc;\n    if (\"object\" == typeof Reflect && \"function\" == typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n  }\n  \"function\" == typeof SuppressedError && SuppressedError;\n  var rootPath = exports.r = \"*;\";\n  function isAncestorOrSelf(parent, path) {\n    return path.startsWith(parent);\n  }\n  var StoreBackend = exports.e = /*#__PURE__*/function () {\n    function StoreBackend() {\n      (0, _classCallCheck2.default)(this, StoreBackend);\n      this.recordGroups = new Map(), this.mirrorCount = new Map(), this.usedSlotsCount = new Map(), this.slotObservers = new Map();\n    }\n    return (0, _createClass2.default)(StoreBackend, [{\n      key: \"get$\",\n      value: function get$(widgetId, slot, path) {\n        var recordsGroup = this.getOrCreateGroup(widgetId, slot);\n        var recordWithExactPath;\n        return (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").f)(`backend.get$(${widgetId}, ${slot}, ${path})`, function () {\n          if (recordWithExactPath) return recordWithExactPath.get();\n          var bestMatchingRecord = recordsGroup.filter(function (_ref) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 1),\n              recordPath = _ref2[0];\n            return isAncestorOrSelf(recordPath, path);\n          }).pop();\n          return bestMatchingRecord ? (bestMatchingRecord[0] === path && (recordWithExactPath = bestMatchingRecord[1]), bestMatchingRecord[1].get()) : void 0;\n        });\n      }\n    }, {\n      key: \"set\",\n      value: function set(widgetId, slot, path, value) {\n        var _this$usedSlotsCount$;\n        var recordsGroup = this.getOrCreateGroup(widgetId, slot),\n          existingRecord = recordsGroup.filter(function (_ref3) {\n            var _ref4 = (0, _slicedToArray2.default)(_ref3, 1),\n              recordPath = _ref4[0];\n            return isAncestorOrSelf(recordPath, path);\n          }).pop();\n        if (existingRecord) return void existingRecord[1].set(value);\n        var newRecord = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").b)(path, _$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").o.box(value, {\n            deep: !1,\n            name: `backend.box(${widgetId}, ${slot}, ${path})`,\n            equals: _$$_REQUIRE(_dependencyMap[9], \"./CF3f8JjG.js\").d\n          })),\n          moreSpecificRecordIndex = recordsGroup.findIndex(function (_ref5) {\n            var _ref6 = (0, _slicedToArray2.default)(_ref5, 1),\n              recordPath = _ref6[0];\n            return recordPath.length > path.length;\n          });\n        -1 === moreSpecificRecordIndex ? recordsGroup.push(newRecord) : recordsGroup.splice(moreSpecificRecordIndex, 0, newRecord), this.usedSlotsCount.set(slot, ((_this$usedSlotsCount$ = this.usedSlotsCount.get(slot)) != null ? _this$usedSlotsCount$ : 0) + 1);\n      }\n    }, {\n      key: \"getAllEntries$\",\n      value: function getAllEntries$(slot, path) {\n        var _this$slotObservers$g,\n          _this = this;\n        var slotObserver = (_this$slotObservers$g = this.slotObservers.get(slot)) != null ? _this$slotObservers$g : (0, _$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").n)(`backend.slot(${slot})`);\n        return this.slotObservers.set(slot, slotObserver), (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").f)(`backend.getAll$(${slot}, ${path})`, function () {\n          slotObserver.reportObserved();\n          var result = [];\n          for (var _ref7 of _this.recordGroups.entries()) {\n            var _ref8 = (0, _slicedToArray2.default)(_ref7, 2);\n            var key = _ref8[0];\n            var recordsGroup = _ref8[1];\n            var _key$split = key.split(\"Â»\"),\n              _key$split2 = (0, _slicedToArray2.default)(_key$split, 2),\n              groupSlot = _key$split2[0],\n              widgetId = _key$split2[1];\n            if (groupSlot === slot) for (var _ref9 of recordsGroup.toJS().reverse()) {\n              var _ref10 = (0, _slicedToArray2.default)(_ref9, 2);\n              var recordPath = _ref10[0];\n              var recordBox = _ref10[1];\n              path && !isAncestorOrSelf(path, recordPath) || result.push({\n                widgetId: widgetId,\n                path: recordPath,\n                value: recordBox.get()\n              });\n            }\n          }\n          return result;\n        });\n      }\n    }, {\n      key: \"free\",\n      value: function free(widgetId, slot, path) {\n        var _this$usedSlotsCount$2;\n        var currentCount = (_this$usedSlotsCount$2 = this.usedSlotsCount.get(slot)) != null ? _this$usedSlotsCount$2 : 0;\n        var groupKey = this.groupKey(widgetId, slot),\n          recordsGroup = this.recordGroups.get(groupKey);\n        void 0 !== recordsGroup && (this.hasMirrors(groupKey, path) || recordsGroup.filter(function (_ref11) {\n          var _ref12 = (0, _slicedToArray2.default)(_ref11, 1),\n            recordPath = _ref12[0];\n          return isAncestorOrSelf(path, recordPath);\n        }).forEach(function (record) {\n          recordsGroup.remove(record), currentCount--;\n        }), 0 === recordsGroup.length && this.recordGroups.delete(groupKey), currentCount < 1 ? this.usedSlotsCount.delete(slot) : this.usedSlotsCount.set(slot, currentCount));\n      }\n    }, {\n      key: \"getUsedSlots\",\n      value: function getUsedSlots() {\n        return Array.from(this.usedSlotsCount.entries()).filter(function (_ref13) {\n          var _ref14 = (0, _slicedToArray2.default)(_ref13, 2),\n            _ = _ref14[0],\n            value = _ref14[1];\n          return value > 0;\n        }).map(function (_ref15) {\n          var _ref16 = (0, _slicedToArray2.default)(_ref15, 1),\n            key = _ref16[0];\n          return key;\n        });\n      }\n    }, {\n      key: \"groupKey\",\n      value: function groupKey(widgetId, slot) {\n        return `${slot}Â»${widgetId}`;\n      }\n    }, {\n      key: \"getOrCreateGroup\",\n      value: function getOrCreateGroup(widgetId, slot) {\n        var _this$slotObservers$g2;\n        var recordsKey = this.groupKey(widgetId, slot),\n          existingGroup = this.recordGroups.get(recordsKey);\n        if (existingGroup) return existingGroup;\n        var newGroup = _$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").o.array([], {\n          deep: !1,\n          name: `backend.group(${widgetId}, ${slot})`\n        });\n        return this.recordGroups.set(recordsKey, newGroup), (_this$slotObservers$g2 = this.slotObservers.get(slot)) != null && _this$slotObservers$g2.reportChanged(), newGroup;\n      }\n    }, {\n      key: \"hasMirrors\",\n      value: function hasMirrors(groupKey, path) {\n        var group = this.mirrorCount.get(groupKey);\n        if (void 0 === group) return !1;\n        for (var i = group.length - 1; i >= 0; i--) {\n          var _group$i;\n          var counterPath = (_group$i = group[i]) == null ? void 0 : _group$i[0];\n          if (counterPath && isAncestorOrSelf(path, counterPath)) return !0;\n        }\n        return !1;\n      }\n    }, {\n      key: \"registerLocalMirror\",\n      value: function registerLocalMirror(widgetId, slot, path) {\n        var _this$mirrorCount$get;\n        var groupKey = this.groupKey(widgetId, slot),\n          group = (_this$mirrorCount$get = this.mirrorCount.get(groupKey)) != null ? _this$mirrorCount$get : [];\n        var counterIndex = group.findIndex(function (_ref17) {\n          var _ref18 = (0, _slicedToArray2.default)(_ref17, 1),\n            counterPath = _ref18[0];\n          return counterPath === path;\n        });\n        if (-1 === counterIndex) {\n          var newCounter = [path, 0];\n          var moreSpecificCounterIndex = -1;\n          for (var i = group.length - 1; i >= 0; i--) {\n            var _group$i2;\n            var counterPath = (_group$i2 = group[i]) == null ? void 0 : _group$i2[0];\n            if (void 0 !== counterPath && isAncestorOrSelf(path, counterPath)) {\n              moreSpecificCounterIndex = i;\n              break;\n            }\n          }\n          -1 === moreSpecificCounterIndex ? (counterIndex = group.length, group.push(newCounter)) : (group.splice(moreSpecificCounterIndex, 0, newCounter), counterIndex = moreSpecificCounterIndex);\n        }\n        group[counterIndex][1]++, this.mirrorCount.set(groupKey, group);\n      }\n    }, {\n      key: \"unregisterLocalMirror\",\n      value: function unregisterLocalMirror(widgetId, slot, path) {\n        var groupKey = this.groupKey(widgetId, slot),\n          group = this.mirrorCount.get(groupKey);\n        if (void 0 === group) return;\n        var counterIndex = group.findIndex(function (_ref19) {\n          var _ref20 = (0, _slicedToArray2.default)(_ref19, 1),\n            counterPath = _ref20[0];\n          return counterPath === path;\n        });\n        if (-1 === counterIndex) return;\n        var count = group[counterIndex][1];\n        count--, count < 1 ? group.splice(counterIndex, 1) : group[counterIndex][1] = count, 0 === group.length ? this.mirrorCount.delete(groupKey) : this.mirrorCount.set(groupKey, group);\n      }\n    }]);\n  }();\n  __decorate([_$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").b], StoreBackend.prototype, \"set\", null), __decorate([_$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").b], StoreBackend.prototype, \"free\", null);\n  var slotsFreedAfterLastMirror = [\"selection\"];\n  var StoreFrontend = /*#__PURE__*/function () {\n    function StoreFrontend(backend, path, onBackendUpdateRequested, subscriptionPriority) {\n      (0, _classCallCheck2.default)(this, StoreFrontend);\n      this.backend = backend, this.path = path, this.onBackendUpdateRequested = onBackendUpdateRequested, this.subscriptionPriority = subscriptionPriority, this.localMirrors = new Map(), this.updateCallbacks = [], this.destroyed = !1;\n    }\n    return (0, _createClass2.default)(StoreFrontend, [{\n      key: \"useSlot\",\n      value: function useSlot(widgetId, slot) {\n        var localMirror = this.getOrCreateLocalMirror(widgetId, slot, slotsFreedAfterLastMirror.includes(slot));\n        return (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").b)(localMirror.value$, (0, _$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").b)(localMirror.setValue));\n      }\n    }, {\n      key: \"useBackendSlot\",\n      value: function useBackendSlot(widgetId, slot) {\n        return this.backend.get$(widgetId, slot, this.path);\n      }\n    }, {\n      key: \"getAll$\",\n      value: function getAll$(slot) {\n        var allEntries$ = this.backend.getAllEntries$(slot, this.path);\n        return (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").f)(\"getAll$({slot})\", function () {\n          return allEntries$.dependOn().map(function (e) {\n            return e.value;\n          });\n        });\n      }\n    }, {\n      key: \"getSubscriptionPriority\",\n      value: function getSubscriptionPriority() {\n        return this.subscriptionPriority;\n      }\n    }, {\n      key: \"addUpdateCallback\",\n      value: function addUpdateCallback(callback) {\n        this.destroyed ? callback() : (this.updateCallbacks.push(callback), this.onBackendUpdateRequested());\n      }\n    }, {\n      key: \"updateFromBackend\",\n      value: function updateFromBackend() {\n        for (var mirror of this.localMirrors.values()) mirror.updateFromBackend();\n        this.flushUpdateCallbacks();\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        for (var mirror of this.localMirrors.values()) mirror.free();\n        this.localMirrors.clear(), this.flushUpdateCallbacks(), this.destroyed = !0;\n      }\n    }, {\n      key: \"flushUpdateCallbacks\",\n      value: function flushUpdateCallbacks() {\n        this.updateCallbacks.splice(0).forEach(function (c) {\n          return c();\n        });\n      }\n    }, {\n      key: \"getOrCreateLocalMirror\",\n      value: function getOrCreateLocalMirror(widgetId, slot, freeWhenLastMirror) {\n        var _this2 = this;\n        var key = `${widgetId}â${slot}`,\n          existingMirror = this.localMirrors.get(key);\n        if (existingMirror) return existingMirror;\n        var localValue;\n        var backendValue$ = this.backend.get$(widgetId, slot, this.path);\n        var currentBackendValue, backendValueSubscription;\n        freeWhenLastMirror && this.backend.registerLocalMirror(widgetId, slot, this.path);\n        var _useDependency = (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").h)(`localValue(${widgetId}, ${slot})`, function () {\n            (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)(backendValueSubscription)(), backendValueSubscription = void 0;\n          }, function () {\n            currentBackendValue = localValue = (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").r)(backendValue$), backendValueSubscription = (0, _$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").a)(function () {\n              return backendValue$.dependOn();\n            }, function (v) {\n              v !== currentBackendValue && (currentBackendValue = v, _this2.onBackendUpdateRequested());\n            }, {\n              name: `copy backendValue for (${widgetId}, ${slot})`\n            });\n          }),\n          _useDependency2 = (0, _slicedToArray2.default)(_useDependency, 2),\n          localValueTracker$ = _useDependency2[0],\n          localValueChanged = _useDependency2[1];\n        var didSetValue = !1;\n        var newMirror = {\n          value$: (0, _$$_REQUIRE(_dependencyMap[6], \"./d8tU0RI4.js\").f)(`get$(${widgetId}, ${slot})`, function () {\n            return localValueTracker$.dependOn(), localValue;\n          }),\n          setValue: function setValue(value) {\n            if (!_this2.localMirrors.has(key)) throw new Error(`Error trying to set value to ${key}. The slot has already been freed.`);\n            didSetValue = !0, (0, _$$_REQUIRE(_dependencyMap[9], \"./CF3f8JjG.js\").d)(value, localValue) || localValueChanged(), _this2.backend.set(widgetId, slot, _this2.path, value), currentBackendValue = localValue = value;\n          },\n          updateFromBackend: function updateFromBackend() {\n            void 0 === backendValueSubscription || (0, _$$_REQUIRE(_dependencyMap[9], \"./CF3f8JjG.js\").d)(currentBackendValue, localValue) || (localValueChanged(), localValue = currentBackendValue);\n          },\n          free: function free() {\n            if (\"localvariable\" !== slot) return freeWhenLastMirror ? (_this2.backend.unregisterLocalMirror(widgetId, slot, _this2.path), didSetValue && _this2.backend.set(widgetId, slot, _this2.path, void 0), void _this2.backend.free(widgetId, slot, _this2.path)) : void (didSetValue && _this2.backend.free(widgetId, slot, _this2.path));\n          }\n        };\n        return this.localMirrors.set(key, newMirror), newMirror;\n      }\n    }]);\n  }();\n  __decorate([_$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").b], StoreFrontend.prototype, \"updateFromBackend\", null), __decorate([_$$_REQUIRE(_dependencyMap[8], \"./C8qSJwIh.js\").b], StoreFrontend.prototype, \"destroy\", null);\n  var StoreBackendContext = exports.S = (0, _react.createContext)(void 0),\n    StorePathContext = exports.b = (0, _react.createContext)(void 0),\n    SubscriptionPriorityContext = exports.d = (0, _react.createContext)(0);\n  function RootStoreProvider(props) {\n    return (0, _jsxRuntime.jsx)(StoreBackendContext.Provider, {\n      value: props.backend,\n      children: (0, _jsxRuntime.jsx)(StorePathContext.Provider, {\n        value: \"*;\",\n        children: props.children\n      })\n    });\n  }\n  function useComponentStore() {\n    var backend = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StoreBackendContext)),\n      storePath = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StorePathContext)),\n      subscriptionPriority = (0, _react.useContext)(SubscriptionPriorityContext),\n      forceUpdate = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").j)(),\n      frontend = (0, _react.useMemo)(function () {\n        return new StoreFrontend(backend, storePath, forceUpdate, subscriptionPriority);\n      }, [backend, storePath, forceUpdate, subscriptionPriority]);\n    return (0, _react.useLayoutEffect)(function () {\n      return function () {\n        return frontend.destroy();\n      };\n    }, [backend]), frontend.updateFromBackend(), frontend;\n  }\n  function useStoreBackendValue(widgetId, slot) {\n    var backend = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StoreBackendContext)),\n      storePath = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StorePathContext));\n    (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").g)(backend, storePath, widgetId, slot);\n    return [(0, _react.useMemo)(function () {\n      return backend.get$(widgetId, slot, storePath);\n    }, []), (0, _react.useCallback)(function (value) {\n      return backend.set(widgetId, slot, storePath, value);\n    }, [])];\n  }\n  function useOwnStoreBackendSlot(widgetId, slot) {\n    var backend = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StoreBackendContext)),\n      storePath = (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StorePathContext));\n    (0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").g)(backend, storePath, widgetId, slot), (0, _react.useLayoutEffect)(function () {\n      return function () {\n        return backend.free(widgetId, slot, storePath);\n      };\n    }, []);\n  }\n  function NestedStoreProvider(props) {\n    var childStorePath = function (parent, namespace) {\n      if (namespace.includes(\";\")) throw new (_$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").A)(`Illegal character ';' in namespace: ${namespace}`);\n      return `${parent}${namespace};`;\n    }((0, _$$_REQUIRE(_dependencyMap[7], \"./BzY-eDl-.js\").e)((0, _react.useContext)(StorePathContext)), props.namespace);\n    return (0, _jsxRuntime.jsxs)(StorePathContext.Provider, {\n      value: childStorePath,\n      children: [props.setupStore ? (0, _jsxRuntime.jsx)(CurrentStoreHandler, {\n        callback: props.setupStore\n      }) : null, props.children]\n    });\n  }\n  function CurrentStoreHandler(props) {\n    var currentStore = useComponentStore();\n    return (0, _react.useMemo)(function () {\n      return props.callback(currentStore);\n    }, [props.callback, currentStore]), null;\n  }\n});","lineCount":373,"map":[[17,2,1,0],[17,6,1,0,"_jsxRuntime"],[17,17,1,0],[17,20,1,0,"_$$_REQUIRE"],[17,31,1,0],[17,32,1,0,"_dependencyMap"],[17,46,1,0],[18,2,1,40],[18,6,1,40,"_react"],[18,12,1,40],[18,15,1,40,"_$$_REQUIRE"],[18,26,1,40],[18,27,1,40,"_dependencyMap"],[18,41,1,40],[19,2,1,453],[19,11,1,462,"__decorate"],[19,21,1,472,"__decorate"],[19,22,1,473,"decorators"],[19,32,1,483],[19,34,1,484,"target"],[19,40,1,490],[19,42,1,491,"key"],[19,45,1,494],[19,47,1,495,"desc"],[19,51,1,499],[19,53,1,500],[20,4,1,501],[20,8,1,505,"d"],[20,9,1,506],[21,6,1,507,"c"],[21,7,1,508],[21,10,1,509,"arguments"],[21,19,1,518],[21,20,1,519,"length"],[21,26,1,525],[22,6,1,526,"r"],[22,7,1,527],[22,10,1,528,"c"],[22,11,1,529],[22,14,1,530],[22,15,1,531],[22,18,1,532,"target"],[22,24,1,538],[22,27,1,539],[22,31,1,543],[22,36,1,546,"desc"],[22,40,1,550],[22,43,1,551,"desc"],[22,47,1,555],[22,50,1,556,"Object"],[22,56,1,562],[22,57,1,563,"getOwnPropertyDescriptor"],[22,81,1,587],[22,82,1,588,"target"],[22,88,1,594],[22,90,1,595,"key"],[22,93,1,598],[22,94,1,599],[22,97,1,600,"desc"],[22,101,1,604],[23,4,1,605],[23,8,1,608],[23,16,1,616],[23,20,1,618],[23,27,1,625,"Reflect"],[23,34,1,632],[23,38,1,634],[23,48,1,644],[23,52,1,646],[23,59,1,653,"Reflect"],[23,66,1,660],[23,67,1,661,"decorate"],[23,75,1,669],[23,77,1,670,"r"],[23,78,1,671],[23,81,1,672,"Reflect"],[23,88,1,679],[23,89,1,680,"decorate"],[23,97,1,688],[23,98,1,689,"decorators"],[23,108,1,699],[23,110,1,700,"target"],[23,116,1,706],[23,118,1,707,"key"],[23,121,1,710],[23,123,1,711,"desc"],[23,127,1,715],[23,128,1,716],[23,129,1,717],[23,134,1,722],[23,139,1,726],[23,143,1,730,"i"],[23,144,1,731],[23,147,1,732,"decorators"],[23,157,1,742],[23,158,1,743,"length"],[23,164,1,749],[23,167,1,750],[23,168,1,751],[23,170,1,752,"i"],[23,171,1,753],[23,175,1,755],[23,176,1,756],[23,178,1,757,"i"],[23,179,1,758],[23,181,1,760],[23,183,1,761],[23,184,1,762,"d"],[23,185,1,763],[23,188,1,764,"decorators"],[23,198,1,774],[23,199,1,775,"i"],[23,200,1,776],[23,201,1,777],[23,207,1,781,"r"],[23,208,1,782],[23,211,1,783],[23,212,1,784,"c"],[23,213,1,785],[23,216,1,786],[23,217,1,787],[23,220,1,788,"d"],[23,221,1,789],[23,222,1,790,"r"],[23,223,1,791],[23,224,1,792],[23,227,1,793,"c"],[23,228,1,794],[23,231,1,795],[23,232,1,796],[23,235,1,797,"d"],[23,236,1,798],[23,237,1,799,"target"],[23,243,1,805],[23,245,1,806,"key"],[23,248,1,809],[23,250,1,810,"r"],[23,251,1,811],[23,252,1,812],[23,255,1,813,"d"],[23,256,1,814],[23,257,1,815,"target"],[23,263,1,821],[23,265,1,822,"key"],[23,268,1,825],[23,269,1,826],[23,274,1,829,"r"],[23,275,1,830],[23,276,1,831],[24,4,1,832],[24,11,1,839,"c"],[24,12,1,840],[24,15,1,841],[24,16,1,842],[24,20,1,844,"r"],[24,21,1,845],[24,25,1,847,"Object"],[24,31,1,853],[24,32,1,854,"defineProperty"],[24,46,1,868],[24,47,1,869,"target"],[24,53,1,875],[24,55,1,876,"key"],[24,58,1,879],[24,60,1,880,"r"],[24,61,1,881],[24,62,1,882],[24,64,1,883,"r"],[24,65,1,884],[25,2,1,884],[26,2,1,885],[26,12,1,895],[26,16,1,897],[26,23,1,904,"SuppressedError"],[26,38,1,919],[26,42,1,921,"SuppressedError"],[26,57,1,936],[27,2,1,937],[27,6,1,943,"rootPath"],[27,14,1,951],[27,17,1,951,"exports"],[27,24,1,951],[27,25,1,951,"r"],[27,26,1,951],[27,29,1,952],[27,33,1,956],[28,2,1,957],[28,11,1,966,"isAncestorOrSelf"],[28,27,1,982,"isAncestorOrSelf"],[28,28,1,983,"parent"],[28,34,1,989],[28,36,1,990,"path"],[28,40,1,994],[28,42,1,995],[29,4,1,996],[29,11,1,1003,"path"],[29,15,1,1007],[29,16,1,1008,"startsWith"],[29,26,1,1018],[29,27,1,1019,"parent"],[29,33,1,1025],[29,34,1,1026],[30,2,1,1026],[31,2,1,1027],[31,6,1,1033,"StoreBackend"],[31,18,1,1045],[31,21,1,1045,"exports"],[31,28,1,1045],[31,29,1,1045,"e"],[31,30,1,1045],[32,4,1,1046],[32,13,1,1046,"StoreBackend"],[32,26,1,1046],[32,28,1,1059],[33,6,1,1059],[33,10,1,1059,"_classCallCheck2"],[33,26,1,1059],[33,27,1,1059,"default"],[33,34,1,1059],[33,42,1,1059,"StoreBackend"],[33,54,1,1059],[34,6,1,1060],[34,10,1,1064],[34,11,1,1065,"recordGroups"],[34,23,1,1077],[34,26,1,1078],[34,30,1,1082,"Map"],[34,33,1,1085],[34,34,1,1084],[34,35,1,1085],[34,37,1,1086],[34,41,1,1090],[34,42,1,1091,"mirrorCount"],[34,53,1,1102],[34,56,1,1103],[34,60,1,1107,"Map"],[34,63,1,1110],[34,64,1,1109],[34,65,1,1110],[34,67,1,1111],[34,71,1,1115],[34,72,1,1116,"usedSlotsCount"],[34,86,1,1130],[34,89,1,1131],[34,93,1,1135,"Map"],[34,96,1,1138],[34,97,1,1137],[34,98,1,1138],[34,100,1,1139],[34,104,1,1143],[34,105,1,1144,"slotObservers"],[34,118,1,1157],[34,121,1,1158],[34,125,1,1162,"Map"],[34,128,1,1165],[34,129,1,1164],[34,130,1,1165],[35,4,1,1165],[36,4,1,1166],[36,15,1,1166,"_createClass2"],[36,28,1,1166],[36,29,1,1166,"default"],[36,36,1,1166],[36,38,1,1166,"StoreBackend"],[36,50,1,1166],[37,6,1,1166,"key"],[37,9,1,1166],[38,6,1,1166,"value"],[38,11,1,1166],[38,22,1,1166,"get$"],[38,26,1,1170,"get$"],[38,27,1,1171,"widgetId"],[38,35,1,1179],[38,37,1,1180,"slot"],[38,41,1,1184],[38,43,1,1185,"path"],[38,47,1,1189],[38,49,1,1190],[39,8,1,1191],[39,12,1,1197,"recordsGroup"],[39,24,1,1209],[39,27,1,1210],[39,31,1,1214],[39,32,1,1215,"getOrCreateGroup"],[39,48,1,1231],[39,49,1,1232,"widgetId"],[39,57,1,1240],[39,59,1,1241,"slot"],[39,63,1,1245],[39,64,1,1246],[40,8,1,1247],[40,12,1,1251,"recordWithExactPath"],[40,31,1,1270],[41,8,1,1271],[41,15,1,1278],[41,19,1,1278,"fromComputation$"],[41,49,1,1278],[41,50,1,1278,"fromComputation$"],[41,68,1,1294],[41,70,1,1295],[41,86,1,1311,"widgetId"],[41,94,1,1319],[41,99,1,1324,"slot"],[41,103,1,1328],[41,108,1,1333,"path"],[41,112,1,1337],[41,115,1,1340],[41,117,1,1342],[41,129,1,1346],[42,10,1,1347],[42,14,1,1350,"recordWithExactPath"],[42,33,1,1369],[42,35,1,1370],[42,42,1,1377,"recordWithExactPath"],[42,61,1,1396],[42,62,1,1397,"get"],[42,65,1,1400],[42,66,1,1401],[42,67,1,1402],[43,10,1,1403],[43,14,1,1409,"bestMatchingRecord"],[43,32,1,1427],[43,35,1,1428,"recordsGroup"],[43,47,1,1440],[43,48,1,1441,"filter"],[43,54,1,1447],[43,55,1,1449],[43,65,1,1449,"_ref"],[43,69,1,1449],[44,12,1,1449],[44,16,1,1449,"_ref2"],[44,21,1,1449],[44,28,1,1449,"_slicedToArray2"],[44,43,1,1449],[44,44,1,1449,"default"],[44,51,1,1449],[44,53,1,1449,"_ref"],[44,57,1,1449],[45,14,1,1451,"recordPath"],[45,24,1,1461],[45,27,1,1461,"_ref2"],[45,32,1,1461],[46,12,1,1461],[46,19,1,1465,"isAncestorOrSelf"],[46,35,1,1481],[46,36,1,1482,"recordPath"],[46,46,1,1492],[46,48,1,1493,"path"],[46,52,1,1497],[46,53,1,1498],[47,10,1,1498],[47,11,1,1499],[47,12,1,1500],[47,13,1,1501,"pop"],[47,16,1,1504],[47,17,1,1505],[47,18,1,1506],[48,10,1,1507],[48,17,1,1514,"bestMatchingRecord"],[48,35,1,1532],[48,39,1,1534,"bestMatchingRecord"],[48,57,1,1552],[48,58,1,1553],[48,59,1,1554],[48,60,1,1555],[48,65,1,1558,"path"],[48,69,1,1562],[48,74,1,1565,"recordWithExactPath"],[48,93,1,1584],[48,96,1,1585,"bestMatchingRecord"],[48,114,1,1603],[48,115,1,1604],[48,116,1,1605],[48,117,1,1606],[48,118,1,1607],[48,120,1,1608,"bestMatchingRecord"],[48,138,1,1626],[48,139,1,1627],[48,140,1,1628],[48,141,1,1629],[48,142,1,1630,"get"],[48,145,1,1633],[48,146,1,1634],[48,147,1,1635],[48,151,1,1637],[48,156,1,1642],[48,157,1,1643],[49,8,1,1643],[49,9,1,1645],[49,10,1,1646],[50,6,1,1646],[51,4,1,1647],[52,6,1,1647,"key"],[52,9,1,1647],[53,6,1,1647,"value"],[53,11,1,1647],[53,22,1,1647,"set"],[53,25,1,1650,"set"],[53,26,1,1651,"widgetId"],[53,34,1,1659],[53,36,1,1660,"slot"],[53,40,1,1664],[53,42,1,1665,"path"],[53,46,1,1669],[53,48,1,1670,"value"],[53,53,1,1675],[53,55,1,1676],[54,8,1,1676],[54,12,1,1676,"_this$usedSlotsCount$"],[54,33,1,1676],[55,8,1,1677],[55,12,1,1683,"recordsGroup"],[55,24,1,1695],[55,27,1,1696],[55,31,1,1700],[55,32,1,1701,"getOrCreateGroup"],[55,48,1,1717],[55,49,1,1718,"widgetId"],[55,57,1,1726],[55,59,1,1727,"slot"],[55,63,1,1731],[55,64,1,1732],[56,10,1,1733,"existingRecord"],[56,24,1,1747],[56,27,1,1748,"recordsGroup"],[56,39,1,1760],[56,40,1,1761,"filter"],[56,46,1,1767],[56,47,1,1769],[56,57,1,1769,"_ref3"],[56,62,1,1769],[57,12,1,1769],[57,16,1,1769,"_ref4"],[57,21,1,1769],[57,28,1,1769,"_slicedToArray2"],[57,43,1,1769],[57,44,1,1769,"default"],[57,51,1,1769],[57,53,1,1769,"_ref3"],[57,58,1,1769],[58,14,1,1771,"recordPath"],[58,24,1,1781],[58,27,1,1781,"_ref4"],[58,32,1,1781],[59,12,1,1781],[59,19,1,1785,"isAncestorOrSelf"],[59,35,1,1801],[59,36,1,1802,"recordPath"],[59,46,1,1812],[59,48,1,1813,"path"],[59,52,1,1817],[59,53,1,1818],[60,10,1,1818],[60,11,1,1819],[60,12,1,1820],[60,13,1,1821,"pop"],[60,16,1,1824],[60,17,1,1825],[60,18,1,1826],[61,8,1,1827],[61,12,1,1830,"existingRecord"],[61,26,1,1844],[61,28,1,1845],[61,35,1,1852],[61,40,1,1857,"existingRecord"],[61,54,1,1871],[61,55,1,1872],[61,56,1,1873],[61,57,1,1874],[61,58,1,1875,"set"],[61,61,1,1878],[61,62,1,1879,"value"],[61,67,1,1884],[61,68,1,1885],[62,8,1,1886],[62,12,1,1892,"newRecord"],[62,21,1,1901],[62,24,1,1902],[62,28,1,1902,"tuple"],[62,58,1,1902],[62,59,1,1902,"tuple"],[62,77,1,1907],[62,79,1,1908,"path"],[62,83,1,1912],[62,85,1,1913,"observable"],[62,115,1,1913],[62,116,1,1913,"observable"],[62,134,1,1923],[62,135,1,1924,"box"],[62,138,1,1927],[62,139,1,1928,"value"],[62,144,1,1933],[62,146,1,1934],[63,12,1,1935,"deep"],[63,16,1,1939],[63,18,1,1940],[63,19,1,1941],[63,20,1,1942],[64,12,1,1943,"name"],[64,16,1,1947],[64,18,1,1948],[64,33,1,1963,"widgetId"],[64,41,1,1971],[64,46,1,1976,"slot"],[64,50,1,1980],[64,55,1,1985,"path"],[64,59,1,1989],[64,62,1,1992],[65,12,1,1993,"equals"],[65,18,1,1999],[65,20,1,2000,"deepEqual"],[65,50,1,2000],[65,51,1,2000,"deepEqual"],[66,10,1,2009],[66,11,1,2010],[66,12,1,2011],[66,13,1,2012],[67,10,1,2013,"moreSpecificRecordIndex"],[67,33,1,2036],[67,36,1,2037,"recordsGroup"],[67,48,1,2049],[67,49,1,2050,"findIndex"],[67,58,1,2059],[67,59,1,2061],[67,69,1,2061,"_ref5"],[67,74,1,2061],[68,12,1,2061],[68,16,1,2061,"_ref6"],[68,21,1,2061],[68,28,1,2061,"_slicedToArray2"],[68,43,1,2061],[68,44,1,2061,"default"],[68,51,1,2061],[68,53,1,2061,"_ref5"],[68,58,1,2061],[69,14,1,2063,"recordPath"],[69,24,1,2073],[69,27,1,2073,"_ref6"],[69,32,1,2073],[70,12,1,2073],[70,19,1,2077,"recordPath"],[70,29,1,2087],[70,30,1,2088,"length"],[70,36,1,2094],[70,39,1,2095,"path"],[70,43,1,2099],[70,44,1,2100,"length"],[70,50,1,2106],[71,10,1,2106],[71,11,1,2107],[71,12,1,2108],[72,8,1,2109],[72,9,1,2110],[72,10,1,2111],[72,15,1,2114,"moreSpecificRecordIndex"],[72,38,1,2137],[72,41,1,2138,"recordsGroup"],[72,53,1,2150],[72,54,1,2151,"push"],[72,58,1,2155],[72,59,1,2156,"newRecord"],[72,68,1,2165],[72,69,1,2166],[72,72,1,2167,"recordsGroup"],[72,84,1,2179],[72,85,1,2180,"splice"],[72,91,1,2186],[72,92,1,2187,"moreSpecificRecordIndex"],[72,115,1,2210],[72,117,1,2211],[72,118,1,2212],[72,120,1,2213,"newRecord"],[72,129,1,2222],[72,130,1,2223],[72,132,1,2224],[72,136,1,2228],[72,137,1,2229,"usedSlotsCount"],[72,151,1,2243],[72,152,1,2244,"set"],[72,155,1,2247],[72,156,1,2248,"slot"],[72,160,1,2252],[72,162,1,2253],[72,164,1,2253,"_this$usedSlotsCount$"],[72,185,1,2253],[72,188,1,2254],[72,192,1,2258],[72,193,1,2259,"usedSlotsCount"],[72,207,1,2273],[72,208,1,2274,"get"],[72,211,1,2277],[72,212,1,2278,"slot"],[72,216,1,2282],[72,217,1,2283],[72,229,1,2283,"_this$usedSlotsCount$"],[72,250,1,2283],[72,253,1,2285],[72,254,1,2286],[72,258,1,2288],[72,259,1,2289],[72,260,1,2290],[73,6,1,2290],[74,4,1,2291],[75,6,1,2291,"key"],[75,9,1,2291],[76,6,1,2291,"value"],[76,11,1,2291],[76,22,1,2291,"getAllEntries$"],[76,36,1,2305,"getAllEntries$"],[76,37,1,2306,"slot"],[76,41,1,2310],[76,43,1,2311,"path"],[76,47,1,2315],[76,49,1,2316],[77,8,1,2316],[77,12,1,2316,"_this$slotObservers$g"],[77,33,1,2316],[78,10,1,2316,"_this"],[78,15,1,2316],[79,8,1,2317],[79,12,1,2323,"slotObserver"],[79,24,1,2335],[79,28,1,2335,"_this$slotObservers$g"],[79,49,1,2335],[79,52,1,2336],[79,56,1,2340],[79,57,1,2341,"slotObservers"],[79,70,1,2354],[79,71,1,2355,"get"],[79,74,1,2358],[79,75,1,2359,"slot"],[79,79,1,2363],[79,80,1,2364],[79,92,1,2364,"_this$slotObservers$g"],[79,113,1,2364],[79,116,1,2366],[79,120,1,2366,"createAtom"],[79,150,1,2366],[79,151,1,2366,"createAtom"],[79,169,1,2376],[79,171,1,2377],[79,187,1,2393,"slot"],[79,191,1,2397],[79,194,1,2400],[79,195,1,2401],[80,8,1,2402],[80,15,1,2409],[80,19,1,2413],[80,20,1,2414,"slotObservers"],[80,33,1,2427],[80,34,1,2428,"set"],[80,37,1,2431],[80,38,1,2432,"slot"],[80,42,1,2436],[80,44,1,2437,"slotObserver"],[80,56,1,2449],[80,57,1,2450],[80,59,1,2451],[80,63,1,2451,"fromComputation$"],[80,93,1,2451],[80,94,1,2451,"fromComputation$"],[80,112,1,2467],[80,114,1,2468],[80,133,1,2487,"slot"],[80,137,1,2491],[80,142,1,2496,"path"],[80,146,1,2500],[80,149,1,2503],[80,151,1,2505],[80,163,1,2509],[81,10,1,2510,"slotObserver"],[81,22,1,2522],[81,23,1,2523,"reportObserved"],[81,37,1,2537],[81,38,1,2538],[81,39,1,2539],[82,10,1,2540],[82,14,1,2546,"result"],[82,20,1,2552],[82,23,1,2553],[82,25,1,2555],[83,10,1,2556],[83,19,1,2556,"_ref7"],[83,24,1,2556],[83,28,1,2586,"_this"],[83,33,1,2590],[83,34,1,2591,"recordGroups"],[83,46,1,2603],[83,47,1,2604,"entries"],[83,54,1,2611],[83,55,1,2612],[83,56,1,2613],[83,58,1,2614],[84,12,1,2614],[84,16,1,2614,"_ref8"],[84,21,1,2614],[84,28,1,2614,"_slicedToArray2"],[84,43,1,2614],[84,44,1,2614,"default"],[84,51,1,2614],[84,53,1,2614,"_ref7"],[84,58,1,2614],[85,12,1,2614],[85,16,1,2566,"key"],[85,19,1,2569],[85,22,1,2569,"_ref8"],[85,27,1,2569],[86,12,1,2569],[86,16,1,2570,"recordsGroup"],[86,28,1,2582],[86,31,1,2582,"_ref8"],[86,36,1,2582],[87,12,1,2615],[87,16,1,2615,"_key$split"],[87,26,1,2615],[87,29,1,2641,"key"],[87,32,1,2644],[87,33,1,2645,"split"],[87,38,1,2650],[87,39,1,2651],[87,42,1,2654],[87,43,1,2655],[88,14,1,2655,"_key$split2"],[88,25,1,2655],[88,32,1,2655,"_slicedToArray2"],[88,47,1,2655],[88,48,1,2655,"default"],[88,55,1,2655],[88,57,1,2655,"_key$split"],[88,67,1,2655],[89,14,1,2621,"groupSlot"],[89,23,1,2630],[89,26,1,2630,"_key$split2"],[89,37,1,2630],[90,14,1,2631,"widgetId"],[90,22,1,2639],[90,25,1,2639,"_key$split2"],[90,36,1,2639],[91,12,1,2656],[91,16,1,2659,"groupSlot"],[91,25,1,2668],[91,30,1,2671,"slot"],[91,34,1,2675],[91,36,1,2676],[91,45,1,2676,"_ref9"],[91,50,1,2676],[91,54,1,2710,"recordsGroup"],[91,66,1,2722],[91,67,1,2723,"toJS"],[91,71,1,2727],[91,72,1,2728],[91,73,1,2729],[91,74,1,2730,"reverse"],[91,81,1,2737],[91,82,1,2738],[91,83,1,2739],[92,14,1,2739],[92,18,1,2739,"_ref10"],[92,24,1,2739],[92,31,1,2739,"_slicedToArray2"],[92,46,1,2739],[92,47,1,2739,"default"],[92,54,1,2739],[92,56,1,2739,"_ref9"],[92,61,1,2739],[93,14,1,2739],[93,18,1,2686,"recordPath"],[93,28,1,2696],[93,31,1,2696,"_ref10"],[93,37,1,2696],[94,14,1,2696],[94,18,1,2697,"recordBox"],[94,27,1,2706],[94,30,1,2706,"_ref10"],[94,36,1,2706],[95,14,1,2740,"path"],[95,18,1,2744],[95,22,1,2746],[95,23,1,2747,"isAncestorOrSelf"],[95,39,1,2763],[95,40,1,2764,"path"],[95,44,1,2768],[95,46,1,2769,"recordPath"],[95,56,1,2779],[95,57,1,2780],[95,61,1,2782,"result"],[95,67,1,2788],[95,68,1,2789,"push"],[95,72,1,2793],[95,73,1,2794],[96,16,1,2795,"widgetId"],[96,24,1,2803],[96,26,1,2804,"widgetId"],[96,34,1,2812],[97,16,1,2813,"path"],[97,20,1,2817],[97,22,1,2818,"recordPath"],[97,32,1,2828],[98,16,1,2829,"value"],[98,21,1,2834],[98,23,1,2835,"recordBox"],[98,32,1,2844],[98,33,1,2845,"get"],[98,36,1,2848],[98,37,1,2849],[99,14,1,2850],[99,15,1,2851],[99,16,1,2852],[100,12,1,2852],[101,10,1,2852],[102,10,1,2853],[102,17,1,2860,"result"],[102,23,1,2866],[103,8,1,2866],[103,9,1,2868],[103,10,1,2869],[104,6,1,2869],[105,4,1,2870],[106,6,1,2870,"key"],[106,9,1,2870],[107,6,1,2870,"value"],[107,11,1,2870],[107,22,1,2870,"free"],[107,26,1,2874,"free"],[107,27,1,2875,"widgetId"],[107,35,1,2883],[107,37,1,2884,"slot"],[107,41,1,2888],[107,43,1,2889,"path"],[107,47,1,2893],[107,49,1,2894],[108,8,1,2894],[108,12,1,2894,"_this$usedSlotsCount$2"],[108,34,1,2894],[109,8,1,2895],[109,12,1,2899,"currentCount"],[109,24,1,2911],[109,28,1,2911,"_this$usedSlotsCount$2"],[109,50,1,2911],[109,53,1,2912],[109,57,1,2916],[109,58,1,2917,"usedSlotsCount"],[109,72,1,2931],[109,73,1,2932,"get"],[109,76,1,2935],[109,77,1,2936,"slot"],[109,81,1,2940],[109,82,1,2941],[109,94,1,2941,"_this$usedSlotsCount$2"],[109,116,1,2941],[109,119,1,2943],[109,120,1,2944],[110,8,1,2945],[110,12,1,2951,"groupKey"],[110,20,1,2959],[110,23,1,2960],[110,27,1,2964],[110,28,1,2965,"groupKey"],[110,36,1,2973],[110,37,1,2974,"widgetId"],[110,45,1,2982],[110,47,1,2983,"slot"],[110,51,1,2987],[110,52,1,2988],[111,10,1,2989,"recordsGroup"],[111,22,1,3001],[111,25,1,3002],[111,29,1,3006],[111,30,1,3007,"recordGroups"],[111,42,1,3019],[111,43,1,3020,"get"],[111,46,1,3023],[111,47,1,3024,"groupKey"],[111,55,1,3032],[111,56,1,3033],[112,8,1,3034],[112,13,1,3039],[112,14,1,3040],[112,19,1,3043,"recordsGroup"],[112,31,1,3055],[112,36,1,3058],[112,40,1,3062],[112,41,1,3063,"hasMirrors"],[112,51,1,3073],[112,52,1,3074,"groupKey"],[112,60,1,3082],[112,62,1,3083,"path"],[112,66,1,3087],[112,67,1,3088],[112,71,1,3090,"recordsGroup"],[112,83,1,3102],[112,84,1,3103,"filter"],[112,90,1,3109],[112,91,1,3111],[112,101,1,3111,"_ref11"],[112,107,1,3111],[113,10,1,3111],[113,14,1,3111,"_ref12"],[113,20,1,3111],[113,27,1,3111,"_slicedToArray2"],[113,42,1,3111],[113,43,1,3111,"default"],[113,50,1,3111],[113,52,1,3111,"_ref11"],[113,58,1,3111],[114,12,1,3113,"recordPath"],[114,22,1,3123],[114,25,1,3123,"_ref12"],[114,31,1,3123],[115,10,1,3123],[115,17,1,3127,"isAncestorOrSelf"],[115,33,1,3143],[115,34,1,3144,"path"],[115,38,1,3148],[115,40,1,3149,"recordPath"],[115,50,1,3159],[115,51,1,3160],[116,8,1,3160],[116,9,1,3161],[116,10,1,3162],[116,11,1,3163,"forEach"],[116,18,1,3170],[116,19,1,3172],[116,29,1,3172,"record"],[116,35,1,3178],[116,37,1,3180],[117,10,1,3181,"recordsGroup"],[117,22,1,3193],[117,23,1,3194,"remove"],[117,29,1,3200],[117,30,1,3201,"record"],[117,36,1,3207],[117,37,1,3208],[117,39,1,3209,"currentCount"],[117,51,1,3221],[117,53,1,3223],[118,8,1,3223],[118,9,1,3225],[118,10,1,3226],[118,12,1,3227],[118,13,1,3228],[118,18,1,3231,"recordsGroup"],[118,30,1,3243],[118,31,1,3244,"length"],[118,37,1,3250],[118,41,1,3252],[118,45,1,3256],[118,46,1,3257,"recordGroups"],[118,58,1,3269],[118,59,1,3270,"delete"],[118,65,1,3276],[118,66,1,3277,"groupKey"],[118,74,1,3285],[118,75,1,3286],[118,77,1,3287,"currentCount"],[118,89,1,3299],[118,92,1,3300],[118,93,1,3301],[118,96,1,3302],[118,100,1,3306],[118,101,1,3307,"usedSlotsCount"],[118,115,1,3321],[118,116,1,3322,"delete"],[118,122,1,3328],[118,123,1,3329,"slot"],[118,127,1,3333],[118,128,1,3334],[118,131,1,3335],[118,135,1,3339],[118,136,1,3340,"usedSlotsCount"],[118,150,1,3354],[118,151,1,3355,"set"],[118,154,1,3358],[118,155,1,3359,"slot"],[118,159,1,3363],[118,161,1,3364,"currentCount"],[118,173,1,3376],[118,174,1,3377],[118,175,1,3378],[119,6,1,3378],[120,4,1,3379],[121,6,1,3379,"key"],[121,9,1,3379],[122,6,1,3379,"value"],[122,11,1,3379],[122,22,1,3379,"getUsedSlots"],[122,34,1,3391,"getUsedSlots"],[122,35,1,3391],[122,37,1,3393],[123,8,1,3394],[123,15,1,3401,"Array"],[123,20,1,3406],[123,21,1,3407,"from"],[123,25,1,3411],[123,26,1,3412],[123,30,1,3416],[123,31,1,3417,"usedSlotsCount"],[123,45,1,3431],[123,46,1,3432,"entries"],[123,53,1,3439],[123,54,1,3440],[123,55,1,3441],[123,56,1,3442],[123,57,1,3443,"filter"],[123,63,1,3449],[123,64,1,3451],[123,74,1,3451,"_ref13"],[123,80,1,3451],[124,10,1,3451],[124,14,1,3451,"_ref14"],[124,20,1,3451],[124,27,1,3451,"_slicedToArray2"],[124,42,1,3451],[124,43,1,3451,"default"],[124,50,1,3451],[124,52,1,3451,"_ref13"],[124,58,1,3451],[125,12,1,3453,"_"],[125,13,1,3454],[125,16,1,3454,"_ref14"],[125,22,1,3454],[126,12,1,3455,"value"],[126,17,1,3460],[126,20,1,3460,"_ref14"],[126,26,1,3460],[127,10,1,3460],[127,17,1,3464,"value"],[127,22,1,3469],[127,25,1,3470],[127,26,1,3471],[128,8,1,3471],[128,9,1,3472],[128,10,1,3473],[128,11,1,3474,"map"],[128,14,1,3477],[128,15,1,3479],[128,25,1,3479,"_ref15"],[128,31,1,3479],[129,10,1,3479],[129,14,1,3479,"_ref16"],[129,20,1,3479],[129,27,1,3479,"_slicedToArray2"],[129,42,1,3479],[129,43,1,3479,"default"],[129,50,1,3479],[129,52,1,3479,"_ref15"],[129,58,1,3479],[130,12,1,3481,"key"],[130,15,1,3484],[130,18,1,3484,"_ref16"],[130,24,1,3484],[131,10,1,3484],[131,17,1,3488,"key"],[131,20,1,3491],[132,8,1,3491],[132,9,1,3492],[132,10,1,3493],[133,6,1,3493],[134,4,1,3494],[135,6,1,3494,"key"],[135,9,1,3494],[136,6,1,3494,"value"],[136,11,1,3494],[136,22,1,3494,"groupKey"],[136,30,1,3502,"groupKey"],[136,31,1,3503,"widgetId"],[136,39,1,3511],[136,41,1,3512,"slot"],[136,45,1,3516],[136,47,1,3517],[137,8,1,3518],[137,15,1,3524],[137,18,1,3527,"slot"],[137,22,1,3531],[137,26,1,3535,"widgetId"],[137,34,1,3543],[137,36,1,3545],[138,6,1,3545],[139,4,1,3546],[140,6,1,3546,"key"],[140,9,1,3546],[141,6,1,3546,"value"],[141,11,1,3546],[141,22,1,3546,"getOrCreateGroup"],[141,38,1,3562,"getOrCreateGroup"],[141,39,1,3563,"widgetId"],[141,47,1,3571],[141,49,1,3572,"slot"],[141,53,1,3576],[141,55,1,3577],[142,8,1,3577],[142,12,1,3577,"_this$slotObservers$g2"],[142,34,1,3577],[143,8,1,3578],[143,12,1,3584,"recordsKey"],[143,22,1,3594],[143,25,1,3595],[143,29,1,3599],[143,30,1,3600,"groupKey"],[143,38,1,3608],[143,39,1,3609,"widgetId"],[143,47,1,3617],[143,49,1,3618,"slot"],[143,53,1,3622],[143,54,1,3623],[144,10,1,3624,"existingGroup"],[144,23,1,3637],[144,26,1,3638],[144,30,1,3642],[144,31,1,3643,"recordGroups"],[144,43,1,3655],[144,44,1,3656,"get"],[144,47,1,3659],[144,48,1,3660,"recordsKey"],[144,58,1,3670],[144,59,1,3671],[145,8,1,3672],[145,12,1,3675,"existingGroup"],[145,25,1,3688],[145,27,1,3689],[145,34,1,3696,"existingGroup"],[145,47,1,3709],[146,8,1,3710],[146,12,1,3716,"newGroup"],[146,20,1,3724],[146,23,1,3725,"observable"],[146,53,1,3725],[146,54,1,3725,"observable"],[146,72,1,3735],[146,73,1,3736,"array"],[146,78,1,3741],[146,79,1,3742],[146,81,1,3744],[146,83,1,3745],[147,10,1,3746,"deep"],[147,14,1,3750],[147,16,1,3751],[147,17,1,3752],[147,18,1,3753],[148,10,1,3754,"name"],[148,14,1,3758],[148,16,1,3759],[148,33,1,3776,"widgetId"],[148,41,1,3784],[148,46,1,3789,"slot"],[148,50,1,3793],[149,8,1,3796],[149,9,1,3797],[149,10,1,3798],[150,8,1,3799],[150,15,1,3806],[150,19,1,3810],[150,20,1,3811,"recordGroups"],[150,32,1,3823],[150,33,1,3824,"set"],[150,36,1,3827],[150,37,1,3828,"recordsKey"],[150,47,1,3838],[150,49,1,3839,"newGroup"],[150,57,1,3847],[150,58,1,3848],[150,61,1,3848,"_this$slotObservers$g2"],[150,83,1,3848],[150,86,1,3849],[150,90,1,3853],[150,91,1,3854,"slotObservers"],[150,104,1,3867],[150,105,1,3868,"get"],[150,108,1,3871],[150,109,1,3872,"slot"],[150,113,1,3876],[150,114,1,3877],[150,127,1,3849,"_this$slotObservers$g2"],[150,149,1,3849],[150,150,1,3879,"reportChanged"],[150,163,1,3892],[150,164,1,3893],[150,165,1,3894],[150,167,1,3895,"newGroup"],[150,175,1,3903],[151,6,1,3903],[152,4,1,3904],[153,6,1,3904,"key"],[153,9,1,3904],[154,6,1,3904,"value"],[154,11,1,3904],[154,22,1,3904,"hasMirrors"],[154,32,1,3914,"hasMirrors"],[154,33,1,3915,"groupKey"],[154,41,1,3923],[154,43,1,3924,"path"],[154,47,1,3928],[154,49,1,3929],[155,8,1,3930],[155,12,1,3936,"group"],[155,17,1,3941],[155,20,1,3942],[155,24,1,3946],[155,25,1,3947,"mirrorCount"],[155,36,1,3958],[155,37,1,3959,"get"],[155,40,1,3962],[155,41,1,3963,"groupKey"],[155,49,1,3971],[155,50,1,3972],[156,8,1,3973],[156,12,1,3976],[156,17,1,3981],[156,18,1,3982],[156,23,1,3985,"group"],[156,28,1,3990],[156,30,1,3991],[156,37,1,3997],[156,38,1,3998],[156,39,1,3999],[157,8,1,4000],[157,13,1,4004],[157,17,1,4008,"i"],[157,18,1,4009],[157,21,1,4010,"group"],[157,26,1,4015],[157,27,1,4016,"length"],[157,33,1,4022],[157,36,1,4023],[157,37,1,4024],[157,39,1,4025,"i"],[157,40,1,4026],[157,44,1,4028],[157,45,1,4029],[157,47,1,4030,"i"],[157,48,1,4031],[157,50,1,4033],[157,52,1,4034],[158,10,1,4034],[158,14,1,4034,"_group$i"],[158,22,1,4034],[159,10,1,4035],[159,14,1,4041,"counterPath"],[159,25,1,4052],[159,29,1,4052,"_group$i"],[159,37,1,4052],[159,40,1,4053,"group"],[159,45,1,4058],[159,46,1,4059,"i"],[159,47,1,4060],[159,48,1,4061],[159,69,1,4053,"_group$i"],[159,77,1,4053],[159,78,1,4064],[159,79,1,4065],[159,80,1,4066],[160,10,1,4067],[160,14,1,4070,"counterPath"],[160,25,1,4081],[160,29,1,4083,"isAncestorOrSelf"],[160,45,1,4099],[160,46,1,4100,"path"],[160,50,1,4104],[160,52,1,4105,"counterPath"],[160,63,1,4116],[160,64,1,4117],[160,66,1,4118],[160,73,1,4124],[160,74,1,4125],[160,75,1,4126],[161,8,1,4126],[162,8,1,4127],[162,15,1,4133],[162,16,1,4134],[162,17,1,4135],[163,6,1,4135],[164,4,1,4136],[165,6,1,4136,"key"],[165,9,1,4136],[166,6,1,4136,"value"],[166,11,1,4136],[166,22,1,4136,"registerLocalMirror"],[166,41,1,4155,"registerLocalMirror"],[166,42,1,4156,"widgetId"],[166,50,1,4164],[166,52,1,4165,"slot"],[166,56,1,4169],[166,58,1,4170,"path"],[166,62,1,4174],[166,64,1,4175],[167,8,1,4175],[167,12,1,4175,"_this$mirrorCount$get"],[167,33,1,4175],[168,8,1,4176],[168,12,1,4182,"groupKey"],[168,20,1,4190],[168,23,1,4191],[168,27,1,4195],[168,28,1,4196,"groupKey"],[168,36,1,4204],[168,37,1,4205,"widgetId"],[168,45,1,4213],[168,47,1,4214,"slot"],[168,51,1,4218],[168,52,1,4219],[169,10,1,4220,"group"],[169,15,1,4225],[169,19,1,4225,"_this$mirrorCount$get"],[169,40,1,4225],[169,43,1,4226],[169,47,1,4230],[169,48,1,4231,"mirrorCount"],[169,59,1,4242],[169,60,1,4243,"get"],[169,63,1,4246],[169,64,1,4247,"groupKey"],[169,72,1,4255],[169,73,1,4256],[169,85,1,4256,"_this$mirrorCount$get"],[169,106,1,4256],[169,109,1,4258],[169,111,1,4260],[170,8,1,4261],[170,12,1,4265,"counterIndex"],[170,24,1,4277],[170,27,1,4278,"group"],[170,32,1,4283],[170,33,1,4284,"findIndex"],[170,42,1,4293],[170,43,1,4295],[170,53,1,4295,"_ref17"],[170,59,1,4295],[171,10,1,4295],[171,14,1,4295,"_ref18"],[171,20,1,4295],[171,27,1,4295,"_slicedToArray2"],[171,42,1,4295],[171,43,1,4295,"default"],[171,50,1,4295],[171,52,1,4295,"_ref17"],[171,58,1,4295],[172,12,1,4297,"counterPath"],[172,23,1,4308],[172,26,1,4308,"_ref18"],[172,32,1,4308],[173,10,1,4308],[173,17,1,4312,"counterPath"],[173,28,1,4323],[173,33,1,4326,"path"],[173,37,1,4330],[174,8,1,4330],[174,9,1,4331],[174,10,1,4332],[175,8,1,4333],[175,12,1,4336],[175,13,1,4337],[175,14,1,4338],[175,19,1,4341,"counterIndex"],[175,31,1,4353],[175,33,1,4354],[176,10,1,4355],[176,14,1,4361,"newCounter"],[176,24,1,4371],[176,27,1,4372],[176,28,1,4373,"path"],[176,32,1,4377],[176,34,1,4378],[176,35,1,4379],[176,36,1,4380],[177,10,1,4381],[177,14,1,4385,"moreSpecificCounterIndex"],[177,38,1,4409],[177,41,1,4410],[177,42,1,4411],[177,43,1,4412],[178,10,1,4413],[178,15,1,4417],[178,19,1,4421,"i"],[178,20,1,4422],[178,23,1,4423,"group"],[178,28,1,4428],[178,29,1,4429,"length"],[178,35,1,4435],[178,38,1,4436],[178,39,1,4437],[178,41,1,4438,"i"],[178,42,1,4439],[178,46,1,4441],[178,47,1,4442],[178,49,1,4443,"i"],[178,50,1,4444],[178,52,1,4446],[178,54,1,4447],[179,12,1,4447],[179,16,1,4447,"_group$i2"],[179,25,1,4447],[180,12,1,4448],[180,16,1,4454,"counterPath"],[180,27,1,4465],[180,31,1,4465,"_group$i2"],[180,40,1,4465],[180,43,1,4466,"group"],[180,48,1,4471],[180,49,1,4472,"i"],[180,50,1,4473],[180,51,1,4474],[180,72,1,4466,"_group$i2"],[180,81,1,4466],[180,82,1,4477],[180,83,1,4478],[180,84,1,4479],[181,12,1,4480],[181,16,1,4483],[181,21,1,4488],[181,22,1,4489],[181,27,1,4492,"counterPath"],[181,38,1,4503],[181,42,1,4505,"isAncestorOrSelf"],[181,58,1,4521],[181,59,1,4522,"path"],[181,63,1,4526],[181,65,1,4527,"counterPath"],[181,76,1,4538],[181,77,1,4539],[181,79,1,4540],[182,14,1,4541,"moreSpecificCounterIndex"],[182,38,1,4565],[182,41,1,4566,"i"],[182,42,1,4567],[183,14,1,4568],[184,12,1,4573],[185,10,1,4574],[186,10,1,4575],[186,11,1,4576],[186,12,1,4577],[186,17,1,4580,"moreSpecificCounterIndex"],[186,41,1,4604],[186,45,1,4606,"counterIndex"],[186,57,1,4618],[186,60,1,4619,"group"],[186,65,1,4624],[186,66,1,4625,"length"],[186,72,1,4631],[186,74,1,4632,"group"],[186,79,1,4637],[186,80,1,4638,"push"],[186,84,1,4642],[186,85,1,4643,"newCounter"],[186,95,1,4653],[186,96,1,4654],[186,101,1,4657,"group"],[186,106,1,4662],[186,107,1,4663,"splice"],[186,113,1,4669],[186,114,1,4670,"moreSpecificCounterIndex"],[186,138,1,4694],[186,140,1,4695],[186,141,1,4696],[186,143,1,4697,"newCounter"],[186,153,1,4707],[186,154,1,4708],[186,156,1,4709,"counterIndex"],[186,168,1,4721],[186,171,1,4722,"moreSpecificCounterIndex"],[186,195,1,4746],[186,196,1,4747],[187,8,1,4747],[188,8,1,4748,"group"],[188,13,1,4753],[188,14,1,4754,"counterIndex"],[188,26,1,4766],[188,27,1,4767],[188,28,1,4768],[188,29,1,4769],[188,30,1,4770],[188,32,1,4772],[188,34,1,4773],[188,38,1,4777],[188,39,1,4778,"mirrorCount"],[188,50,1,4789],[188,51,1,4790,"set"],[188,54,1,4793],[188,55,1,4794,"groupKey"],[188,63,1,4802],[188,65,1,4803,"group"],[188,70,1,4808],[188,71,1,4809],[189,6,1,4809],[190,4,1,4810],[191,6,1,4810,"key"],[191,9,1,4810],[192,6,1,4810,"value"],[192,11,1,4810],[192,22,1,4810,"unregisterLocalMirror"],[192,43,1,4831,"unregisterLocalMirror"],[192,44,1,4832,"widgetId"],[192,52,1,4840],[192,54,1,4841,"slot"],[192,58,1,4845],[192,60,1,4846,"path"],[192,64,1,4850],[192,66,1,4851],[193,8,1,4852],[193,12,1,4858,"groupKey"],[193,20,1,4866],[193,23,1,4867],[193,27,1,4871],[193,28,1,4872,"groupKey"],[193,36,1,4880],[193,37,1,4881,"widgetId"],[193,45,1,4889],[193,47,1,4890,"slot"],[193,51,1,4894],[193,52,1,4895],[194,10,1,4896,"group"],[194,15,1,4901],[194,18,1,4902],[194,22,1,4906],[194,23,1,4907,"mirrorCount"],[194,34,1,4918],[194,35,1,4919,"get"],[194,38,1,4922],[194,39,1,4923,"groupKey"],[194,47,1,4931],[194,48,1,4932],[195,8,1,4933],[195,12,1,4936],[195,17,1,4941],[195,18,1,4942],[195,23,1,4945,"group"],[195,28,1,4950],[195,30,1,4951],[196,8,1,4958],[196,12,1,4964,"counterIndex"],[196,24,1,4976],[196,27,1,4977,"group"],[196,32,1,4982],[196,33,1,4983,"findIndex"],[196,42,1,4992],[196,43,1,4994],[196,53,1,4994,"_ref19"],[196,59,1,4994],[197,10,1,4994],[197,14,1,4994,"_ref20"],[197,20,1,4994],[197,27,1,4994,"_slicedToArray2"],[197,42,1,4994],[197,43,1,4994,"default"],[197,50,1,4994],[197,52,1,4994,"_ref19"],[197,58,1,4994],[198,12,1,4996,"counterPath"],[198,23,1,5007],[198,26,1,5007,"_ref20"],[198,32,1,5007],[199,10,1,5007],[199,17,1,5011,"counterPath"],[199,28,1,5022],[199,33,1,5025,"path"],[199,37,1,5029],[200,8,1,5029],[200,9,1,5030],[200,10,1,5031],[201,8,1,5032],[201,12,1,5035],[201,13,1,5036],[201,14,1,5037],[201,19,1,5040,"counterIndex"],[201,31,1,5052],[201,33,1,5053],[202,8,1,5060],[202,12,1,5064,"count"],[202,17,1,5069],[202,20,1,5070,"group"],[202,25,1,5075],[202,26,1,5076,"counterIndex"],[202,38,1,5088],[202,39,1,5089],[202,40,1,5090],[202,41,1,5091],[202,42,1,5092],[203,8,1,5093,"count"],[203,13,1,5098],[203,15,1,5100],[203,17,1,5101,"count"],[203,22,1,5106],[203,25,1,5107],[203,26,1,5108],[203,29,1,5109,"group"],[203,34,1,5114],[203,35,1,5115,"splice"],[203,41,1,5121],[203,42,1,5122,"counterIndex"],[203,54,1,5134],[203,56,1,5135],[203,57,1,5136],[203,58,1,5137],[203,61,1,5138,"group"],[203,66,1,5143],[203,67,1,5144,"counterIndex"],[203,79,1,5156],[203,80,1,5157],[203,81,1,5158],[203,82,1,5159],[203,83,1,5160],[203,86,1,5161,"count"],[203,91,1,5166],[203,93,1,5167],[203,94,1,5168],[203,99,1,5171,"group"],[203,104,1,5176],[203,105,1,5177,"length"],[203,111,1,5183],[203,114,1,5184],[203,118,1,5188],[203,119,1,5189,"mirrorCount"],[203,130,1,5200],[203,131,1,5201,"delete"],[203,137,1,5207],[203,138,1,5208,"groupKey"],[203,146,1,5216],[203,147,1,5217],[203,150,1,5218],[203,154,1,5222],[203,155,1,5223,"mirrorCount"],[203,166,1,5234],[203,167,1,5235,"set"],[203,170,1,5238],[203,171,1,5239,"groupKey"],[203,179,1,5247],[203,181,1,5248,"group"],[203,186,1,5253],[203,187,1,5254],[204,6,1,5254],[205,4,1,5255],[206,2,1,5255],[207,2,1,5256,"__decorate"],[207,12,1,5266],[207,13,1,5267],[207,14,1,5268,"action"],[207,44,1,5268],[207,45,1,5268,"action"],[207,63,1,5274],[207,64,1,5275],[207,66,1,5276,"StoreBackend"],[207,78,1,5288],[207,79,1,5289,"prototype"],[207,88,1,5298],[207,90,1,5299],[207,95,1,5304],[207,97,1,5305],[207,101,1,5309],[207,102,1,5310],[207,104,1,5311,"__decorate"],[207,114,1,5321],[207,115,1,5322],[207,116,1,5323,"action"],[207,146,1,5323],[207,147,1,5323,"action"],[207,165,1,5329],[207,166,1,5330],[207,168,1,5331,"StoreBackend"],[207,180,1,5343],[207,181,1,5344,"prototype"],[207,190,1,5353],[207,192,1,5354],[207,198,1,5360],[207,200,1,5361],[207,204,1,5365],[207,205,1,5366],[208,2,1,5367],[208,6,1,5373,"slotsFreedAfterLastMirror"],[208,31,1,5398],[208,34,1,5399],[208,35,1,5400],[208,46,1,5411],[208,47,1,5412],[209,2,1,5413],[209,6,1,5419,"StoreFrontend"],[209,19,1,5432],[210,4,1,5433],[210,13,1,5433,"StoreFrontend"],[210,27,1,5445,"backend"],[210,34,1,5452],[210,36,1,5453,"path"],[210,40,1,5457],[210,42,1,5458,"onBackendUpdateRequested"],[210,66,1,5482],[210,68,1,5483,"subscriptionPriority"],[210,88,1,5503],[210,90,1,5504],[211,6,1,5504],[211,10,1,5504,"_classCallCheck2"],[211,26,1,5504],[211,27,1,5504,"default"],[211,34,1,5504],[211,42,1,5504,"StoreFrontend"],[211,55,1,5504],[212,6,1,5505],[212,10,1,5509],[212,11,1,5510,"backend"],[212,18,1,5517],[212,21,1,5518,"backend"],[212,28,1,5525],[212,30,1,5526],[212,34,1,5530],[212,35,1,5531,"path"],[212,39,1,5535],[212,42,1,5536,"path"],[212,46,1,5540],[212,48,1,5541],[212,52,1,5545],[212,53,1,5546,"onBackendUpdateRequested"],[212,77,1,5570],[212,80,1,5571,"onBackendUpdateRequested"],[212,104,1,5595],[212,106,1,5596],[212,110,1,5600],[212,111,1,5601,"subscriptionPriority"],[212,131,1,5621],[212,134,1,5622,"subscriptionPriority"],[212,154,1,5642],[212,156,1,5643],[212,160,1,5647],[212,161,1,5648,"localMirrors"],[212,173,1,5660],[212,176,1,5661],[212,180,1,5665,"Map"],[212,183,1,5668],[212,184,1,5667],[212,185,1,5668],[212,187,1,5669],[212,191,1,5673],[212,192,1,5674,"updateCallbacks"],[212,207,1,5689],[212,210,1,5690],[212,212,1,5692],[212,214,1,5693],[212,218,1,5697],[212,219,1,5698,"destroyed"],[212,228,1,5707],[212,231,1,5708],[212,232,1,5709],[212,233,1,5710],[213,4,1,5710],[214,4,1,5711],[214,15,1,5711,"_createClass2"],[214,28,1,5711],[214,29,1,5711,"default"],[214,36,1,5711],[214,38,1,5711,"StoreFrontend"],[214,51,1,5711],[215,6,1,5711,"key"],[215,9,1,5711],[216,6,1,5711,"value"],[216,11,1,5711],[216,22,1,5711,"useSlot"],[216,29,1,5718,"useSlot"],[216,30,1,5719,"widgetId"],[216,38,1,5727],[216,40,1,5728,"slot"],[216,44,1,5732],[216,46,1,5733],[217,8,1,5734],[217,12,1,5740,"localMirror"],[217,23,1,5751],[217,26,1,5752],[217,30,1,5756],[217,31,1,5757,"getOrCreateLocalMirror"],[217,53,1,5779],[217,54,1,5780,"widgetId"],[217,62,1,5788],[217,64,1,5789,"slot"],[217,68,1,5793],[217,70,1,5794,"slotsFreedAfterLastMirror"],[217,95,1,5819],[217,96,1,5820,"includes"],[217,104,1,5828],[217,105,1,5829,"slot"],[217,109,1,5833],[217,110,1,5834],[217,111,1,5835],[218,8,1,5836],[218,15,1,5843],[218,19,1,5843,"tuple"],[218,49,1,5843],[218,50,1,5843,"tuple"],[218,68,1,5848],[218,70,1,5849,"localMirror"],[218,81,1,5860],[218,82,1,5861,"value$"],[218,88,1,5867],[218,90,1,5868],[218,94,1,5868,"action"],[218,124,1,5868],[218,125,1,5868,"action"],[218,143,1,5874],[218,145,1,5875,"localMirror"],[218,156,1,5886],[218,157,1,5887,"setValue"],[218,165,1,5895],[218,166,1,5896],[218,167,1,5897],[219,6,1,5897],[220,4,1,5898],[221,6,1,5898,"key"],[221,9,1,5898],[222,6,1,5898,"value"],[222,11,1,5898],[222,22,1,5898,"useBackendSlot"],[222,36,1,5912,"useBackendSlot"],[222,37,1,5913,"widgetId"],[222,45,1,5921],[222,47,1,5922,"slot"],[222,51,1,5926],[222,53,1,5927],[223,8,1,5928],[223,15,1,5935],[223,19,1,5939],[223,20,1,5940,"backend"],[223,27,1,5947],[223,28,1,5948,"get$"],[223,32,1,5952],[223,33,1,5953,"widgetId"],[223,41,1,5961],[223,43,1,5962,"slot"],[223,47,1,5966],[223,49,1,5967],[223,53,1,5971],[223,54,1,5972,"path"],[223,58,1,5976],[223,59,1,5977],[224,6,1,5977],[225,4,1,5978],[226,6,1,5978,"key"],[226,9,1,5978],[227,6,1,5978,"value"],[227,11,1,5978],[227,22,1,5978,"getAll$"],[227,29,1,5985,"getAll$"],[227,30,1,5986,"slot"],[227,34,1,5990],[227,36,1,5991],[228,8,1,5992],[228,12,1,5998,"allEntries$"],[228,23,1,6009],[228,26,1,6010],[228,30,1,6014],[228,31,1,6015,"backend"],[228,38,1,6022],[228,39,1,6023,"getAllEntries$"],[228,53,1,6037],[228,54,1,6038,"slot"],[228,58,1,6042],[228,60,1,6043],[228,64,1,6047],[228,65,1,6048,"path"],[228,69,1,6052],[228,70,1,6053],[229,8,1,6054],[229,15,1,6061],[229,19,1,6061,"fromComputation$"],[229,49,1,6061],[229,50,1,6061,"fromComputation$"],[229,68,1,6077],[229,70,1,6078],[229,87,1,6095],[229,89,1,6097],[230,10,1,6097],[230,17,1,6101,"allEntries$"],[230,28,1,6112],[230,29,1,6113,"dependOn"],[230,37,1,6121],[230,38,1,6122],[230,39,1,6123],[230,40,1,6124,"map"],[230,43,1,6127],[230,44,1,6129],[230,54,1,6129,"e"],[230,55,1,6130],[231,12,1,6130],[231,19,1,6132,"e"],[231,20,1,6133],[231,21,1,6134,"value"],[231,26,1,6139],[232,10,1,6139],[232,11,1,6140],[232,12,1,6141],[233,8,1,6141],[233,9,1,6142],[233,10,1,6143],[234,6,1,6143],[235,4,1,6144],[236,6,1,6144,"key"],[236,9,1,6144],[237,6,1,6144,"value"],[237,11,1,6144],[237,22,1,6144,"getSubscriptionPriority"],[237,45,1,6167,"getSubscriptionPriority"],[237,46,1,6167],[237,48,1,6169],[238,8,1,6170],[238,15,1,6177],[238,19,1,6181],[238,20,1,6182,"subscriptionPriority"],[238,40,1,6202],[239,6,1,6202],[240,4,1,6203],[241,6,1,6203,"key"],[241,9,1,6203],[242,6,1,6203,"value"],[242,11,1,6203],[242,22,1,6203,"addUpdateCallback"],[242,39,1,6220,"addUpdateCallback"],[242,40,1,6221,"callback"],[242,48,1,6229],[242,50,1,6230],[243,8,1,6231],[243,12,1,6235],[243,13,1,6236,"destroyed"],[243,22,1,6245],[243,25,1,6246,"callback"],[243,33,1,6254],[243,34,1,6255],[243,35,1,6256],[243,39,1,6258],[243,43,1,6262],[243,44,1,6263,"updateCallbacks"],[243,59,1,6278],[243,60,1,6279,"push"],[243,64,1,6283],[243,65,1,6284,"callback"],[243,73,1,6292],[243,74,1,6293],[243,76,1,6294],[243,80,1,6298],[243,81,1,6299,"onBackendUpdateRequested"],[243,105,1,6323],[243,106,1,6324],[243,107,1,6325],[243,108,1,6326],[244,6,1,6326],[245,4,1,6327],[246,6,1,6327,"key"],[246,9,1,6327],[247,6,1,6327,"value"],[247,11,1,6327],[247,22,1,6327,"updateFromBackend"],[247,39,1,6344,"updateFromBackend"],[247,40,1,6344],[247,42,1,6346],[248,8,1,6347],[248,13,1,6351],[248,17,1,6357,"mirror"],[248,23,1,6363],[248,27,1,6367],[248,31,1,6371],[248,32,1,6372,"localMirrors"],[248,44,1,6384],[248,45,1,6385,"values"],[248,51,1,6391],[248,52,1,6392],[248,53,1,6393],[248,55,1,6394,"mirror"],[248,61,1,6400],[248,62,1,6401,"updateFromBackend"],[248,79,1,6418],[248,80,1,6419],[248,81,1,6420],[249,8,1,6421],[249,12,1,6425],[249,13,1,6426,"flushUpdateCallbacks"],[249,33,1,6446],[249,34,1,6447],[249,35,1,6448],[250,6,1,6448],[251,4,1,6449],[252,6,1,6449,"key"],[252,9,1,6449],[253,6,1,6449,"value"],[253,11,1,6449],[253,22,1,6449,"destroy"],[253,29,1,6456,"destroy"],[253,30,1,6456],[253,32,1,6458],[254,8,1,6459],[254,13,1,6463],[254,17,1,6469,"mirror"],[254,23,1,6475],[254,27,1,6479],[254,31,1,6483],[254,32,1,6484,"localMirrors"],[254,44,1,6496],[254,45,1,6497,"values"],[254,51,1,6503],[254,52,1,6504],[254,53,1,6505],[254,55,1,6506,"mirror"],[254,61,1,6512],[254,62,1,6513,"free"],[254,66,1,6517],[254,67,1,6518],[254,68,1,6519],[255,8,1,6520],[255,12,1,6524],[255,13,1,6525,"localMirrors"],[255,25,1,6537],[255,26,1,6538,"clear"],[255,31,1,6543],[255,32,1,6544],[255,33,1,6545],[255,35,1,6546],[255,39,1,6550],[255,40,1,6551,"flushUpdateCallbacks"],[255,60,1,6571],[255,61,1,6572],[255,62,1,6573],[255,64,1,6574],[255,68,1,6578],[255,69,1,6579,"destroyed"],[255,78,1,6588],[255,81,1,6589],[255,82,1,6590],[255,83,1,6591],[256,6,1,6591],[257,4,1,6592],[258,6,1,6592,"key"],[258,9,1,6592],[259,6,1,6592,"value"],[259,11,1,6592],[259,22,1,6592,"flushUpdateCallbacks"],[259,42,1,6612,"flushUpdateCallbacks"],[259,43,1,6612],[259,45,1,6614],[260,8,1,6615],[260,12,1,6619],[260,13,1,6620,"updateCallbacks"],[260,28,1,6635],[260,29,1,6636,"splice"],[260,35,1,6642],[260,36,1,6643],[260,37,1,6644],[260,38,1,6645],[260,39,1,6646,"forEach"],[260,46,1,6653],[260,47,1,6655],[260,57,1,6655,"c"],[260,58,1,6656],[261,10,1,6656],[261,17,1,6658,"c"],[261,18,1,6659],[261,19,1,6660],[261,20,1,6661],[262,8,1,6661],[262,9,1,6662],[262,10,1,6663],[263,6,1,6663],[264,4,1,6664],[265,6,1,6664,"key"],[265,9,1,6664],[266,6,1,6664,"value"],[266,11,1,6664],[266,22,1,6664,"getOrCreateLocalMirror"],[266,44,1,6686,"getOrCreateLocalMirror"],[266,45,1,6687,"widgetId"],[266,53,1,6695],[266,55,1,6696,"slot"],[266,59,1,6700],[266,61,1,6701,"freeWhenLastMirror"],[266,79,1,6719],[266,81,1,6720],[267,8,1,6720],[267,12,1,6720,"_this2"],[267,18,1,6720],[268,8,1,6721],[268,12,1,6727,"key"],[268,15,1,6730],[268,18,1,6731],[268,21,1,6734,"widgetId"],[268,29,1,6742],[268,33,1,6746,"slot"],[268,37,1,6750],[268,39,1,6752],[269,10,1,6753,"existingMirror"],[269,24,1,6767],[269,27,1,6768],[269,31,1,6772],[269,32,1,6773,"localMirrors"],[269,44,1,6785],[269,45,1,6786,"get"],[269,48,1,6789],[269,49,1,6790,"key"],[269,52,1,6793],[269,53,1,6794],[270,8,1,6795],[270,12,1,6798,"existingMirror"],[270,26,1,6812],[270,28,1,6813],[270,35,1,6820,"existingMirror"],[270,49,1,6834],[271,8,1,6835],[271,12,1,6839,"localValue"],[271,22,1,6849],[272,8,1,6850],[272,12,1,6856,"backendValue$"],[272,25,1,6869],[272,28,1,6870],[272,32,1,6874],[272,33,1,6875,"backend"],[272,40,1,6882],[272,41,1,6883,"get$"],[272,45,1,6887],[272,46,1,6888,"widgetId"],[272,54,1,6896],[272,56,1,6897,"slot"],[272,60,1,6901],[272,62,1,6902],[272,66,1,6906],[272,67,1,6907,"path"],[272,71,1,6911],[272,72,1,6912],[273,8,1,6913],[273,12,1,6917,"currentBackendValue"],[273,31,1,6936],[273,33,1,6937,"backendValueSubscription"],[273,57,1,6961],[274,8,1,6962,"freeWhenLastMirror"],[274,26,1,6980],[274,30,1,6982],[274,34,1,6986],[274,35,1,6987,"backend"],[274,42,1,6994],[274,43,1,6995,"registerLocalMirror"],[274,62,1,7014],[274,63,1,7015,"widgetId"],[274,71,1,7023],[274,73,1,7024,"slot"],[274,77,1,7028],[274,79,1,7029],[274,83,1,7033],[274,84,1,7034,"path"],[274,88,1,7038],[274,89,1,7039],[275,8,1,7040],[275,12,1,7040,"_useDependency"],[275,26,1,7040],[275,29,1,7084],[275,33,1,7084,"useDependency"],[275,63,1,7084],[275,64,1,7084,"useDependency"],[275,82,1,7097],[275,84,1,7098],[275,98,1,7112,"widgetId"],[275,106,1,7120],[275,111,1,7125,"slot"],[275,115,1,7129],[275,118,1,7132],[275,120,1,7134],[275,132,1,7138],[276,12,1,7139],[276,16,1,7139,"ensure"],[276,46,1,7139],[276,47,1,7139,"ensure"],[276,65,1,7145],[276,67,1,7146,"backendValueSubscription"],[276,91,1,7170],[276,92,1,7171],[276,93,1,7172],[276,94,1,7173],[276,96,1,7174,"backendValueSubscription"],[276,120,1,7198],[276,123,1,7199],[276,128,1,7204],[276,129,1,7205],[277,10,1,7205],[277,11,1,7206],[277,13,1,7209],[277,25,1,7213],[278,12,1,7214,"currentBackendValue"],[278,31,1,7233],[278,34,1,7234,"localValue"],[278,44,1,7244],[278,47,1,7245],[278,51,1,7245,"readUntracked"],[278,81,1,7245],[278,82,1,7245,"readUntracked"],[278,100,1,7258],[278,102,1,7259,"backendValue$"],[278,115,1,7272],[278,116,1,7273],[278,118,1,7274,"backendValueSubscription"],[278,142,1,7298],[278,145,1,7299],[278,149,1,7299,"reaction"],[278,179,1,7299],[278,180,1,7299,"reaction"],[278,198,1,7307],[278,200,1,7309],[279,14,1,7309],[279,21,1,7313,"backendValue$"],[279,34,1,7326],[279,35,1,7327,"dependOn"],[279,43,1,7335],[279,44,1,7336],[279,45,1,7337],[280,12,1,7337],[280,15,1,7340],[280,25,1,7340,"v"],[280,26,1,7341],[280,28,1,7343],[281,14,1,7344,"v"],[281,15,1,7345],[281,20,1,7348,"currentBackendValue"],[281,39,1,7367],[281,44,1,7370,"currentBackendValue"],[281,63,1,7389],[281,66,1,7390,"v"],[281,67,1,7391],[281,69,1,7392,"_this2"],[281,75,1,7396],[281,76,1,7397,"onBackendUpdateRequested"],[281,100,1,7421],[281,101,1,7422],[281,102,1,7423],[281,103,1,7424],[282,12,1,7424],[282,13,1,7425],[282,15,1,7427],[283,14,1,7428,"name"],[283,18,1,7432],[283,20,1,7433],[283,46,1,7459,"widgetId"],[283,54,1,7467],[283,59,1,7472,"slot"],[283,63,1,7476],[284,12,1,7479],[284,13,1,7480],[284,14,1,7481],[285,10,1,7481],[285,11,1,7483],[285,12,1,7484],[286,10,1,7484,"_useDependency2"],[286,25,1,7484],[286,32,1,7484,"_slicedToArray2"],[286,47,1,7484],[286,48,1,7484,"default"],[286,55,1,7484],[286,57,1,7484,"_useDependency"],[286,71,1,7484],[287,10,1,7046,"localValueTracker$"],[287,28,1,7064],[287,31,1,7064,"_useDependency2"],[287,46,1,7064],[288,10,1,7065,"localValueChanged"],[288,27,1,7082],[288,30,1,7082,"_useDependency2"],[288,45,1,7082],[289,8,1,7485],[289,12,1,7489,"didSetValue"],[289,23,1,7500],[289,26,1,7501],[289,27,1,7502],[289,28,1,7503],[290,8,1,7504],[290,12,1,7510,"newMirror"],[290,21,1,7519],[290,24,1,7520],[291,10,1,7521,"value$"],[291,16,1,7527],[291,18,1,7528],[291,22,1,7528,"fromComputation$"],[291,52,1,7528],[291,53,1,7528,"fromComputation$"],[291,71,1,7544],[291,73,1,7545],[291,81,1,7553,"widgetId"],[291,89,1,7561],[291,94,1,7566,"slot"],[291,98,1,7570],[291,101,1,7573],[291,103,1,7575],[292,12,1,7575],[292,19,1,7580,"localValueTracker$"],[292,37,1,7598],[292,38,1,7599,"dependOn"],[292,46,1,7607],[292,47,1,7608],[292,48,1,7609],[292,50,1,7610,"localValue"],[292,60,1,7620],[293,10,1,7620],[293,11,1,7622],[293,12,1,7623],[294,10,1,7624,"setValue"],[294,18,1,7632],[294,20,1,7633],[294,29,1,7624,"setValue"],[294,37,1,7632,"setValue"],[294,38,1,7633,"value"],[294,43,1,7638],[294,45,1,7640],[295,12,1,7641],[295,16,1,7644],[295,17,1,7645,"_this2"],[295,23,1,7649],[295,24,1,7650,"localMirrors"],[295,36,1,7662],[295,37,1,7663,"has"],[295,40,1,7666],[295,41,1,7667,"key"],[295,44,1,7670],[295,45,1,7671],[295,47,1,7672],[295,53,1,7678],[295,57,1,7682,"Error"],[295,62,1,7687],[295,63,1,7688],[295,95,1,7720,"key"],[295,98,1,7723],[295,134,1,7759],[295,135,1,7760],[296,12,1,7761,"didSetValue"],[296,23,1,7772],[296,26,1,7773],[296,27,1,7774],[296,28,1,7775],[296,30,1,7776],[296,34,1,7776,"deepEqual"],[296,64,1,7776],[296,65,1,7776,"deepEqual"],[296,83,1,7785],[296,85,1,7786,"value"],[296,90,1,7791],[296,92,1,7792,"localValue"],[296,102,1,7802],[296,103,1,7803],[296,107,1,7805,"localValueChanged"],[296,124,1,7822],[296,125,1,7823],[296,126,1,7824],[296,128,1,7825,"_this2"],[296,134,1,7829],[296,135,1,7830,"backend"],[296,142,1,7837],[296,143,1,7838,"set"],[296,146,1,7841],[296,147,1,7842,"widgetId"],[296,155,1,7850],[296,157,1,7851,"slot"],[296,161,1,7855],[296,163,1,7856,"_this2"],[296,169,1,7860],[296,170,1,7861,"path"],[296,174,1,7865],[296,176,1,7866,"value"],[296,181,1,7871],[296,182,1,7872],[296,184,1,7873,"currentBackendValue"],[296,203,1,7892],[296,206,1,7893,"localValue"],[296,216,1,7903],[296,219,1,7904,"value"],[296,224,1,7909],[297,10,1,7909],[297,11,1,7910],[298,10,1,7911,"updateFromBackend"],[298,27,1,7928],[298,29,1,7929],[298,38,1,7911,"updateFromBackend"],[298,55,1,7928,"updateFromBackend"],[298,56,1,7928],[298,58,1,7933],[299,12,1,7934],[299,17,1,7939],[299,18,1,7940],[299,23,1,7943,"backendValueSubscription"],[299,47,1,7967],[299,51,1,7969],[299,55,1,7969,"deepEqual"],[299,85,1,7969],[299,86,1,7969,"deepEqual"],[299,104,1,7978],[299,106,1,7979,"currentBackendValue"],[299,125,1,7998],[299,127,1,7999,"localValue"],[299,137,1,8009],[299,138,1,8010],[299,143,1,8013,"localValueChanged"],[299,160,1,8030],[299,161,1,8031],[299,162,1,8032],[299,164,1,8033,"localValue"],[299,174,1,8043],[299,177,1,8044,"currentBackendValue"],[299,196,1,8063],[299,197,1,8064],[300,10,1,8064],[300,11,1,8065],[301,10,1,8066,"free"],[301,14,1,8070],[301,16,1,8071],[301,25,1,8066,"free"],[301,29,1,8070,"free"],[301,30,1,8070],[301,32,1,8075],[302,12,1,8076],[302,16,1,8079],[302,31,1,8094],[302,36,1,8097,"slot"],[302,40,1,8101],[302,42,1,8102],[302,49,1,8109,"freeWhenLastMirror"],[302,67,1,8127],[302,71,1,8129,"_this2"],[302,77,1,8133],[302,78,1,8134,"backend"],[302,85,1,8141],[302,86,1,8142,"unregisterLocalMirror"],[302,107,1,8163],[302,108,1,8164,"widgetId"],[302,116,1,8172],[302,118,1,8173,"slot"],[302,122,1,8177],[302,124,1,8178,"_this2"],[302,130,1,8182],[302,131,1,8183,"path"],[302,135,1,8187],[302,136,1,8188],[302,138,1,8189,"didSetValue"],[302,149,1,8200],[302,153,1,8202,"_this2"],[302,159,1,8206],[302,160,1,8207,"backend"],[302,167,1,8214],[302,168,1,8215,"set"],[302,171,1,8218],[302,172,1,8219,"widgetId"],[302,180,1,8227],[302,182,1,8228,"slot"],[302,186,1,8232],[302,188,1,8233,"_this2"],[302,194,1,8237],[302,195,1,8238,"path"],[302,199,1,8242],[302,201,1,8243],[302,206,1,8248],[302,207,1,8249],[302,208,1,8250],[302,210,1,8251],[302,215,1,8256,"_this2"],[302,221,1,8260],[302,222,1,8261,"backend"],[302,229,1,8268],[302,230,1,8269,"free"],[302,234,1,8273],[302,235,1,8274,"widgetId"],[302,243,1,8282],[302,245,1,8283,"slot"],[302,249,1,8287],[302,251,1,8288,"_this2"],[302,257,1,8292],[302,258,1,8293,"path"],[302,262,1,8297],[302,263,1,8298],[302,267,1,8300],[302,273,1,8305,"didSetValue"],[302,284,1,8316],[302,288,1,8318,"_this2"],[302,294,1,8322],[302,295,1,8323,"backend"],[302,302,1,8330],[302,303,1,8331,"free"],[302,307,1,8335],[302,308,1,8336,"widgetId"],[302,316,1,8344],[302,318,1,8345,"slot"],[302,322,1,8349],[302,324,1,8350,"_this2"],[302,330,1,8354],[302,331,1,8355,"path"],[302,335,1,8359],[302,336,1,8360],[302,337,1,8361],[303,10,1,8361],[304,8,1,8362],[304,9,1,8363],[305,8,1,8364],[305,15,1,8371],[305,19,1,8375],[305,20,1,8376,"localMirrors"],[305,32,1,8388],[305,33,1,8389,"set"],[305,36,1,8392],[305,37,1,8393,"key"],[305,40,1,8396],[305,42,1,8397,"newMirror"],[305,51,1,8406],[305,52,1,8407],[305,54,1,8408,"newMirror"],[305,63,1,8417],[306,6,1,8417],[307,4,1,8418],[308,2,1,8418],[309,2,1,8419,"__decorate"],[309,12,1,8429],[309,13,1,8430],[309,14,1,8431,"action"],[309,44,1,8431],[309,45,1,8431,"action"],[309,63,1,8437],[309,64,1,8438],[309,66,1,8439,"StoreFrontend"],[309,79,1,8452],[309,80,1,8453,"prototype"],[309,89,1,8462],[309,91,1,8463],[309,110,1,8482],[309,112,1,8483],[309,116,1,8487],[309,117,1,8488],[309,119,1,8489,"__decorate"],[309,129,1,8499],[309,130,1,8500],[309,131,1,8501,"action"],[309,161,1,8501],[309,162,1,8501,"action"],[309,180,1,8507],[309,181,1,8508],[309,183,1,8509,"StoreFrontend"],[309,196,1,8522],[309,197,1,8523,"prototype"],[309,206,1,8532],[309,208,1,8533],[309,217,1,8542],[309,219,1,8543],[309,223,1,8547],[309,224,1,8548],[310,2,1,8549],[310,6,1,8555,"StoreBackendContext"],[310,25,1,8574],[310,28,1,8574,"exports"],[310,35,1,8574],[310,36,1,8574,"S"],[310,37,1,8574],[310,40,1,8575],[310,44,1,8575,"createContext"],[310,64,1,8588],[310,66,1,8589],[310,71,1,8594],[310,72,1,8595],[310,73,1,8596],[311,4,1,8597,"StorePathContext"],[311,20,1,8613],[311,23,1,8613,"exports"],[311,30,1,8613],[311,31,1,8613,"b"],[311,32,1,8613],[311,35,1,8614],[311,39,1,8614,"createContext"],[311,59,1,8627],[311,61,1,8628],[311,66,1,8633],[311,67,1,8634],[311,68,1,8635],[312,4,1,8636,"SubscriptionPriorityContext"],[312,31,1,8663],[312,34,1,8663,"exports"],[312,41,1,8663],[312,42,1,8663,"d"],[312,43,1,8663],[312,46,1,8664],[312,50,1,8664,"createContext"],[312,70,1,8677],[312,72,1,8678],[312,73,1,8679],[312,74,1,8680],[313,2,1,8681],[313,11,1,8690,"RootStoreProvider"],[313,28,1,8707,"RootStoreProvider"],[313,29,1,8708,"props"],[313,34,1,8713],[313,36,1,8714],[314,4,1,8715],[314,11,1,8722],[314,15,1,8722,"jsx"],[314,30,1,8725],[314,32,1,8726,"StoreBackendContext"],[314,51,1,8745],[314,52,1,8746,"Provider"],[314,60,1,8754],[314,62,1,8755],[315,6,1,8756,"value"],[315,11,1,8761],[315,13,1,8762,"props"],[315,18,1,8767],[315,19,1,8768,"backend"],[315,26,1,8775],[316,6,1,8776,"children"],[316,14,1,8784],[316,16,1,8785],[316,20,1,8785,"jsx"],[316,35,1,8788],[316,37,1,8789,"StorePathContext"],[316,53,1,8805],[316,54,1,8806,"Provider"],[316,62,1,8814],[316,64,1,8815],[317,8,1,8816,"value"],[317,13,1,8821],[317,15,1,8822],[317,19,1,8826],[318,8,1,8827,"children"],[318,16,1,8835],[318,18,1,8836,"props"],[318,23,1,8841],[318,24,1,8842,"children"],[319,6,1,8850],[319,7,1,8851],[320,4,1,8852],[320,5,1,8853],[320,6,1,8854],[321,2,1,8854],[322,2,1,8855],[322,11,1,8864,"useComponentStore"],[322,28,1,8881,"useComponentStore"],[322,29,1,8881],[322,31,1,8883],[323,4,1,8884],[323,8,1,8890,"backend"],[323,15,1,8897],[323,18,1,8898],[323,22,1,8898,"ensure"],[323,52,1,8898],[323,53,1,8898,"ensure"],[323,71,1,8904],[323,73,1,8905],[323,77,1,8905,"useContext"],[323,94,1,8915],[323,96,1,8916,"StoreBackendContext"],[323,115,1,8935],[323,116,1,8936],[323,117,1,8937],[324,6,1,8938,"storePath"],[324,15,1,8947],[324,18,1,8948],[324,22,1,8948,"ensure"],[324,52,1,8948],[324,53,1,8948,"ensure"],[324,71,1,8954],[324,73,1,8955],[324,77,1,8955,"useContext"],[324,94,1,8965],[324,96,1,8966,"StorePathContext"],[324,112,1,8982],[324,113,1,8983],[324,114,1,8984],[325,6,1,8985,"subscriptionPriority"],[325,26,1,9005],[325,29,1,9006],[325,33,1,9006,"useContext"],[325,50,1,9016],[325,52,1,9017,"SubscriptionPriorityContext"],[325,79,1,9044],[325,80,1,9045],[326,6,1,9046,"forceUpdate"],[326,17,1,9057],[326,20,1,9058],[326,24,1,9058,"useForceUpdate"],[326,54,1,9058],[326,55,1,9058,"useForceUpdate"],[326,73,1,9072],[326,75,1,9073],[326,76,1,9074],[327,6,1,9075,"frontend"],[327,14,1,9083],[327,17,1,9084],[327,21,1,9084,"useMemo"],[327,35,1,9091],[327,37,1,9093],[328,8,1,9093],[328,15,1,9097],[328,19,1,9101,"StoreFrontend"],[328,32,1,9114],[328,33,1,9115,"backend"],[328,40,1,9122],[328,42,1,9123,"storePath"],[328,51,1,9132],[328,53,1,9133,"forceUpdate"],[328,64,1,9144],[328,66,1,9145,"subscriptionPriority"],[328,86,1,9165],[328,87,1,9166],[329,6,1,9166],[329,9,1,9168],[329,10,1,9169,"backend"],[329,17,1,9176],[329,19,1,9177,"storePath"],[329,28,1,9186],[329,30,1,9187,"forceUpdate"],[329,41,1,9198],[329,43,1,9199,"subscriptionPriority"],[329,63,1,9219],[329,64,1,9220],[329,65,1,9221],[330,4,1,9222],[330,11,1,9229],[330,15,1,9229,"useLayoutEffect"],[330,37,1,9244],[330,39,1,9246],[331,6,1,9246],[331,13,1,9250],[332,8,1,9250],[332,15,1,9254,"frontend"],[332,23,1,9262],[332,24,1,9263,"destroy"],[332,31,1,9270],[332,32,1,9271],[332,33,1,9272],[333,6,1,9272],[334,4,1,9272],[334,7,1,9274],[334,8,1,9275,"backend"],[334,15,1,9282],[334,16,1,9283],[334,17,1,9284],[334,19,1,9285,"frontend"],[334,27,1,9293],[334,28,1,9294,"updateFromBackend"],[334,45,1,9311],[334,46,1,9312],[334,47,1,9313],[334,49,1,9314,"frontend"],[334,57,1,9322],[335,2,1,9322],[336,2,1,9323],[336,11,1,9332,"useStoreBackendValue"],[336,31,1,9352,"useStoreBackendValue"],[336,32,1,9353,"widgetId"],[336,40,1,9361],[336,42,1,9362,"slot"],[336,46,1,9366],[336,48,1,9367],[337,4,1,9368],[337,8,1,9374,"backend"],[337,15,1,9381],[337,18,1,9382],[337,22,1,9382,"ensure"],[337,52,1,9382],[337,53,1,9382,"ensure"],[337,71,1,9388],[337,73,1,9389],[337,77,1,9389,"useContext"],[337,94,1,9399],[337,96,1,9400,"StoreBackendContext"],[337,115,1,9419],[337,116,1,9420],[337,117,1,9421],[338,6,1,9422,"storePath"],[338,15,1,9431],[338,18,1,9432],[338,22,1,9432,"ensure"],[338,52,1,9432],[338,53,1,9432,"ensure"],[338,71,1,9438],[338,73,1,9439],[338,77,1,9439,"useContext"],[338,94,1,9449],[338,96,1,9450,"StorePathContext"],[338,112,1,9466],[338,113,1,9467],[338,114,1,9468],[339,4,1,9469],[339,8,1,9469,"useEnsureConstantValues"],[339,38,1,9469],[339,39,1,9469,"useEnsureConstantValues"],[339,57,1,9492],[339,59,1,9493,"backend"],[339,66,1,9500],[339,68,1,9501,"storePath"],[339,77,1,9510],[339,79,1,9511,"widgetId"],[339,87,1,9519],[339,89,1,9520,"slot"],[339,93,1,9524],[339,94,1,9525],[340,4,1,9526],[340,11,1,9532],[340,12,1,9533],[340,16,1,9533,"useMemo"],[340,30,1,9540],[340,32,1,9542],[341,6,1,9542],[341,13,1,9546,"backend"],[341,20,1,9553],[341,21,1,9554,"get$"],[341,25,1,9558],[341,26,1,9559,"widgetId"],[341,34,1,9567],[341,36,1,9568,"slot"],[341,40,1,9572],[341,42,1,9573,"storePath"],[341,51,1,9582],[341,52,1,9583],[342,4,1,9583],[342,7,1,9585],[342,9,1,9587],[342,10,1,9588],[342,12,1,9589],[342,16,1,9589,"useCallback"],[342,34,1,9600],[342,36,1,9602],[342,46,1,9602,"value"],[342,51,1,9607],[343,6,1,9607],[343,13,1,9609,"backend"],[343,20,1,9616],[343,21,1,9617,"set"],[343,24,1,9620],[343,25,1,9621,"widgetId"],[343,33,1,9629],[343,35,1,9630,"slot"],[343,39,1,9634],[343,41,1,9635,"storePath"],[343,50,1,9644],[343,52,1,9645,"value"],[343,57,1,9650],[343,58,1,9651],[344,4,1,9651],[344,7,1,9653],[344,9,1,9655],[344,10,1,9656],[344,11,1,9657],[345,2,1,9657],[346,2,1,9658],[346,11,1,9667,"useOwnStoreBackendSlot"],[346,33,1,9689,"useOwnStoreBackendSlot"],[346,34,1,9690,"widgetId"],[346,42,1,9698],[346,44,1,9699,"slot"],[346,48,1,9703],[346,50,1,9704],[347,4,1,9705],[347,8,1,9711,"backend"],[347,15,1,9718],[347,18,1,9719],[347,22,1,9719,"ensure"],[347,52,1,9719],[347,53,1,9719,"ensure"],[347,71,1,9725],[347,73,1,9726],[347,77,1,9726,"useContext"],[347,94,1,9736],[347,96,1,9737,"StoreBackendContext"],[347,115,1,9756],[347,116,1,9757],[347,117,1,9758],[348,6,1,9759,"storePath"],[348,15,1,9768],[348,18,1,9769],[348,22,1,9769,"ensure"],[348,52,1,9769],[348,53,1,9769,"ensure"],[348,71,1,9775],[348,73,1,9776],[348,77,1,9776,"useContext"],[348,94,1,9786],[348,96,1,9787,"StorePathContext"],[348,112,1,9803],[348,113,1,9804],[348,114,1,9805],[349,4,1,9806],[349,8,1,9806,"useEnsureConstantValues"],[349,38,1,9806],[349,39,1,9806,"useEnsureConstantValues"],[349,57,1,9829],[349,59,1,9830,"backend"],[349,66,1,9837],[349,68,1,9838,"storePath"],[349,77,1,9847],[349,79,1,9848,"widgetId"],[349,87,1,9856],[349,89,1,9857,"slot"],[349,93,1,9861],[349,94,1,9862],[349,96,1,9863],[349,100,1,9863,"useLayoutEffect"],[349,122,1,9878],[349,124,1,9880],[350,6,1,9880],[350,13,1,9884],[351,8,1,9884],[351,15,1,9888,"backend"],[351,22,1,9895],[351,23,1,9896,"free"],[351,27,1,9900],[351,28,1,9901,"widgetId"],[351,36,1,9909],[351,38,1,9910,"slot"],[351,42,1,9914],[351,44,1,9915,"storePath"],[351,53,1,9924],[351,54,1,9925],[352,6,1,9925],[353,4,1,9925],[353,7,1,9927],[353,9,1,9929],[353,10,1,9930],[354,2,1,9930],[355,2,1,9931],[355,11,1,9940,"NestedStoreProvider"],[355,30,1,9959,"NestedStoreProvider"],[355,31,1,9960,"props"],[355,36,1,9965],[355,38,1,9966],[356,4,1,9967],[356,8,1,9973,"childStorePath"],[356,22,1,9987],[356,25,1,9988],[356,35,1,9997,"parent"],[356,41,1,10003],[356,43,1,10004,"namespace"],[356,52,1,10013],[356,54,1,10014],[357,6,1,10015],[357,10,1,10018,"namespace"],[357,19,1,10027],[357,20,1,10028,"includes"],[357,28,1,10036],[357,29,1,10037],[357,32,1,10040],[357,33,1,10041],[357,35,1,10042],[357,41,1,10048],[357,46,1,10052,"AssertionError"],[357,76,1,10052],[357,77,1,10052,"AssertionError"],[357,95,1,10066],[357,97,1,10067],[357,136,1,10106,"namespace"],[357,145,1,10115],[357,147,1,10117],[357,148,1,10118],[358,6,1,10119],[358,13,1,10125],[358,16,1,10128,"parent"],[358,22,1,10134],[358,25,1,10137,"namespace"],[358,34,1,10146],[358,37,1,10149],[359,4,1,10149],[359,5,1,10150],[359,6,1,10151],[359,10,1,10151,"ensure"],[359,40,1,10151],[359,41,1,10151,"ensure"],[359,59,1,10157],[359,61,1,10158],[359,65,1,10158,"useContext"],[359,82,1,10168],[359,84,1,10169,"StorePathContext"],[359,100,1,10185],[359,101,1,10186],[359,102,1,10187],[359,104,1,10188,"props"],[359,109,1,10193],[359,110,1,10194,"namespace"],[359,119,1,10203],[359,120,1,10204],[360,4,1,10205],[360,11,1,10212],[360,15,1,10212,"jsxs"],[360,31,1,10216],[360,33,1,10217,"StorePathContext"],[360,49,1,10233],[360,50,1,10234,"Provider"],[360,58,1,10242],[360,60,1,10243],[361,6,1,10244,"value"],[361,11,1,10249],[361,13,1,10250,"childStorePath"],[361,27,1,10264],[362,6,1,10265,"children"],[362,14,1,10273],[362,16,1,10274],[362,17,1,10275,"props"],[362,22,1,10280],[362,23,1,10281,"setupStore"],[362,33,1,10291],[362,36,1,10292],[362,40,1,10292,"jsx"],[362,55,1,10295],[362,57,1,10296,"CurrentStoreHandler"],[362,76,1,10315],[362,78,1,10316],[363,8,1,10317,"callback"],[363,16,1,10325],[363,18,1,10326,"props"],[363,23,1,10331],[363,24,1,10332,"setupStore"],[364,6,1,10342],[364,7,1,10343],[364,8,1,10344],[364,11,1,10345],[364,15,1,10349],[364,17,1,10350,"props"],[364,22,1,10355],[364,23,1,10356,"children"],[364,31,1,10364],[365,4,1,10365],[365,5,1,10366],[365,6,1,10367],[366,2,1,10367],[367,2,1,10368],[367,11,1,10377,"CurrentStoreHandler"],[367,30,1,10396,"CurrentStoreHandler"],[367,31,1,10397,"props"],[367,36,1,10402],[367,38,1,10403],[368,4,1,10404],[368,8,1,10410,"currentStore"],[368,20,1,10422],[368,23,1,10423,"useComponentStore"],[368,40,1,10440],[368,41,1,10441],[368,42,1,10442],[369,4,1,10443],[369,11,1,10450],[369,15,1,10450,"useMemo"],[369,29,1,10457],[369,31,1,10459],[370,6,1,10459],[370,13,1,10463,"props"],[370,18,1,10468],[370,19,1,10469,"callback"],[370,27,1,10477],[370,28,1,10478,"currentStore"],[370,40,1,10490],[370,41,1,10491],[371,4,1,10491],[371,7,1,10493],[371,8,1,10494,"props"],[371,13,1,10499],[371,14,1,10500,"callback"],[371,22,1,10508],[371,24,1,10509,"currentStore"],[371,36,1,10521],[371,37,1,10522],[371,38,1,10523],[371,40,1,10524],[371,44,1,10528],[372,2,1,10528],[373,0,1,10529],[373,3]],"functionMap":{"names":["<global>","__decorate","isAncestorOrSelf","StoreBackend","StoreBackend#constructor","StoreBackend#get$","fromComputation$$argument_1","recordsGroup.filter$argument_0","StoreBackend#set","recordsGroup.findIndex$argument_0","StoreBackend#getAllEntries$","StoreBackend#free","recordsGroup.filter.forEach$argument_0","StoreBackend#getUsedSlots","Array.from.filter$argument_0","Array.from.filter.map$argument_0","StoreBackend#groupKey","StoreBackend#getOrCreateGroup","StoreBackend#hasMirrors","StoreBackend#registerLocalMirror","group.findIndex$argument_0","StoreBackend#unregisterLocalMirror","StoreFrontend","StoreFrontend#constructor","StoreFrontend#useSlot","StoreFrontend#useBackendSlot","StoreFrontend#getAll$","allEntries$.dependOn.map$argument_0","StoreFrontend#getSubscriptionPriority","StoreFrontend#addUpdateCallback","StoreFrontend#updateFromBackend","StoreFrontend#destroy","StoreFrontend#flushUpdateCallbacks","updateCallbacks.splice.forEach$argument_0","StoreFrontend#getOrCreateLocalMirror","useDependency$argument_1","useDependency$argument_2","reaction$argument_0","reaction$argument_1","newMirror.setValue","newMirror.updateFromBackend","newMirror.free","RootStoreProvider","useComponentStore","useMemo$argument_0","useLayoutEffect$argument_0","<anonymous>","useStoreBackendValue","useOwnStoreBackendSlot","NestedStoreProvider","CurrentStoreHandler"],"mappings":"AAA,qcC,gbD,wEE,sEC,mBC,wHC,gLC,2GC,iDD,kJD,GG,0HD,iDC,mPC,6CD,yLE,sNJ,0WI,GC,iPJ,iDI,YC,oDD,2JE,wEC,oBD,QE,YF,GG,oDC,sWC,wOC,+JC,mCD,geE,wLD,mCC,kOlB,CH,6JsB,oBC,sRC,2LC,gFC,uHpB,gCqB,UrB,EoB,GE,2DC,4HC,0HC,+IC,+DC,MD,GE,sdC,wED,GE,oGC,4BD,GE,qFF,yDF,6F5B,8C4B,YK,qRL,mBM,wIN,MO,mSP,wDZ,CtB,sQ0C,8KC,8OC,yED,gFE,IC,sBH,mDI,2NH,yCG,mBD,iDC,OC,8NH,IC,yCE,MC,yDH,kKG,0NC,2FN,gCM,sClD"}},"type":"js/module"}]}