{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}},{"start":{"line":13,"column":18},"end":{"line":13,"column":38}},{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        _$$_REQUIRE(_dependencyMap[0], \"invariant\")(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(function (s) {\n      return s.trim();\n    });\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        _$$_REQUIRE(_dependencyMap[0], \"invariant\")(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(function (n) {\n      return Number.isNaN(Number(n));\n    });\n    if (__DEV__) {\n      _$$_REQUIRE(_dependencyMap[0], \"invariant\")(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  module.exports = processAspectRatio;\n});","lineCount":38,"map":[[2,2,11,0],[2,14,11,12],[4,2,15,0],[4,11,15,9,"processAspectRatio"],[4,29,15,27,"processAspectRatio"],[4,30,15,28,"aspectRatio"],[4,41,15,57],[4,43,15,68],[5,4,16,2],[5,8,16,6],[5,15,16,13,"aspectRatio"],[5,26,16,24],[5,31,16,29],[5,39,16,37],[5,41,16,39],[6,6,17,4],[6,13,17,11,"aspectRatio"],[6,24,17,22],[7,4,18,2],[8,4,19,2],[8,8,19,6],[8,15,19,13,"aspectRatio"],[8,26,19,24],[8,31,19,29],[8,39,19,37],[8,41,19,39],[9,6,20,4],[9,10,20,8,"__DEV__"],[9,17,20,15],[9,19,20,17],[10,8,21,6,"_$$_REQUIRE"],[10,19,21,6],[10,20,21,6,"_dependencyMap"],[10,34,21,6],[10,52,22,8],[10,53,22,9,"aspectRatio"],[10,64,22,20],[10,66,23,8],[10,145,23,87],[10,147,24,8,"aspectRatio"],[10,158,25,6],[10,159,25,7],[11,6,26,4],[12,6,27,4],[13,4,28,2],[14,4,30,2],[14,8,30,8,"matches"],[14,15,30,15],[14,18,30,18,"aspectRatio"],[14,29,30,29],[14,30,30,30,"split"],[14,35,30,35],[14,36,30,36],[14,39,30,39],[14,40,30,40],[14,41,30,41,"map"],[14,44,30,44],[14,45,30,45],[14,55,30,45,"s"],[14,56,30,46],[15,6,30,46],[15,13,30,50,"s"],[15,14,30,51],[15,15,30,52,"trim"],[15,19,30,56],[15,20,30,57],[15,21,30,58],[16,4,30,58],[16,6,30,59],[17,4,32,2],[17,8,32,6,"matches"],[17,15,32,13],[17,16,32,14,"includes"],[17,24,32,22],[17,25,32,23],[17,31,32,29],[17,32,32,30],[17,34,32,32],[18,6,33,4],[18,10,33,8,"__DEV__"],[18,17,33,15],[18,19,33,17],[19,8,34,6,"_$$_REQUIRE"],[19,19,34,6],[19,20,34,6,"_dependencyMap"],[19,34,34,6],[19,52,35,8,"matches"],[19,59,35,15],[19,60,35,16,"length"],[19,66,35,22],[19,68,36,8],[19,129,36,69],[19,131,37,8,"aspectRatio"],[19,142,38,6],[19,143,38,7],[20,6,39,4],[21,6,40,4],[22,4,41,2],[23,4,43,2],[23,8,43,8,"hasNonNumericValues"],[23,27,43,27],[23,30,43,30,"matches"],[23,37,43,37],[23,38,43,38,"some"],[23,42,43,42],[23,43,43,43],[23,53,43,43,"n"],[23,54,43,44],[24,6,43,44],[24,13,43,48,"Number"],[24,19,43,54],[24,20,43,55,"isNaN"],[24,25,43,60],[24,26,43,61,"Number"],[24,32,43,67],[24,33,43,68,"n"],[24,34,43,69],[24,35,43,70],[24,36,43,71],[25,4,43,71],[25,6,43,72],[26,4,44,2],[26,8,44,6,"__DEV__"],[26,15,44,13],[26,17,44,15],[27,6,45,4,"_$$_REQUIRE"],[27,17,45,4],[27,18,45,4,"_dependencyMap"],[27,32,45,4],[27,50,46,6],[27,51,46,7,"hasNonNumericValues"],[27,70,46,26],[27,75,46,31,"matches"],[27,82,46,38],[27,83,46,39,"length"],[27,89,46,45],[27,94,46,50],[27,95,46,51],[27,99,46,55,"matches"],[27,106,46,62],[27,107,46,63,"length"],[27,113,46,69],[27,118,46,74],[27,119,46,75],[27,120,46,76],[27,122,47,6],[27,201,47,85],[27,203,48,6,"aspectRatio"],[27,214,49,4],[27,215,49,5],[28,4,50,2],[29,4,52,2],[29,8,52,6,"hasNonNumericValues"],[29,27,52,25],[29,29,52,27],[30,6,53,4],[31,4,54,2],[32,4,56,2],[32,8,56,6,"matches"],[32,15,56,13],[32,16,56,14,"length"],[32,22,56,20],[32,27,56,25],[32,28,56,26],[32,30,56,28],[33,6,57,4],[33,13,57,11,"Number"],[33,19,57,17],[33,20,57,18,"matches"],[33,27,57,25],[33,28,57,26],[33,29,57,27],[33,30,57,28],[33,31,57,29],[33,34,57,32,"Number"],[33,40,57,38],[33,41,57,39,"matches"],[33,48,57,46],[33,49,57,47],[33,50,57,48],[33,51,57,49],[33,52,57,50],[34,4,58,2],[35,4,60,2],[35,11,60,9,"Number"],[35,17,60,15],[35,18,60,16,"matches"],[35,25,60,23],[35,26,60,24],[35,27,60,25],[35,28,60,26],[35,29,60,27],[36,2,61,0],[37,2,63,0,"module"],[37,8,63,6],[37,9,63,7,"exports"],[37,16,63,14],[37,19,63,17,"processAspectRatio"],[37,37,63,35],[38,0,63,36],[38,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"}},"type":"js/module"}]}