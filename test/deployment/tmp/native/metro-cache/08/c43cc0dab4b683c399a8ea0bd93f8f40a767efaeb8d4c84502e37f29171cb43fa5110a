{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":113,"column":0,"index":3315}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"../../../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":145},"end":{"line":4,"column":69,"index":214}}],"key":"2BYIjnTRSFId8SRJ7sJFxLD1BD4="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":391},"end":{"line":8,"column":40,"index":431}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../../../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":514},"end":{"line":10,"column":61,"index":575}},{"start":{"line":10,"column":0,"index":514},"end":{"line":10,"column":61,"index":575}}],"key":"6QYiO8x9sAoDBctSRJ19A8sqUNk="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}},{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}},{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s="}},{"name":"../../handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":87},"end":{"line":3,"column":57,"index":144}}],"key":"Q8MtNj8/mrt1iN8Kay94o881ERE="}},{"name":"../../../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}},{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}},{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}}],"key":"HJ6ReZDVLtCQDFQShsuSOLiCtL0="}},{"name":"../../../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":748},"end":{"line":17,"column":55,"index":803}}],"key":"ZDu7aL2iuT3Od7iyX13y9sY9XZQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.attachHandlers = attachHandlers;\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../../../RNGestureHandlerModule\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n  function attachHandlers(_ref) {\n    var preparedGesture = _ref.preparedGesture,\n      gestureConfig = _ref.gestureConfig,\n      gesturesToAttach = _ref.gesturesToAttach,\n      viewTag = _ref.viewTag,\n      webEventHandlersRef = _ref.webEventHandlersRef;\n    gestureConfig.initialize();\n\n    // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, _$$_REQUIRE(_dependencyMap[3], \"../../../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n      if (!preparedGesture.isMounted) {\n        return;\n      }\n      gestureConfig.prepare();\n    });\n    for (var handler of gesturesToAttach) {\n      (0, _$$_REQUIRE(_dependencyMap[4], \"./utils\").checkGestureCallbacksForWorklets)(handler);\n      _RNGestureHandlerModule.default.createGestureHandler(handler.handlerName, handler.handlerTag, (0, _$$_REQUIRE(_dependencyMap[5], \"../../utils\").filterConfig)(handler.config, _$$_REQUIRE(_dependencyMap[4], \"./utils\").ALLOWED_PROPS));\n      (0, _$$_REQUIRE(_dependencyMap[6], \"../../handlersRegistry\").registerHandler)(handler.handlerTag, handler, handler.config.testId);\n    }\n\n    // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, _$$_REQUIRE(_dependencyMap[3], \"../../../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n      if (!preparedGesture.isMounted) {\n        return;\n      }\n      for (var _handler of gesturesToAttach) {\n        _RNGestureHandlerModule.default.updateGestureHandler(_handler.handlerTag, (0, _$$_REQUIRE(_dependencyMap[5], \"../../utils\").filterConfig)(_handler.config, _$$_REQUIRE(_dependencyMap[4], \"./utils\").ALLOWED_PROPS, (0, _$$_REQUIRE(_dependencyMap[4], \"./utils\").extractGestureRelations)(_handler)));\n      }\n      (0, _$$_REQUIRE(_dependencyMap[5], \"../../utils\").scheduleFlushOperations)();\n    });\n    for (var gesture of gesturesToAttach) {\n      var actionType = gesture.shouldUseReanimated ? _$$_REQUIRE(_dependencyMap[7], \"../../../ActionType\").ActionType.REANIMATED_WORKLET : _$$_REQUIRE(_dependencyMap[7], \"../../../ActionType\").ActionType.JS_FUNCTION_NEW_API;\n      if (_reactNative.Platform.OS === 'web') {\n        _RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag, viewTag, _$$_REQUIRE(_dependencyMap[7], \"../../../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n        // Ignored on web\n        webEventHandlersRef);\n      } else {\n        _RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag, viewTag, actionType);\n      }\n      _$$_REQUIRE(_dependencyMap[8], \"../../../mountRegistry\").MountRegistry.gestureWillMount(gesture);\n    }\n    preparedGesture.attachedGestures = gesturesToAttach;\n    if (preparedGesture.animatedHandlers) {\n      var isAnimatedGesture = function isAnimatedGesture(g) {\n        return g.shouldUseReanimated;\n      };\n      preparedGesture.animatedHandlers.value = gesturesToAttach.filter(isAnimatedGesture).map(function (g) {\n        return g.handlers;\n      });\n    }\n  }\n});","lineCount":63,"map":[[7,2,4,0],[7,6,4,0,"_RNGestureHandlerModule"],[7,29,4,0],[7,32,4,0,"_interopRequireDefault"],[7,54,4,0],[7,55,4,0,"_$$_REQUIRE"],[7,66,4,0],[7,67,4,0,"_dependencyMap"],[7,81,4,0],[8,2,8,0],[8,6,8,0,"_reactNative"],[8,18,8,0],[8,21,8,0,"_$$_REQUIRE"],[8,32,8,0],[8,33,8,0,"_dependencyMap"],[8,47,8,0],[9,2,27,7],[9,11,27,16,"attachHandlers"],[9,25,27,30,"attachHandlers"],[9,26,27,30,"_ref"],[9,30,27,30],[9,32,33,25],[10,4,33,25],[10,8,28,2,"preparedGesture"],[10,23,28,17],[10,26,28,17,"_ref"],[10,30,28,17],[10,31,28,2,"preparedGesture"],[10,46,28,17],[11,6,29,2,"gestureConfig"],[11,19,29,15],[11,22,29,15,"_ref"],[11,26,29,15],[11,27,29,2,"gestureConfig"],[11,40,29,15],[12,6,30,2,"gesturesToAttach"],[12,22,30,18],[12,25,30,18,"_ref"],[12,29,30,18],[12,30,30,2,"gesturesToAttach"],[12,46,30,18],[13,6,31,2,"viewTag"],[13,13,31,9],[13,16,31,9,"_ref"],[13,20,31,9],[13,21,31,2,"viewTag"],[13,28,31,9],[14,6,32,2,"webEventHandlersRef"],[14,25,32,21],[14,28,32,21,"_ref"],[14,32,32,21],[14,33,32,2,"webEventHandlersRef"],[14,52,32,21],[15,4,34,2,"gestureConfig"],[15,17,34,15],[15,18,34,16,"initialize"],[15,28,34,26],[15,29,34,27],[15,30,34,28],[17,4,36,2],[18,4,37,2],[19,4,38,2],[19,8,38,2,"ghQueueMicrotask"],[19,38,38,2],[19,39,38,2,"ghQueueMicrotask"],[19,84,38,18],[19,86,38,19],[19,98,38,25],[20,6,39,4],[20,10,39,8],[20,11,39,9,"preparedGesture"],[20,26,39,24],[20,27,39,25,"isMounted"],[20,36,39,34],[20,38,39,36],[21,8,40,6],[22,6,41,4],[23,6,42,4,"gestureConfig"],[23,19,42,17],[23,20,42,18,"prepare"],[23,27,42,25],[23,28,42,26],[23,29,42,27],[24,4,43,2],[24,5,43,3],[24,6,43,4],[25,4,45,2],[25,9,45,7],[25,13,45,13,"handler"],[25,20,45,20],[25,24,45,24,"gesturesToAttach"],[25,40,45,40],[25,42,45,42],[26,6,46,4],[26,10,46,4,"checkGestureCallbacksForWorklets"],[26,40,46,4],[26,41,46,4,"checkGestureCallbacksForWorklets"],[26,84,46,36],[26,86,46,37,"handler"],[26,93,46,44],[26,94,46,45],[27,6,47,4,"RNGestureHandlerModule"],[27,37,47,26],[27,38,47,27,"createGestureHandler"],[27,58,47,47],[27,59,48,6,"handler"],[27,66,48,13],[27,67,48,14,"handlerName"],[27,78,48,25],[27,80,49,6,"handler"],[27,87,49,13],[27,88,49,14,"handlerTag"],[27,98,49,24],[27,100,50,6],[27,104,50,6,"filterConfig"],[27,134,50,6],[27,135,50,6,"filterConfig"],[27,162,50,18],[27,164,50,19,"handler"],[27,171,50,26],[27,172,50,27,"config"],[27,178,50,33],[27,180,50,35,"ALLOWED_PROPS"],[27,210,50,35],[27,211,50,35,"ALLOWED_PROPS"],[27,235,50,48],[27,236,51,4],[27,237,51,5],[28,6,53,4],[28,10,53,4,"registerHandler"],[28,40,53,4],[28,41,53,4,"registerHandler"],[28,82,53,19],[28,84,53,20,"handler"],[28,91,53,27],[28,92,53,28,"handlerTag"],[28,102,53,38],[28,104,53,40,"handler"],[28,111,53,47],[28,113,53,49,"handler"],[28,120,53,56],[28,121,53,57,"config"],[28,127,53,63],[28,128,53,64,"testId"],[28,134,53,70],[28,135,53,71],[29,4,54,2],[31,4,56,2],[32,4,57,2],[33,4,58,2],[33,8,58,2,"ghQueueMicrotask"],[33,38,58,2],[33,39,58,2,"ghQueueMicrotask"],[33,84,58,18],[33,86,58,19],[33,98,58,25],[34,6,59,4],[34,10,59,8],[34,11,59,9,"preparedGesture"],[34,26,59,24],[34,27,59,25,"isMounted"],[34,36,59,34],[34,38,59,36],[35,8,60,6],[36,6,61,4],[37,6,62,4],[37,11,62,9],[37,15,62,15,"handler"],[37,23,62,22],[37,27,62,26,"gesturesToAttach"],[37,43,62,42],[37,45,62,44],[38,8,63,6,"RNGestureHandlerModule"],[38,39,63,28],[38,40,63,29,"updateGestureHandler"],[38,60,63,49],[38,61,64,8,"handler"],[38,69,64,15],[38,70,64,16,"handlerTag"],[38,80,64,26],[38,82,65,8],[38,86,65,8,"filterConfig"],[38,116,65,8],[38,117,65,8,"filterConfig"],[38,144,65,20],[38,146,66,10,"handler"],[38,154,66,17],[38,155,66,18,"config"],[38,161,66,24],[38,163,67,10,"ALLOWED_PROPS"],[38,193,67,10],[38,194,67,10,"ALLOWED_PROPS"],[38,218,67,23],[38,220,68,10],[38,224,68,10,"extractGestureRelations"],[38,254,68,10],[38,255,68,10,"extractGestureRelations"],[38,289,68,33],[38,291,68,34,"handler"],[38,299,68,41],[38,300,69,8],[38,301,70,6],[38,302,70,7],[39,6,71,4],[40,6,73,4],[40,10,73,4,"scheduleFlushOperations"],[40,40,73,4],[40,41,73,4,"scheduleFlushOperations"],[40,79,73,27],[40,81,73,28],[40,82,73,29],[41,4,74,2],[41,5,74,3],[41,6,74,4],[42,4,76,2],[42,9,76,7],[42,13,76,13,"gesture"],[42,20,76,20],[42,24,76,24,"gesturesToAttach"],[42,40,76,40],[42,42,76,42],[43,6,77,4],[43,10,77,10,"actionType"],[43,20,77,20],[43,23,77,23,"gesture"],[43,30,77,30],[43,31,77,31,"shouldUseReanimated"],[43,50,77,50],[43,53,78,8,"ActionType"],[43,83,78,8],[43,84,78,8,"ActionType"],[43,117,78,18],[43,118,78,19,"REANIMATED_WORKLET"],[43,136,78,37],[43,139,79,8,"ActionType"],[43,169,79,8],[43,170,79,8,"ActionType"],[43,203,79,18],[43,204,79,19,"JS_FUNCTION_NEW_API"],[43,223,79,38],[44,6,81,4],[44,10,81,8,"Platform"],[44,31,81,16],[44,32,81,17,"OS"],[44,34,81,19],[44,39,81,24],[44,44,81,29],[44,46,81,31],[45,8,83,8,"RNGestureHandlerModule"],[45,39,83,30],[45,40,83,31,"attachGestureHandler"],[45,60,83,51],[45,61,85,8,"gesture"],[45,68,85,15],[45,69,85,16,"handlerTag"],[45,79,85,26],[45,81,86,8,"viewTag"],[45,88,86,15],[45,90,87,8,"ActionType"],[45,120,87,8],[45,121,87,8,"ActionType"],[45,154,87,18],[45,155,87,19,"JS_FUNCTION_OLD_API"],[45,174,87,38],[46,8,87,40],[47,8,88,8,"webEventHandlersRef"],[47,27,89,6],[47,28,89,7],[48,6,90,4],[48,7,90,5],[48,13,90,11],[49,8,91,6,"RNGestureHandlerModule"],[49,39,91,28],[49,40,91,29,"attachGestureHandler"],[49,60,91,49],[49,61,92,8,"gesture"],[49,68,92,15],[49,69,92,16,"handlerTag"],[49,79,92,26],[49,81,93,8,"viewTag"],[49,88,93,15],[49,90,94,8,"actionType"],[49,100,95,6],[49,101,95,7],[50,6,96,4],[51,6,98,4,"MountRegistry"],[51,36,98,4],[51,37,98,4,"MountRegistry"],[51,76,98,17],[51,77,98,18,"gestureWillMount"],[51,93,98,34],[51,94,98,35,"gesture"],[51,101,98,42],[51,102,98,43],[52,4,99,2],[53,4,101,2,"preparedGesture"],[53,19,101,17],[53,20,101,18,"attachedGestures"],[53,36,101,34],[53,39,101,37,"gesturesToAttach"],[53,55,101,53],[54,4,103,2],[54,8,103,6,"preparedGesture"],[54,23,103,21],[54,24,103,22,"animatedHandlers"],[54,40,103,38],[54,42,103,40],[55,6,104,4],[55,10,104,10,"isAnimatedGesture"],[55,27,104,27],[55,30,104,30],[55,39,104,10,"isAnimatedGesture"],[55,56,104,27,"isAnimatedGesture"],[55,57,104,31,"g"],[55,58,104,45],[56,8,104,45],[56,15,104,50,"g"],[56,16,104,51],[56,17,104,52,"shouldUseReanimated"],[56,36,104,71],[57,6,104,71],[58,6,106,4,"preparedGesture"],[58,21,106,19],[58,22,106,20,"animatedHandlers"],[58,38,106,36],[58,39,106,37,"value"],[58,44,106,42],[58,47,106,45,"gesturesToAttach"],[58,63,106,61],[58,64,107,7,"filter"],[58,70,107,13],[58,71,107,14,"isAnimatedGesture"],[58,88,107,31],[58,89,107,32],[58,90,108,7,"map"],[58,93,108,10],[58,94,108,11],[58,104,108,12,"g"],[58,105,108,13],[59,8,108,13],[59,15,108,18,"g"],[59,16,108,19],[59,17,108,20,"handlers"],[59,25,108,28],[60,6,108,28],[60,8,110,7],[61,4,111,2],[62,2,112,0],[63,0,112,1],[63,3]],"functionMap":{"names":["<global>","attachHandlers","ghQueueMicrotask$argument_0","isAnimatedGesture","gesturesToAttach.filter.map$argument_0"],"mappings":"AAA;OC0B;mBCW;GDK;mBCe;GDgB;8BE8B,yCF;WGI,iBH;CDI"}},"type":"js/module"}]}