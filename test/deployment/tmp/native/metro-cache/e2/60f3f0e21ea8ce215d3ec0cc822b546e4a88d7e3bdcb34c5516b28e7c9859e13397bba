{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":55,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":435},"end":{"line":13,"column":43,"index":478}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE="}},{"name":"./useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":216},"end":{"line":6,"column":50,"index":266}},{"start":{"line":6,"column":0,"index":216},"end":{"line":6,"column":50,"index":266}}],"key":"6yldmc0IldDX63zJLZukWRMfHng="}},{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":177},"end":{"line":5,"column":38,"index":215}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScrollViewOffset = void 0;\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  var IS_WEB = (0, _$$_REQUIRE(_dependencyMap[1], \"../PlatformChecker\").isWeb)();\n\n  /**\n   * Lets you synchronously get the current offset of a `ScrollView`.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef)\n   *   attached to an Animated.ScrollView component.\n   * @returns A shared value which holds the current offset of the `ScrollView`.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n   */\n  var useScrollViewOffset = exports.useScrollViewOffset = IS_WEB ? useScrollViewOffsetWeb : useScrollViewOffsetNative;\n  var _worklet_11808413640710_init_data = {\n    code: \"function useScrollViewOffsetTs1(){const{animatedRef,getWebScrollableElement,offset}=this.__closure;if(animatedRef){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-reanimated\\\\src\\\\hook\\\\useScrollViewOffset.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useScrollViewOffsetTs1\\\",\\\"animatedRef\\\",\\\"getWebScrollableElement\\\",\\\"offset\\\",\\\"__closure\\\",\\\"element\\\",\\\"current\\\",\\\"value\\\",\\\"scrollLeft\\\",\\\"scrollTop\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\\\"],\\\"mappings\\\":\\\"AAoCmC,SAAAA,sBAAMA,CAAA,QAAAC,WAAA,CAAAC,uBAAA,CAAAC,MAAA,OAAAC,SAAA,CAErC,GAAIH,WAAW,CAAE,CACf,KAAM,CAAAI,OAAO,CAAGH,uBAAuB,CAACD,WAAW,CAACK,OAAO,CAAC,CAE5DH,MAAM,CAACI,KAAK,CACVF,OAAO,CAACG,UAAU,GAAK,CAAC,CAAGH,OAAO,CAACI,SAAS,CAAGJ,OAAO,CAACG,UAAU,CACrE,CAEF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  function useScrollViewOffsetWeb(animatedRef, providedOffset) {\n    var internalOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./useSharedValue\").useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset != null ? providedOffset : internalOffset).current;\n    var eventHandler = (0, _react.useCallback)(function () {\n      var _e = [new global.Error(), -4, -27];\n      var useScrollViewOffsetTs1 = function useScrollViewOffsetTs1() {\n        if (animatedRef) {\n          var element = getWebScrollableElement(animatedRef.current);\n          // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n          offset.value = element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      };\n      useScrollViewOffsetTs1.__closure = {\n        animatedRef: animatedRef,\n        getWebScrollableElement: getWebScrollableElement,\n        offset: offset\n      };\n      useScrollViewOffsetTs1.__workletHash = 11808413640710;\n      useScrollViewOffsetTs1.__initData = _worklet_11808413640710_init_data;\n      useScrollViewOffsetTs1.__stackDetails = _e;\n      return useScrollViewOffsetTs1;\n    }(), [animatedRef, animatedRef == null ? void 0 : animatedRef.current]);\n    (0, _react.useEffect)(function () {\n      var element = animatedRef != null && animatedRef.current ? getWebScrollableElement(animatedRef.current) : null;\n      if (element) {\n        element.addEventListener('scroll', eventHandler);\n      }\n      return function () {\n        if (element) {\n          element.removeEventListener('scroll', eventHandler);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef == null ? void 0 : animatedRef.current, eventHandler]);\n    return offset;\n  }\n  var _worklet_1312696806867_init_data = {\n    code: \"function useScrollViewOffsetTs2(event){const{offset}=this.__closure;offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-reanimated\\\\src\\\\hook\\\\useScrollViewOffset.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useScrollViewOffsetTs2\\\",\\\"event\\\",\\\"offset\\\",\\\"__closure\\\",\\\"value\\\",\\\"contentOffset\\\",\\\"x\\\",\\\"y\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\\\"],\\\"mappings\\\":\\\"AA6EI,QAAC,CAAAA,sBAAiCA,CAAAC,KAAA,QAAAC,MAAA,OAAAC,SAAA,CAEhCD,MAAM,CAACE,KAAK,CACVH,KAAK,CAACI,aAAa,CAACC,CAAC,GAAK,CAAC,CACvBL,KAAK,CAACI,aAAa,CAACE,CAAC,CACrBN,KAAK,CAACI,aAAa,CAACC,CAAC,CAC7B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  function useScrollViewOffsetNative(animatedRef, providedOffset) {\n    var internalOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./useSharedValue\").useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset != null ? providedOffset : internalOffset).current;\n    var eventHandler = (0, _$$_REQUIRE(_dependencyMap[3], \"./useEvent\").useEvent)(function () {\n      var _e = [new global.Error(), -2, -27];\n      var useScrollViewOffsetTs2 = function useScrollViewOffsetTs2(event) {\n        offset.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n      };\n      useScrollViewOffsetTs2.__closure = {\n        offset: offset\n      };\n      useScrollViewOffsetTs2.__workletHash = 1312696806867;\n      useScrollViewOffsetTs2.__initData = _worklet_1312696806867_init_data;\n      useScrollViewOffsetTs2.__stackDetails = _e;\n      return useScrollViewOffsetTs2;\n    }(), scrollNativeEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n    );\n    (0, _react.useEffect)(function () {\n      var _animatedRef$getTag;\n      var elementTag = (_animatedRef$getTag = animatedRef == null ? void 0 : animatedRef.getTag()) != null ? _animatedRef$getTag : null;\n      if (elementTag) {\n        eventHandler.workletEventHandler.registerForEvents(elementTag);\n      }\n      return function () {\n        if (elementTag) {\n          eventHandler.workletEventHandler.unregisterFromEvents(elementTag);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef == null ? void 0 : animatedRef.current, eventHandler]);\n    return offset;\n  }\n  function getWebScrollableElement(scrollComponent) {\n    var _ref;\n    return (_ref = scrollComponent == null ? void 0 : scrollComponent.getScrollableNode()) != null ? _ref : scrollComponent;\n  }\n  var scrollNativeEventNames = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\n});","lineCount":115,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useScrollViewOffset"],[7,29,1,13],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"_$$_REQUIRE"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,15,0],[9,6,15,6,"IS_WEB"],[9,12,15,12],[9,15,15,15],[9,19,15,15,"isWeb"],[9,49,15,15],[9,50,15,15,"isWeb"],[9,77,15,20],[9,79,15,21],[9,80,15,22],[11,2,17,0],[12,0,18,0],[13,0,19,0],[14,0,20,0],[15,0,21,0],[16,0,22,0],[17,0,23,0],[18,0,24,0],[19,0,25,0],[20,2,26,7],[20,6,26,13,"useScrollViewOffset"],[20,25,26,32],[20,28,26,32,"exports"],[20,35,26,32],[20,36,26,32,"useScrollViewOffset"],[20,55,26,32],[20,58,26,35,"IS_WEB"],[20,64,26,41],[20,67,27,4,"useScrollViewOffsetWeb"],[20,89,27,26],[20,92,28,4,"useScrollViewOffsetNative"],[20,117,28,29],[21,2,28,30],[21,6,28,30,"_worklet_11808413640710_init_data"],[21,39,28,30],[22,4,28,30,"code"],[22,8,28,30],[23,4,28,30,"location"],[23,12,28,30],[24,4,28,30,"sourceMap"],[24,13,28,30],[25,4,28,30,"version"],[25,11,28,30],[26,2,28,30],[27,2,30,0],[27,11,30,9,"useScrollViewOffsetWeb"],[27,33,30,31,"useScrollViewOffsetWeb"],[27,34,31,2,"animatedRef"],[27,45,31,53],[27,47,32,2,"providedOffset"],[27,61,32,38],[27,63,33,23],[28,4,34,2],[28,8,34,8,"internalOffset"],[28,22,34,22],[28,25,34,25],[28,29,34,25,"useSharedValue"],[28,59,34,25],[28,60,34,25,"useSharedValue"],[28,94,34,39],[28,96,34,40],[28,97,34,41],[28,98,34,42],[29,4,35,2],[29,8,35,8,"offset"],[29,14,35,14],[29,17,35,17],[29,21,35,17,"useRef"],[29,34,35,23],[29,36,35,24,"providedOffset"],[29,50,35,38],[29,61,35,24,"providedOffset"],[29,75,35,38],[29,78,35,42,"internalOffset"],[29,92,35,56],[29,93,35,57],[29,94,35,58,"current"],[29,101,35,65],[30,4,37,2],[30,8,37,8,"eventHandler"],[30,20,37,20],[30,23,37,23],[30,27,37,23,"useCallback"],[30,45,37,34],[30,47,37,35],[31,6,37,35],[31,10,37,35,"_e"],[31,12,37,35],[31,20,37,35,"global"],[31,26,37,35],[31,27,37,35,"Error"],[31,32,37,35],[32,6,37,35],[32,10,37,35,"useScrollViewOffsetTs1"],[32,32,37,35],[32,44,37,35,"useScrollViewOffsetTs1"],[32,67,37,35],[32,69,37,41],[33,8,39,4],[33,12,39,8,"animatedRef"],[33,23,39,19],[33,25,39,21],[34,10,40,6],[34,14,40,12,"element"],[34,21,40,19],[34,24,40,22,"getWebScrollableElement"],[34,47,40,45],[34,48,40,46,"animatedRef"],[34,59,40,57],[34,60,40,58,"current"],[34,67,40,65],[34,68,40,66],[35,10,41,6],[36,10,42,6,"offset"],[36,16,42,12],[36,17,42,13,"value"],[36,22,42,18],[36,25,43,8,"element"],[36,32,43,15],[36,33,43,16,"scrollLeft"],[36,43,43,26],[36,48,43,31],[36,49,43,32],[36,52,43,35,"element"],[36,59,43,42],[36,60,43,43,"scrollTop"],[36,69,43,52],[36,72,43,55,"element"],[36,79,43,62],[36,80,43,63,"scrollLeft"],[36,90,43,73],[37,8,44,4],[38,8,45,4],[39,6,46,2],[39,7,46,3],[40,6,46,3,"useScrollViewOffsetTs1"],[40,28,46,3],[40,29,46,3,"__closure"],[40,38,46,3],[41,8,46,3,"animatedRef"],[41,19,46,3],[41,21,39,8,"animatedRef"],[41,32,39,19],[42,8,39,19,"getWebScrollableElement"],[42,31,39,19],[42,33,40,22,"getWebScrollableElement"],[42,56,40,45],[43,8,40,45,"offset"],[43,14,40,45],[43,16,42,6,"offset"],[44,6,42,12],[45,6,42,12,"useScrollViewOffsetTs1"],[45,28,42,12],[45,29,42,12,"__workletHash"],[45,42,42,12],[46,6,42,12,"useScrollViewOffsetTs1"],[46,28,42,12],[46,29,42,12,"__initData"],[46,39,42,12],[46,42,42,12,"_worklet_11808413640710_init_data"],[46,75,42,12],[47,6,42,12,"useScrollViewOffsetTs1"],[47,28,42,12],[47,29,42,12,"__stackDetails"],[47,43,42,12],[47,46,42,12,"_e"],[47,48,42,12],[48,6,42,12],[48,13,42,12,"useScrollViewOffsetTs1"],[48,35,42,12],[49,4,42,12],[49,5,37,35],[49,9,46,5],[49,10,46,6,"animatedRef"],[49,21,46,17],[49,23,46,19,"animatedRef"],[49,34,46,30],[49,54,46,19,"animatedRef"],[49,65,46,30],[49,66,46,32,"current"],[49,73,46,39],[49,74,46,40],[49,75,46,41],[50,4,48,2],[50,8,48,2,"useEffect"],[50,24,48,11],[50,26,48,12],[50,38,48,18],[51,6,49,4],[51,10,49,10,"element"],[51,17,49,17],[51,20,49,20,"animatedRef"],[51,31,49,31],[51,43,49,20,"animatedRef"],[51,54,49,31],[51,55,49,33,"current"],[51,62,49,40],[51,65,50,8,"getWebScrollableElement"],[51,88,50,31],[51,89,50,32,"animatedRef"],[51,100,50,43],[51,101,50,44,"current"],[51,108,50,51],[51,109,50,52],[51,112,51,8],[51,116,51,12],[52,6,53,4],[52,10,53,8,"element"],[52,17,53,15],[52,19,53,17],[53,8,54,6,"element"],[53,15,54,13],[53,16,54,14,"addEventListener"],[53,32,54,30],[53,33,54,31],[53,41,54,39],[53,43,54,41,"eventHandler"],[53,55,54,53],[53,56,54,54],[54,6,55,4],[55,6,56,4],[55,13,56,11],[55,25,56,17],[56,8,57,6],[56,12,57,10,"element"],[56,19,57,17],[56,21,57,19],[57,10,58,8,"element"],[57,17,58,15],[57,18,58,16,"removeEventListener"],[57,37,58,35],[57,38,58,36],[57,46,58,44],[57,48,58,46,"eventHandler"],[57,60,58,58],[57,61,58,59],[58,8,59,6],[59,6,60,4],[59,7,60,5],[60,6,61,4],[61,6,62,4],[62,6,63,4],[63,6,64,4],[64,4,65,2],[64,5,65,3],[64,7,65,5],[64,8,65,6,"animatedRef"],[64,19,65,17],[64,21,65,19,"animatedRef"],[64,32,65,30],[64,52,65,19,"animatedRef"],[64,63,65,30],[64,64,65,32,"current"],[64,71,65,39],[64,73,65,41,"eventHandler"],[64,85,65,53],[64,86,65,54],[64,87,65,55],[65,4,67,2],[65,11,67,9,"offset"],[65,17,67,15],[66,2,68,0],[67,2,68,1],[67,6,68,1,"_worklet_1312696806867_init_data"],[67,38,68,1],[68,4,68,1,"code"],[68,8,68,1],[69,4,68,1,"location"],[69,12,68,1],[70,4,68,1,"sourceMap"],[70,13,68,1],[71,4,68,1,"version"],[71,11,68,1],[72,2,68,1],[73,2,70,0],[73,11,70,9,"useScrollViewOffsetNative"],[73,36,70,34,"useScrollViewOffsetNative"],[73,37,71,2,"animatedRef"],[73,48,71,53],[73,50,72,2,"providedOffset"],[73,64,72,38],[73,66,73,23],[74,4,74,2],[74,8,74,8,"internalOffset"],[74,22,74,22],[74,25,74,25],[74,29,74,25,"useSharedValue"],[74,59,74,25],[74,60,74,25,"useSharedValue"],[74,94,74,39],[74,96,74,40],[74,97,74,41],[74,98,74,42],[75,4,75,2],[75,8,75,8,"offset"],[75,14,75,14],[75,17,75,17],[75,21,75,17,"useRef"],[75,34,75,23],[75,36,75,24,"providedOffset"],[75,50,75,38],[75,61,75,24,"providedOffset"],[75,75,75,38],[75,78,75,42,"internalOffset"],[75,92,75,56],[75,93,75,57],[75,94,75,58,"current"],[75,101,75,65],[76,4,77,2],[76,8,77,8,"eventHandler"],[76,20,77,20],[76,23,77,23],[76,27,77,23,"useEvent"],[76,57,77,23],[76,58,77,23,"useEvent"],[76,80,77,31],[76,82,78,4],[77,6,78,4],[77,10,78,4,"_e"],[77,12,78,4],[77,20,78,4,"global"],[77,26,78,4],[77,27,78,4,"Error"],[77,32,78,4],[78,6,78,4],[78,10,78,4,"useScrollViewOffsetTs2"],[78,32,78,4],[78,44,78,4,"useScrollViewOffsetTs2"],[78,67,78,5,"event"],[78,72,78,33],[78,74,78,38],[79,8,80,6,"offset"],[79,14,80,12],[79,15,80,13,"value"],[79,20,80,18],[79,23,81,8,"event"],[79,28,81,13],[79,29,81,14,"contentOffset"],[79,42,81,27],[79,43,81,28,"x"],[79,44,81,29],[79,49,81,34],[79,50,81,35],[79,53,82,12,"event"],[79,58,82,17],[79,59,82,18,"contentOffset"],[79,72,82,31],[79,73,82,32,"y"],[79,74,82,33],[79,77,83,12,"event"],[79,82,83,17],[79,83,83,18,"contentOffset"],[79,96,83,31],[79,97,83,32,"x"],[79,98,83,33],[80,6,84,4],[80,7,84,5],[81,6,84,5,"useScrollViewOffsetTs2"],[81,28,84,5],[81,29,84,5,"__closure"],[81,38,84,5],[82,8,84,5,"offset"],[82,14,84,5],[82,16,80,6,"offset"],[83,6,80,12],[84,6,80,12,"useScrollViewOffsetTs2"],[84,28,80,12],[84,29,80,12,"__workletHash"],[84,42,80,12],[85,6,80,12,"useScrollViewOffsetTs2"],[85,28,80,12],[85,29,80,12,"__initData"],[85,39,80,12],[85,42,80,12,"_worklet_1312696806867_init_data"],[85,74,80,12],[86,6,80,12,"useScrollViewOffsetTs2"],[86,28,80,12],[86,29,80,12,"__stackDetails"],[86,43,80,12],[86,46,80,12,"_e"],[86,48,80,12],[87,6,80,12],[87,13,80,12,"useScrollViewOffsetTs2"],[87,35,80,12],[88,4,80,12],[88,5,78,4],[88,9,85,4,"scrollNativeEventNames"],[89,4,86,4],[90,4,87,4],[91,4,88,2],[91,5,88,61],[92,4,90,2],[92,8,90,2,"useEffect"],[92,24,90,11],[92,26,90,12],[92,38,90,18],[93,6,90,18],[93,10,90,18,"_animatedRef$getTag"],[93,29,90,18],[94,6,91,4],[94,10,91,10,"elementTag"],[94,20,91,20],[94,24,91,20,"_animatedRef$getTag"],[94,43,91,20],[94,46,91,23,"animatedRef"],[94,57,91,34],[94,77,91,23,"animatedRef"],[94,88,91,34],[94,89,91,36,"getTag"],[94,95,91,42],[94,96,91,43],[94,97,91,44],[94,109,91,44,"_animatedRef$getTag"],[94,128,91,44],[94,131,91,48],[94,135,91,52],[95,6,93,4],[95,10,93,8,"elementTag"],[95,20,93,18],[95,22,93,20],[96,8,94,6,"eventHandler"],[96,20,94,18],[96,21,94,19,"workletEventHandler"],[96,40,94,38],[96,41,94,39,"registerForEvents"],[96,58,94,56],[96,59,94,57,"elementTag"],[96,69,94,67],[96,70,94,68],[97,6,95,4],[98,6,96,4],[98,13,96,11],[98,25,96,17],[99,8,97,6],[99,12,97,10,"elementTag"],[99,22,97,20],[99,24,97,22],[100,10,98,8,"eventHandler"],[100,22,98,20],[100,23,98,21,"workletEventHandler"],[100,42,98,40],[100,43,98,41,"unregisterFromEvents"],[100,63,98,61],[100,64,98,62,"elementTag"],[100,74,98,72],[100,75,98,73],[101,8,99,6],[102,6,100,4],[102,7,100,5],[103,6,101,4],[104,6,102,4],[105,6,103,4],[106,6,104,4],[107,4,105,2],[107,5,105,3],[107,7,105,5],[107,8,105,6,"animatedRef"],[107,19,105,17],[107,21,105,19,"animatedRef"],[107,32,105,30],[107,52,105,19,"animatedRef"],[107,63,105,30],[107,64,105,32,"current"],[107,71,105,39],[107,73,105,41,"eventHandler"],[107,85,105,53],[107,86,105,54],[107,87,105,55],[108,4,107,2],[108,11,107,9,"offset"],[108,17,107,15],[109,2,108,0],[110,2,110,0],[110,11,110,9,"getWebScrollableElement"],[110,34,110,32,"getWebScrollableElement"],[110,35,111,2,"scrollComponent"],[110,50,111,44],[110,52,112,15],[111,4,112,15],[111,8,112,15,"_ref"],[111,12,112,15],[112,4,113,2],[112,12,113,2,"_ref"],[112,16,113,2],[112,19,114,5,"scrollComponent"],[112,34,114,20],[112,54,114,5,"scrollComponent"],[112,69,114,20],[112,70,114,22,"getScrollableNode"],[112,87,114,39],[112,88,114,40],[112,89,114,41],[112,101,114,41,"_ref"],[112,105,114,41],[112,108,115,4,"scrollComponent"],[112,123,115,19],[113,2,117,0],[114,2,119,0],[114,6,119,6,"scrollNativeEventNames"],[114,28,119,28],[114,31,119,31],[114,32,120,2],[114,42,120,12],[114,44,121,2],[114,63,121,21],[114,65,122,2],[114,82,122,19],[114,84,123,2],[114,107,123,25],[114,109,124,2],[114,130,124,23],[114,131,125,1],[115,0,125,2],[115,3]],"functionMap":{"names":["<global>","useScrollViewOffsetWeb","eventHandler","useEffect$argument_0","<anonymous>","useScrollViewOffsetNative","useEvent$argument_0","getWebScrollableElement"],"mappings":"AAA;AC6B;mCCO;GDS;YEE;WCQ;KDI;GFK;CDG;AKE;ICQ;KDM;YFM;WCM;KDI;GEK;CLG;AOE;CPO"}},"type":"js/module"}]}