{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":245,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":245,"column":1}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.computeWindowedRenderLimits = computeWindowedRenderLimits;\n  exports.elementsThatOverlapOffsets = elementsThatOverlapOffsets;\n  exports.keyExtractor = keyExtractor;\n  exports.newRangeCount = newRangeCount;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  function elementsThatOverlapOffsets(offsets, props, listMetrics) {\n    var zoomScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var itemCount = props.getItemCount(props.data);\n    var result = [];\n    for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n      var currentOffset = offsets[offsetIndex];\n      var left = 0;\n      var right = itemCount - 1;\n      while (left <= right) {\n        var mid = left + Math.floor((right - left) / 2);\n        var frame = listMetrics.getCellMetricsApprox(mid, props);\n        var scaledOffsetStart = frame.offset * zoomScale;\n        var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n        if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {\n          right = mid - 1;\n        } else if (currentOffset > scaledOffsetEnd) {\n          left = mid + 1;\n        } else {\n          result[offsetIndex] = mid;\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n  function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, listMetrics, scrollMetrics) {\n    var itemCount = props.getItemCount(props.data);\n    if (itemCount === 0) {\n      return {\n        first: 0,\n        last: -1\n      };\n    }\n    var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength,\n      _scrollMetrics$zoomSc = scrollMetrics.zoomScale,\n      zoomScale = _scrollMetrics$zoomSc === void 0 ? 1 : _scrollMetrics$zoomSc;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = listMetrics.getCellMetricsApprox(itemCount - 1, props).offset * zoomScale;\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, listMetrics, zoomScale),\n      _elementsThatOverlapO2 = (0, _slicedToArray2.default)(_elementsThatOverlapO, 4),\n      overscanFirst = _elementsThatOverlapO2[0],\n      first = _elementsThatOverlapO2[1],\n      last = _elementsThatOverlapO2[2],\n      overscanLast = _elementsThatOverlapO2[3];\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first: first,\n      last: last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n        first--;\n      }\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n        last++;\n      }\n    }\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first: first,\n        last: last,\n        itemCount: itemCount,\n        overscanFirst: overscanFirst,\n        overscanLast: overscanLast,\n        visible: visible\n      }));\n    }\n    return {\n      first: first,\n      last: last\n    };\n  }\n  function keyExtractor(item, index) {\n    if (typeof item === 'object' && (item == null ? void 0 : item.key) != null) {\n      return item.key;\n    }\n    if (typeof item === 'object' && (item == null ? void 0 : item.id) != null) {\n      return item.id;\n    }\n    return String(index);\n  }\n});","lineCount":132,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_interopRequireDefault"],[4,28,11,13],[4,31,11,13,"_$$_REQUIRE"],[4,42,11,13],[4,43,11,13,"_dependencyMap"],[4,57,11,13],[5,2,11,13,"Object"],[5,8,11,13],[5,9,11,13,"defineProperty"],[5,23,11,13],[5,24,11,13,"exports"],[5,31,11,13],[6,4,11,13,"value"],[6,9,11,13],[7,2,11,13],[8,2,11,13,"exports"],[8,9,11,13],[8,10,11,13,"computeWindowedRenderLimits"],[8,37,11,13],[8,40,11,13,"computeWindowedRenderLimits"],[8,67,11,13],[9,2,11,13,"exports"],[9,9,11,13],[9,10,11,13,"elementsThatOverlapOffsets"],[9,36,11,13],[9,39,11,13,"elementsThatOverlapOffsets"],[9,65,11,13],[10,2,11,13,"exports"],[10,9,11,13],[10,10,11,13,"keyExtractor"],[10,22,11,13],[10,25,11,13,"keyExtractor"],[10,37,11,13],[11,2,11,13,"exports"],[11,9,11,13],[11,10,11,13,"newRangeCount"],[11,23,11,13],[11,26,11,13,"newRangeCount"],[11,39,11,13],[12,2,11,13],[12,6,11,13,"_slicedToArray2"],[12,21,11,13],[12,24,11,13,"_interopRequireDefault"],[12,46,11,13],[12,47,11,13,"_$$_REQUIRE"],[12,58,11,13],[12,59,11,13,"_dependencyMap"],[12,73,11,13],[13,2,22,7],[13,11,22,16,"elementsThatOverlapOffsets"],[13,37,22,42,"elementsThatOverlapOffsets"],[13,38,23,2,"offsets"],[13,45,23,24],[13,47,24,2,"props"],[13,52,24,24],[13,54,25,2,"listMetrics"],[13,65,25,36],[13,67,27,17],[14,4,27,17],[14,8,26,2,"zoomScale"],[14,17,26,19],[14,20,26,19,"arguments"],[14,29,26,19],[14,30,26,19,"length"],[14,36,26,19],[14,44,26,19,"arguments"],[14,53,26,19],[14,61,26,19,"undefined"],[14,70,26,19],[14,73,26,19,"arguments"],[14,82,26,19],[14,88,26,22],[14,89,26,23],[15,4,28,2],[15,8,28,8,"itemCount"],[15,17,28,17],[15,20,28,20,"props"],[15,25,28,25],[15,26,28,26,"getItemCount"],[15,38,28,38],[15,39,28,39,"props"],[15,44,28,44],[15,45,28,45,"data"],[15,49,28,49],[15,50,28,50],[16,4,29,2],[16,8,29,8,"result"],[16,14,29,14],[16,17,29,17],[16,19,29,19],[17,4,30,2],[17,9,30,7],[17,13,30,11,"offsetIndex"],[17,24,30,22],[17,27,30,25],[17,28,30,26],[17,30,30,28,"offsetIndex"],[17,41,30,39],[17,44,30,42,"offsets"],[17,51,30,49],[17,52,30,50,"length"],[17,58,30,56],[17,60,30,58,"offsetIndex"],[17,71,30,69],[17,73,30,71],[17,75,30,73],[18,6,31,4],[18,10,31,10,"currentOffset"],[18,23,31,23],[18,26,31,26,"offsets"],[18,33,31,33],[18,34,31,34,"offsetIndex"],[18,45,31,45],[18,46,31,46],[19,6,32,4],[19,10,32,8,"left"],[19,14,32,12],[19,17,32,15],[19,18,32,16],[20,6,33,4],[20,10,33,8,"right"],[20,15,33,13],[20,18,33,16,"itemCount"],[20,27,33,25],[20,30,33,28],[20,31,33,29],[21,6,35,4],[21,13,35,11,"left"],[21,17,35,15],[21,21,35,19,"right"],[21,26,35,24],[21,28,35,26],[22,8,36,6],[22,12,36,12,"mid"],[22,15,36,15],[22,18,36,18,"left"],[22,22,36,22],[22,25,36,25,"Math"],[22,29,36,29],[22,30,36,30,"floor"],[22,35,36,35],[22,36,36,36],[22,37,36,37,"right"],[22,42,36,42],[22,45,36,45,"left"],[22,49,36,49],[22,53,36,53],[22,54,36,54],[22,55,36,55],[23,8,37,6],[23,12,37,12,"frame"],[23,17,37,17],[23,20,37,20,"listMetrics"],[23,31,37,31],[23,32,37,32,"getCellMetricsApprox"],[23,52,37,52],[23,53,37,53,"mid"],[23,56,37,56],[23,58,37,58,"props"],[23,63,37,63],[23,64,37,64],[24,8,38,6],[24,12,38,12,"scaledOffsetStart"],[24,29,38,29],[24,32,38,32,"frame"],[24,37,38,37],[24,38,38,38,"offset"],[24,44,38,44],[24,47,38,47,"zoomScale"],[24,56,38,56],[25,8,39,6],[25,12,39,12,"scaledOffsetEnd"],[25,27,39,27],[25,30,39,30],[25,31,39,31,"frame"],[25,36,39,36],[25,37,39,37,"offset"],[25,43,39,43],[25,46,39,46,"frame"],[25,51,39,51],[25,52,39,52,"length"],[25,58,39,58],[25,62,39,62,"zoomScale"],[25,71,39,71],[26,8,43,6],[26,12,44,9,"mid"],[26,15,44,12],[26,20,44,17],[26,21,44,18],[26,25,44,22,"currentOffset"],[26,38,44,35],[26,41,44,38,"scaledOffsetStart"],[26,58,44,55],[26,62,45,9,"mid"],[26,65,45,12],[26,70,45,17],[26,71,45,18],[26,75,45,22,"currentOffset"],[26,88,45,35],[26,92,45,39,"scaledOffsetStart"],[26,109,45,57],[26,111,46,8],[27,10,47,8,"right"],[27,15,47,13],[27,18,47,16,"mid"],[27,21,47,19],[27,24,47,22],[27,25,47,23],[28,8,48,6],[28,9,48,7],[28,15,48,13],[28,19,48,17,"currentOffset"],[28,32,48,30],[28,35,48,33,"scaledOffsetEnd"],[28,50,48,48],[28,52,48,50],[29,10,49,8,"left"],[29,14,49,12],[29,17,49,15,"mid"],[29,20,49,18],[29,23,49,21],[29,24,49,22],[30,8,50,6],[30,9,50,7],[30,15,50,13],[31,10,51,8,"result"],[31,16,51,14],[31,17,51,15,"offsetIndex"],[31,28,51,26],[31,29,51,27],[31,32,51,30,"mid"],[31,35,51,33],[32,10,52,8],[33,8,53,6],[34,6,54,4],[35,4,55,2],[36,4,57,2],[36,11,57,9,"result"],[36,17,57,15],[37,2,58,0],[38,2,66,7],[38,11,66,16,"newRangeCount"],[38,24,66,29,"newRangeCount"],[38,25,67,2,"prev"],[38,29,71,3],[38,31,72,2,"next"],[38,35,76,3],[38,37,77,10],[39,4,78,2],[39,11,79,4,"next"],[39,15,79,8],[39,16,79,9,"last"],[39,20,79,13],[39,23,80,4,"next"],[39,27,80,8],[39,28,80,9,"first"],[39,33,80,14],[39,36,81,4],[39,37,81,5],[39,40,82,4,"Math"],[39,44,82,8],[39,45,82,9,"max"],[39,48,82,12],[39,49,83,6],[39,50,83,7],[39,52,84,6],[39,53,84,7],[39,56,84,10,"Math"],[39,60,84,14],[39,61,84,15,"min"],[39,64,84,18],[39,65,84,19,"next"],[39,69,84,23],[39,70,84,24,"last"],[39,74,84,28],[39,76,84,30,"prev"],[39,80,84,34],[39,81,84,35,"last"],[39,85,84,39],[39,86,84,40],[39,89,84,43,"Math"],[39,93,84,47],[39,94,84,48,"max"],[39,97,84,51],[39,98,84,52,"next"],[39,102,84,56],[39,103,84,57,"first"],[39,108,84,62],[39,110,84,64,"prev"],[39,114,84,68],[39,115,84,69,"first"],[39,120,84,74],[39,121,85,4],[39,122,85,5],[40,2,87,0],[41,2,95,7],[41,11,95,16,"computeWindowedRenderLimits"],[41,38,95,43,"computeWindowedRenderLimits"],[41,39,96,2,"props"],[41,44,96,24],[41,46,97,2,"maxToRenderPerBatch"],[41,65,97,29],[41,67,98,2,"windowSize"],[41,77,98,20],[41,79,99,2,"prev"],[41,83,102,3],[41,85,103,2,"listMetrics"],[41,96,103,36],[41,98,104,2,"scrollMetrics"],[41,111,111,3],[41,113,115,2],[42,4,116,2],[42,8,116,8,"itemCount"],[42,17,116,17],[42,20,116,20,"props"],[42,25,116,25],[42,26,116,26,"getItemCount"],[42,38,116,38],[42,39,116,39,"props"],[42,44,116,44],[42,45,116,45,"data"],[42,49,116,49],[42,50,116,50],[43,4,117,2],[43,8,117,6,"itemCount"],[43,17,117,15],[43,22,117,20],[43,23,117,21],[43,25,117,23],[44,6,118,4],[44,13,118,11],[45,8,118,12,"first"],[45,13,118,17],[45,15,118,19],[45,16,118,20],[46,8,118,22,"last"],[46,12,118,26],[46,14,118,28],[46,15,118,29],[47,6,118,30],[47,7,118,31],[48,4,119,2],[49,4,120,2],[49,8,120,9,"offset"],[49,14,120,15],[49,17,120,59,"scrollMetrics"],[49,30,120,72],[49,31,120,9,"offset"],[49,37,120,15],[50,6,120,17,"velocity"],[50,14,120,25],[50,17,120,59,"scrollMetrics"],[50,30,120,72],[50,31,120,17,"velocity"],[50,39,120,25],[51,6,120,27,"visibleLength"],[51,19,120,40],[51,22,120,59,"scrollMetrics"],[51,35,120,72],[51,36,120,27,"visibleLength"],[51,49,120,40],[52,6,120,40,"_scrollMetrics$zoomSc"],[52,27,120,40],[52,30,120,59,"scrollMetrics"],[52,43,120,72],[52,44,120,42,"zoomScale"],[52,53,120,51],[53,6,120,42,"zoomScale"],[53,15,120,51],[53,18,120,51,"_scrollMetrics$zoomSc"],[53,39,120,51],[53,53,120,54],[53,54,120,55],[53,57,120,55,"_scrollMetrics$zoomSc"],[53,78,120,55],[54,4,125,2],[54,8,125,8,"visibleBegin"],[54,20,125,20],[54,23,125,23,"Math"],[54,27,125,27],[54,28,125,28,"max"],[54,31,125,31],[54,32,125,32],[54,33,125,33],[54,35,125,35,"offset"],[54,41,125,41],[54,42,125,42],[55,4,126,2],[55,8,126,8,"visibleEnd"],[55,18,126,18],[55,21,126,21,"visibleBegin"],[55,33,126,33],[55,36,126,36,"visibleLength"],[55,49,126,49],[56,4,127,2],[56,8,127,8,"overscanLength"],[56,22,127,22],[56,25,127,25],[56,26,127,26,"windowSize"],[56,36,127,36],[56,39,127,39],[56,40,127,40],[56,44,127,44,"visibleLength"],[56,57,127,57],[57,4,130,2],[57,8,130,8,"leadFactor"],[57,18,130,18],[57,21,130,21],[57,24,130,24],[58,4,132,2],[58,8,132,8,"fillPreference"],[58,22,132,22],[58,25,133,4,"velocity"],[58,33,133,12],[58,36,133,15],[58,37,133,16],[58,40,133,19],[58,47,133,26],[58,50,133,29,"velocity"],[58,58,133,37],[58,61,133,40],[58,62,133,41],[58,63,133,42],[58,66,133,45],[58,74,133,53],[58,77,133,56],[58,83,133,62],[59,4,135,2],[59,8,135,8,"overscanBegin"],[59,21,135,21],[59,24,135,24,"Math"],[59,28,135,28],[59,29,135,29,"max"],[59,32,135,32],[59,33,136,4],[59,34,136,5],[59,36,137,4,"visibleBegin"],[59,48,137,16],[59,51,137,19],[59,52,137,20],[59,53,137,21],[59,56,137,24,"leadFactor"],[59,66,137,34],[59,70,137,38,"overscanLength"],[59,84,138,2],[59,85,138,3],[60,4,139,2],[60,8,139,8,"overscanEnd"],[60,19,139,19],[60,22,139,22,"Math"],[60,26,139,26],[60,27,139,27,"max"],[60,30,139,30],[60,31,139,31],[60,32,139,32],[60,34,139,34,"visibleEnd"],[60,44,139,44],[60,47,139,47,"leadFactor"],[60,57,139,57],[60,60,139,60,"overscanLength"],[60,74,139,74],[60,75,139,75],[61,4,141,2],[61,8,141,8,"lastItemOffset"],[61,22,141,22],[61,25,142,4,"listMetrics"],[61,36,142,15],[61,37,142,16,"getCellMetricsApprox"],[61,57,142,36],[61,58,142,37,"itemCount"],[61,67,142,46],[61,70,142,49],[61,71,142,50],[61,73,142,52,"props"],[61,78,142,57],[61,79,142,58],[61,80,142,59,"offset"],[61,86,142,65],[61,89,142,68,"zoomScale"],[61,98,142,77],[62,4,143,2],[62,8,143,6,"lastItemOffset"],[62,22,143,20],[62,25,143,23,"overscanBegin"],[62,38,143,36],[62,40,143,38],[63,6,145,4],[63,13,145,11],[64,8,146,6,"first"],[64,13,146,11],[64,15,146,13,"Math"],[64,19,146,17],[64,20,146,18,"max"],[64,23,146,21],[64,24,146,22],[64,25,146,23],[64,27,146,25,"itemCount"],[64,36,146,34],[64,39,146,37],[64,40,146,38],[64,43,146,41,"maxToRenderPerBatch"],[64,62,146,60],[64,63,146,61],[65,8,147,6,"last"],[65,12,147,10],[65,14,147,12,"itemCount"],[65,23,147,21],[65,26,147,24],[66,6,148,4],[66,7,148,5],[67,4,149,2],[68,4,152,2],[68,8,152,2,"_elementsThatOverlapO"],[68,29,152,2],[68,32,152,51,"elementsThatOverlapOffsets"],[68,58,152,77],[68,59,153,4],[68,60,153,5,"overscanBegin"],[68,73,153,18],[68,75,153,20,"visibleBegin"],[68,87,153,32],[68,89,153,34,"visibleEnd"],[68,99,153,44],[68,101,153,46,"overscanEnd"],[68,112,153,57],[68,113,153,58],[68,115,154,4,"props"],[68,120,154,9],[68,122,155,4,"listMetrics"],[68,133,155,15],[68,135,156,4,"zoomScale"],[68,144,157,2],[68,145,157,3],[69,6,157,3,"_elementsThatOverlapO2"],[69,28,157,3],[69,35,157,3,"_slicedToArray2"],[69,50,157,3],[69,51,157,3,"default"],[69,58,157,3],[69,60,157,3,"_elementsThatOverlapO"],[69,81,157,3],[70,6,152,7,"overscanFirst"],[70,19,152,20],[70,22,152,20,"_elementsThatOverlapO2"],[70,44,152,20],[71,6,152,22,"first"],[71,11,152,27],[71,14,152,27,"_elementsThatOverlapO2"],[71,36,152,27],[72,6,152,29,"last"],[72,10,152,33],[72,13,152,33,"_elementsThatOverlapO2"],[72,35,152,33],[73,6,152,35,"overscanLast"],[73,18,152,47],[73,21,152,47,"_elementsThatOverlapO2"],[73,43,152,47],[74,4,158,2,"overscanFirst"],[74,17,158,15],[74,20,158,18,"overscanFirst"],[74,33,158,31],[74,37,158,35],[74,41,158,39],[74,44,158,42],[74,45,158,43],[74,48,158,46,"overscanFirst"],[74,61,158,59],[75,4,159,2,"first"],[75,9,159,7],[75,12,159,10,"first"],[75,17,159,15],[75,21,159,19],[75,25,159,23],[75,28,159,26,"Math"],[75,32,159,30],[75,33,159,31,"max"],[75,36,159,34],[75,37,159,35],[75,38,159,36],[75,40,159,38,"overscanFirst"],[75,53,159,51],[75,54,159,52],[75,57,159,55,"first"],[75,62,159,60],[76,4,160,2,"overscanLast"],[76,16,160,14],[76,19,160,17,"overscanLast"],[76,31,160,29],[76,35,160,33],[76,39,160,37],[76,42,160,40,"itemCount"],[76,51,160,49],[76,54,160,52],[76,55,160,53],[76,58,160,56,"overscanLast"],[76,70,160,68],[77,4,161,2,"last"],[77,8,161,6],[77,11,162,4,"last"],[77,15,162,8],[77,19,162,12],[77,23,162,16],[77,26,163,8,"Math"],[77,30,163,12],[77,31,163,13,"min"],[77,34,163,16],[77,35,163,17,"overscanLast"],[77,47,163,29],[77,49,163,31,"first"],[77,54,163,36],[77,57,163,39,"maxToRenderPerBatch"],[77,76,163,58],[77,79,163,61],[77,80,163,62],[77,81,163,63],[77,84,164,8,"last"],[77,88,164,12],[78,4,165,2],[78,8,165,8,"visible"],[78,15,165,15],[78,18,165,18],[79,6,165,19,"first"],[79,11,165,24],[79,13,165,19,"first"],[79,18,165,24],[80,6,165,26,"last"],[80,10,165,30],[80,12,165,26,"last"],[81,4,165,30],[81,5,165,31],[82,4,171,2],[82,8,171,6,"newCellCount"],[82,20,171,18],[82,23,171,21,"newRangeCount"],[82,36,171,34],[82,37,171,35,"prev"],[82,41,171,39],[82,43,171,41,"visible"],[82,50,171,48],[82,51,171,49],[83,4,173,2],[83,11,173,9],[83,15,173,13],[83,17,173,15],[84,6,174,4],[84,10,174,8,"first"],[84,15,174,13],[84,19,174,17,"overscanFirst"],[84,32,174,30],[84,36,174,34,"last"],[84,40,174,38],[84,44,174,42,"overscanLast"],[84,56,174,54],[84,58,174,56],[85,8,176,6],[86,6,177,4],[87,6,178,4],[87,10,178,10,"maxNewCells"],[87,21,178,21],[87,24,178,24,"newCellCount"],[87,36,178,36],[87,40,178,40,"maxToRenderPerBatch"],[87,59,178,59],[88,6,179,4],[88,10,179,10,"firstWillAddMore"],[88,26,179,26],[88,29,179,29,"first"],[88,34,179,34],[88,38,179,38,"prev"],[88,42,179,42],[88,43,179,43,"first"],[88,48,179,48],[88,52,179,52,"first"],[88,57,179,57],[88,60,179,60,"prev"],[88,64,179,64],[88,65,179,65,"last"],[88,69,179,69],[89,6,180,4],[89,10,180,10,"firstShouldIncrement"],[89,30,180,30],[89,33,181,6,"first"],[89,38,181,11],[89,41,181,14,"overscanFirst"],[89,54,181,27],[89,59,181,32],[89,60,181,33,"maxNewCells"],[89,71,181,44],[89,75,181,48],[89,76,181,49,"firstWillAddMore"],[89,92,181,65],[89,93,181,66],[90,6,182,4],[90,10,182,10,"lastWillAddMore"],[90,25,182,25],[90,28,182,28,"last"],[90,32,182,32],[90,36,182,36,"prev"],[90,40,182,40],[90,41,182,41,"last"],[90,45,182,45],[90,49,182,49,"last"],[90,53,182,53],[90,56,182,56,"prev"],[90,60,182,60],[90,61,182,61,"first"],[90,66,182,66],[91,6,183,4],[91,10,183,10,"lastShouldIncrement"],[91,29,183,29],[91,32,184,6,"last"],[91,36,184,10],[91,39,184,13,"overscanLast"],[91,51,184,25],[91,56,184,30],[91,57,184,31,"maxNewCells"],[91,68,184,42],[91,72,184,46],[91,73,184,47,"lastWillAddMore"],[91,88,184,62],[91,89,184,63],[92,6,185,4],[92,10,185,8,"maxNewCells"],[92,21,185,19],[92,25,185,23],[92,26,185,24,"firstShouldIncrement"],[92,46,185,44],[92,50,185,48],[92,51,185,49,"lastShouldIncrement"],[92,70,185,68],[92,72,185,70],[93,8,190,6],[94,6,191,4],[95,6,192,4],[95,10,193,6,"firstShouldIncrement"],[95,30,193,26],[95,34,194,6],[95,36,194,8,"fillPreference"],[95,50,194,22],[95,55,194,27],[95,62,194,34],[95,66,194,38,"lastShouldIncrement"],[95,85,194,57],[95,89,194,61,"lastWillAddMore"],[95,104,194,76],[95,105,194,77],[95,107,195,6],[96,8,196,6],[96,12,196,10,"firstWillAddMore"],[96,28,196,26],[96,30,196,28],[97,10,197,8,"newCellCount"],[97,22,197,20],[97,24,197,22],[98,8,198,6],[99,8,199,6,"first"],[99,13,199,11],[99,15,199,13],[100,6,200,4],[101,6,201,4],[101,10,202,6,"lastShouldIncrement"],[101,29,202,25],[101,33,203,6],[101,35,203,8,"fillPreference"],[101,49,203,22],[101,54,203,27],[101,62,203,35],[101,66,203,39,"firstShouldIncrement"],[101,86,203,59],[101,90,203,63,"firstWillAddMore"],[101,106,203,79],[101,107,203,80],[101,109,204,6],[102,8,205,6],[102,12,205,10,"lastWillAddMore"],[102,27,205,25],[102,29,205,27],[103,10,206,8,"newCellCount"],[103,22,206,20],[103,24,206,22],[104,8,207,6],[105,8,208,6,"last"],[105,12,208,10],[105,14,208,12],[106,6,209,4],[107,4,210,2],[108,4,211,2],[108,8,212,4],[108,10,213,6,"last"],[108,14,213,10],[108,18,213,14,"first"],[108,23,213,19],[108,27,214,6,"first"],[108,32,214,11],[108,36,214,15],[108,37,214,16],[108,41,215,6,"last"],[108,45,215,10],[108,48,215,13,"itemCount"],[108,57,215,22],[108,61,216,6,"first"],[108,66,216,11],[108,70,216,15,"overscanFirst"],[108,83,216,28],[108,87,217,6,"last"],[108,91,217,10],[108,95,217,14,"overscanLast"],[108,107,217,26],[108,111,218,6,"first"],[108,116,218,11],[108,120,218,15,"visible"],[108,127,218,22],[108,128,218,23,"first"],[108,133,218,28],[108,137,219,6,"last"],[108,141,219,10],[108,145,219,14,"visible"],[108,152,219,21],[108,153,219,22,"last"],[108,157,219,26],[108,158,220,5],[108,160,221,4],[109,6,222,4],[109,12,222,10],[109,16,222,14,"Error"],[109,21,222,19],[109,22,223,6],[109,47,223,31],[109,50,224,8,"JSON"],[109,54,224,12],[109,55,224,13,"stringify"],[109,64,224,22],[109,65,224,23],[110,8,225,10,"first"],[110,13,225,15],[110,15,225,10,"first"],[110,20,225,15],[111,8,226,10,"last"],[111,12,226,14],[111,14,226,10,"last"],[111,18,226,14],[112,8,227,10,"itemCount"],[112,17,227,19],[112,19,227,10,"itemCount"],[112,28,227,19],[113,8,228,10,"overscanFirst"],[113,21,228,23],[113,23,228,10,"overscanFirst"],[113,36,228,23],[114,8,229,10,"overscanLast"],[114,20,229,22],[114,22,229,10,"overscanLast"],[114,34,229,22],[115,8,230,10,"visible"],[115,15,230,17],[115,17,230,10,"visible"],[116,6,231,8],[116,7,231,9],[116,8,232,4],[116,9,232,5],[117,4,233,2],[118,4,234,2],[118,11,234,9],[119,6,234,10,"first"],[119,11,234,15],[119,13,234,10,"first"],[119,18,234,15],[120,6,234,17,"last"],[120,10,234,21],[120,12,234,17,"last"],[121,4,234,21],[121,5,234,22],[122,2,235,0],[123,2,237,7],[123,11,237,16,"keyExtractor"],[123,23,237,28,"keyExtractor"],[123,24,237,29,"item"],[123,28,237,38],[123,30,237,40,"index"],[123,35,237,53],[123,37,237,63],[124,4,238,2],[124,8,238,6],[124,15,238,13,"item"],[124,19,238,17],[124,24,238,22],[124,32,238,30],[124,36,238,34],[124,37,238,34,"item"],[124,41,238,38],[124,61,238,34,"item"],[124,65,238,38],[124,66,238,40,"key"],[124,69,238,43],[124,74,238,47],[124,78,238,51],[124,80,238,53],[125,6,239,4],[125,13,239,11,"item"],[125,17,239,15],[125,18,239,16,"key"],[125,21,239,19],[126,4,240,2],[127,4,241,2],[127,8,241,6],[127,15,241,13,"item"],[127,19,241,17],[127,24,241,22],[127,32,241,30],[127,36,241,34],[127,37,241,34,"item"],[127,41,241,38],[127,61,241,34,"item"],[127,65,241,38],[127,66,241,40,"id"],[127,68,241,42],[127,73,241,46],[127,77,241,50],[127,79,241,52],[128,6,242,4],[128,13,242,11,"item"],[128,17,242,15],[128,18,242,16,"id"],[128,20,242,18],[129,4,243,2],[130,4,244,2],[130,11,244,9,"String"],[130,17,244,15],[130,18,244,16,"index"],[130,23,244,21],[130,24,244,22],[131,2,245,0],[132,0,245,1],[132,3]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits","keyExtractor"],"mappings":"AAA;OCqB;CDoC;OEQ;CFqB;OGQ;CH4I;OIE"}},"type":"js/module"}]}