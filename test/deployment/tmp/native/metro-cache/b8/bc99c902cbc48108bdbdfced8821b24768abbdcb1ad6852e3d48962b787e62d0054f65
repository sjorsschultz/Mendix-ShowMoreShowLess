{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":177,"column":1,"index":6556}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":177,"column":1,"index":6556}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":177,"column":1,"index":6556}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"../fs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":86},"end":{"line":2,"column":23,"index":109}}],"key":"BbMzEMAXukivaG6ZRsPtKVakQ80="}},{"name":"../polyfill/Blob","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":111},"end":{"line":3,"column":36,"index":147}}],"key":"6WubS/UW6Vk7Hb9jka5mS/Nzmy0="}},{"name":"./ReactNativeBlobUtilSession","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":149},"end":{"line":4,"column":70,"index":219}}],"key":"MeXL7/5M28BXGXYkFOH++ZMii4I="}},{"name":"../utils/uri","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":221},"end":{"line":5,"column":35,"index":256}}],"key":"EYM5VVM8ihCqYCNx4WwY6t5ZN6o="}},{"name":"base-64","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":258},"end":{"line":6,"column":29,"index":287}}],"key":"cWHFpgxumxBYHgPejni+WGDRb/s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FetchBlobResponse = void 0;\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _fs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../fs\"));\n  var _Blob = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../polyfill/Blob\"));\n  var _ReactNativeBlobUtilSession = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ReactNativeBlobUtilSession\"));\n  var _uri = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../utils/uri\"));\n  var _base = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"base-64\"));\n  /**\r\n   * ReactNativeBlobUtil response object class.\r\n   */\n  var FetchBlobResponse = exports.FetchBlobResponse = /*#__PURE__*/(0, _createClass2.default)(function FetchBlobResponse(taskId, info, data) {\n    var _this = this;\n    (0, _classCallCheck2.default)(this, FetchBlobResponse);\n    this.data = data;\n    this.taskId = taskId;\n    this.type = info.rnfbEncode;\n    this.respInfo = info;\n    this.info = function () {\n      return _this.respInfo;\n    };\n    this.array = function () {\n      var cType = info.headers['Content-Type'] || info.headers['content-type'];\n      return new Promise(function (resolve, reject) {\n        switch (_this.type) {\n          case 'base64':\n            // TODO : base64 to array buffer\n            break;\n          case 'path':\n            _fs.default.readFile(_this.data, 'ascii').then(resolve);\n            break;\n          default:\n            // TODO : text to array buffer\n            break;\n        }\n      });\n    };\n\n    /**\r\n     * Convert result to javascript ReactNativeBlobUtil object.\r\n     * @return {Promise<Blob>} Return a promise resolves Blob object.\r\n     */\n    this.blob = function () {\n      var cType = info.headers['Content-Type'] || info.headers['content-type'];\n      return new Promise(function (resolve, reject) {\n        switch (_this.type) {\n          case 'base64':\n            _Blob.default.build(_this.data, {\n              type: cType + ';BASE64'\n            }).then(resolve);\n            break;\n          case 'path':\n            _Blob.default.build(_uri.default.wrap(_this.data), {\n              type: cType\n            }).then(resolve);\n            break;\n          default:\n            _Blob.default.build(_this.data, {\n              type: 'text/plain'\n            }).then(resolve);\n            break;\n        }\n      });\n    };\n    /**\r\n     * Convert result to text.\r\n     * @return {string} Decoded base64 string.\r\n     */\n    this.text = function () {\n      switch (_this.type) {\n        case 'base64':\n          return _base.default.decode(_this.data);\n        case 'path':\n          return _fs.default.readFile(_this.data, 'base64').then(function (b64) {\n            return Promise.resolve(_base.default.decode(b64));\n          });\n        default:\n          return _this.data;\n      }\n    };\n    /**\r\n     * Convert result to JSON object.\r\n     * @return {object} Parsed javascript object.\r\n     */\n    this.json = function () {\n      switch (_this.type) {\n        case 'base64':\n          return JSON.parse(_base.default.decode(_this.data));\n        case 'path':\n          return _fs.default.readFile(_this.data, 'utf8').then(function (text) {\n            return Promise.resolve(JSON.parse(text));\n          });\n        default:\n          return JSON.parse(_this.data);\n      }\n    };\n    /**\r\n     * Return BASE64 string directly.\r\n     * @return {string} BASE64 string of response body.\r\n     */\n    this.base64 = function () {\n      switch (_this.type) {\n        case 'base64':\n          return _this.data;\n        case 'path':\n          return _fs.default.readFile(_this.data, 'base64');\n        default:\n          return _base.default.encode(_this.data);\n      }\n    };\n    /**\r\n     * Remove cahced file\r\n     * @return {Promise}\r\n     */\n    this.flush = function () {\n      var path = _this.path();\n      if (!path || _this.type !== 'path') return;\n      return _fs.default.unlink(path);\n    };\n    /**\r\n     * get path of response temp file\r\n     * @return {string} File path of temp file.\r\n     */\n    this.path = function () {\n      if (_this.type === 'path') return _this.data;\n      return null;\n    };\n    this.session = function (name) {\n      if (_this.type === 'path') return _fs.default.session(name).add(_this.data);else {\n        console.warn('only file paths can be add into session.');\n        return null;\n      }\n    };\n    /**\r\n     * Start read stream from cached file\r\n     * @param  {String} encoding Encode type, should be one of `base64`, `ascii`, `utf8`.\r\n     * @return {void}\r\n     */\n    this.readStream = function (encoding) {\n      if (_this.type === 'path') {\n        return _fs.default.readStream(_this.data, encoding);\n      } else {\n        console.warn('ReactNativeBlobUtil', 'this response data does not contains any available stream');\n        return null;\n      }\n    };\n    /**\r\n     * Read file content with given encoding, if the response does not contains\r\n     * a file path, show warning message\r\n     * @param  {String} encoding Encode type, should be one of `base64`, `ascrii`, `utf8`.\r\n     * @return {String}\r\n     */\n    this.readFile = function (encoding) {\n      if (_this.type === 'path') {\n        return _fs.default.readFile(_this.data, encoding);\n      } else {\n        console.warn('ReactNativeBlobUtil', 'this response does not contains a readable file');\n        return null;\n      }\n    };\n  });\n});","lineCount":167,"map":[[9,2,2,0],[9,6,2,0,"_fs"],[9,9,2,0],[9,12,2,0,"_interopRequireDefault"],[9,34,2,0],[9,35,2,0,"_$$_REQUIRE"],[9,46,2,0],[9,47,2,0,"_dependencyMap"],[9,61,2,0],[10,2,3,0],[10,6,3,0,"_Blob"],[10,11,3,0],[10,14,3,0,"_interopRequireDefault"],[10,36,3,0],[10,37,3,0,"_$$_REQUIRE"],[10,48,3,0],[10,49,3,0,"_dependencyMap"],[10,63,3,0],[11,2,4,0],[11,6,4,0,"_ReactNativeBlobUtilSession"],[11,33,4,0],[11,36,4,0,"_interopRequireDefault"],[11,58,4,0],[11,59,4,0,"_$$_REQUIRE"],[11,70,4,0],[11,71,4,0,"_dependencyMap"],[11,85,4,0],[12,2,5,0],[12,6,5,0,"_uri"],[12,10,5,0],[12,13,5,0,"_interopRequireDefault"],[12,35,5,0],[12,36,5,0,"_$$_REQUIRE"],[12,47,5,0],[12,48,5,0,"_dependencyMap"],[12,62,5,0],[13,2,6,0],[13,6,6,0,"_base"],[13,11,6,0],[13,14,6,0,"_interopRequireDefault"],[13,36,6,0],[13,37,6,0,"_$$_REQUIRE"],[13,48,6,0],[13,49,6,0,"_dependencyMap"],[13,63,6,0],[14,2,7,0],[15,0,8,0],[16,0,9,0],[17,2,7,0],[17,6,10,13,"FetchBlobResponse"],[17,23,10,30],[17,26,10,30,"exports"],[17,33,10,30],[17,34,10,30,"FetchBlobResponse"],[17,51,10,30],[17,71,10,30,"_createClass2"],[17,84,10,30],[17,85,10,30,"default"],[17,92,10,30],[17,94,28,4],[17,103,28,4,"FetchBlobResponse"],[17,121,28,16,"taskId"],[17,127,28,30],[17,129,28,32,"info"],[17,133,28,69],[17,135,28,71,"data"],[17,139,28,80],[17,141,28,82],[18,4,28,82],[18,8,28,82,"_this"],[18,13,28,82],[19,4,28,82],[19,8,28,82,"_classCallCheck2"],[19,24,28,82],[19,25,28,82,"default"],[19,32,28,82],[19,40,28,82,"FetchBlobResponse"],[19,57,28,82],[20,4,29,8],[20,8,29,12],[20,9,29,13,"data"],[20,13,29,17],[20,16,29,20,"data"],[20,20,29,24],[21,4,30,8],[21,8,30,12],[21,9,30,13,"taskId"],[21,15,30,19],[21,18,30,22,"taskId"],[21,24,30,28],[22,4,31,8],[22,8,31,12],[22,9,31,13,"type"],[22,13,31,17],[22,16,31,20,"info"],[22,20,31,24],[22,21,31,25,"rnfbEncode"],[22,31,31,35],[23,4,32,8],[23,8,32,12],[23,9,32,13,"respInfo"],[23,17,32,21],[23,20,32,24,"info"],[23,24,32,28],[24,4,34,8],[24,8,34,12],[24,9,34,13,"info"],[24,13,34,17],[24,16,34,20],[24,28,34,59],[25,6,35,12],[25,13,35,19,"_this"],[25,18,35,23],[25,19,35,24,"respInfo"],[25,27,35,32],[26,4,36,8],[26,5,36,9],[27,4,38,8],[27,8,38,12],[27,9,38,13,"array"],[27,14,38,18],[27,17,38,21],[27,29,38,43],[28,6,39,12],[28,10,39,16,"cType"],[28,15,39,21],[28,18,39,24,"info"],[28,22,39,28],[28,23,39,29,"headers"],[28,30,39,36],[28,31,39,37],[28,45,39,51],[28,46,39,52],[28,50,39,56,"info"],[28,54,39,60],[28,55,39,61,"headers"],[28,62,39,68],[28,63,39,69],[28,77,39,83],[28,78,39,84],[29,6,40,12],[29,13,40,19],[29,17,40,23,"Promise"],[29,24,40,30],[29,25,40,31],[29,35,40,32,"resolve"],[29,42,40,39],[29,44,40,41,"reject"],[29,50,40,47],[29,52,40,52],[30,8,41,16],[30,16,41,24,"_this"],[30,21,41,28],[30,22,41,29,"type"],[30,26,41,33],[31,10,42,20],[31,15,42,25],[31,23,42,33],[32,12,43,24],[33,12,44,24],[34,10,45,20],[34,15,45,25],[34,21,45,31],[35,12,46,24,"fs"],[35,23,46,26],[35,24,46,27,"readFile"],[35,32,46,35],[35,33,46,36,"_this"],[35,38,46,40],[35,39,46,41,"data"],[35,43,46,45],[35,45,46,47],[35,52,46,54],[35,53,46,55],[35,54,46,56,"then"],[35,58,46,60],[35,59,46,61,"resolve"],[35,66,46,68],[35,67,46,69],[36,12,47,24],[37,10,48,20],[38,12,49,24],[39,12,50,24],[40,8,51,16],[41,6,52,12],[41,7,52,13],[41,8,52,14],[42,4,53,8],[42,5,53,9],[44,4,55,8],[45,0,56,0],[46,0,57,0],[47,0,58,0],[48,4,59,8],[48,8,59,12],[48,9,59,13,"blob"],[48,13,59,17],[48,16,59,20],[48,28,59,41],[49,6,60,12],[49,10,60,16,"cType"],[49,15,60,21],[49,18,60,24,"info"],[49,22,60,28],[49,23,60,29,"headers"],[49,30,60,36],[49,31,60,37],[49,45,60,51],[49,46,60,52],[49,50,60,56,"info"],[49,54,60,60],[49,55,60,61,"headers"],[49,62,60,68],[49,63,60,69],[49,77,60,83],[49,78,60,84],[50,6,61,12],[50,13,61,19],[50,17,61,23,"Promise"],[50,24,61,30],[50,25,61,31],[50,35,61,32,"resolve"],[50,42,61,39],[50,44,61,41,"reject"],[50,50,61,47],[50,52,61,52],[51,8,62,16],[51,16,62,24,"_this"],[51,21,62,28],[51,22,62,29,"type"],[51,26,62,33],[52,10,63,20],[52,15,63,25],[52,23,63,33],[53,12,64,24,"Blob"],[53,25,64,28],[53,26,64,29,"build"],[53,31,64,34],[53,32,64,35,"_this"],[53,37,64,39],[53,38,64,40,"data"],[53,42,64,44],[53,44,64,46],[54,14,64,47,"type"],[54,18,64,51],[54,20,64,53,"cType"],[54,25,64,58],[54,28,64,61],[55,12,64,70],[55,13,64,71],[55,14,64,72],[55,15,64,73,"then"],[55,19,64,77],[55,20,64,78,"resolve"],[55,27,64,85],[55,28,64,86],[56,12,65,24],[57,10,66,20],[57,15,66,25],[57,21,66,31],[58,12,67,24,"Blob"],[58,25,67,28],[58,26,67,29,"build"],[58,31,67,34],[58,32,67,35,"URIUtil"],[58,44,67,42],[58,45,67,43,"wrap"],[58,49,67,47],[58,50,67,48,"_this"],[58,55,67,52],[58,56,67,53,"data"],[58,60,67,57],[58,61,67,58],[58,63,67,60],[59,14,67,61,"type"],[59,18,67,65],[59,20,67,67,"cType"],[60,12,67,72],[60,13,67,73],[60,14,67,74],[60,15,67,75,"then"],[60,19,67,79],[60,20,67,80,"resolve"],[60,27,67,87],[60,28,67,88],[61,12,68,24],[62,10,69,20],[63,12,70,24,"Blob"],[63,25,70,28],[63,26,70,29,"build"],[63,31,70,34],[63,32,70,35,"_this"],[63,37,70,39],[63,38,70,40,"data"],[63,42,70,44],[63,44,70,46],[64,14,70,47,"type"],[64,18,70,51],[64,20,70,53],[65,12,70,65],[65,13,70,66],[65,14,70,67],[65,15,70,68,"then"],[65,19,70,72],[65,20,70,73,"resolve"],[65,27,70,80],[65,28,70,81],[66,12,71,24],[67,8,72,16],[68,6,73,12],[68,7,73,13],[68,8,73,14],[69,4,74,8],[69,5,74,9],[70,4,75,8],[71,0,76,0],[72,0,77,0],[73,0,78,0],[74,4,79,8],[74,8,79,12],[74,9,79,13,"text"],[74,13,79,17],[74,16,79,20],[74,28,79,49],[75,6,80,12],[75,14,80,20,"_this"],[75,19,80,24],[75,20,80,25,"type"],[75,24,80,29],[76,8,81,16],[76,13,81,21],[76,21,81,29],[77,10,82,20],[77,17,82,27,"base64"],[77,30,82,33],[77,31,82,34,"decode"],[77,37,82,40],[77,38,82,41,"_this"],[77,43,82,45],[77,44,82,46,"data"],[77,48,82,50],[77,49,82,51],[78,8,83,16],[78,13,83,21],[78,19,83,27],[79,10,84,20],[79,17,84,27,"fs"],[79,28,84,29],[79,29,84,30,"readFile"],[79,37,84,38],[79,38,84,39,"_this"],[79,43,84,43],[79,44,84,44,"data"],[79,48,84,48],[79,50,84,50],[79,58,84,58],[79,59,84,59],[79,60,84,60,"then"],[79,64,84,64],[79,65,84,65],[79,75,84,66,"b64"],[79,78,84,69],[80,12,84,69],[80,19,84,74,"Promise"],[80,26,84,81],[80,27,84,82,"resolve"],[80,34,84,89],[80,35,84,90,"base64"],[80,48,84,96],[80,49,84,97,"decode"],[80,55,84,103],[80,56,84,104,"b64"],[80,59,84,107],[80,60,84,108],[80,61,84,109],[81,10,84,109],[81,12,84,110],[82,8,85,16],[83,10,86,20],[83,17,86,27,"_this"],[83,22,86,31],[83,23,86,32,"data"],[83,27,86,36],[84,6,87,12],[85,4,88,8],[85,5,88,9],[86,4,89,8],[87,0,90,0],[88,0,91,0],[89,0,92,0],[90,4,93,8],[90,8,93,12],[90,9,93,13,"json"],[90,13,93,17],[90,16,93,20],[90,28,93,31],[91,6,94,12],[91,14,94,20,"_this"],[91,19,94,24],[91,20,94,25,"type"],[91,24,94,29],[92,8,95,16],[92,13,95,21],[92,21,95,29],[93,10,96,20],[93,17,96,27,"JSON"],[93,21,96,31],[93,22,96,32,"parse"],[93,27,96,37],[93,28,96,38,"base64"],[93,41,96,44],[93,42,96,45,"decode"],[93,48,96,51],[93,49,96,52,"_this"],[93,54,96,56],[93,55,96,57,"data"],[93,59,96,61],[93,60,96,62],[93,61,96,63],[94,8,97,16],[94,13,97,21],[94,19,97,27],[95,10,98,20],[95,17,98,27,"fs"],[95,28,98,29],[95,29,98,30,"readFile"],[95,37,98,38],[95,38,98,39,"_this"],[95,43,98,43],[95,44,98,44,"data"],[95,48,98,48],[95,50,98,50],[95,56,98,56],[95,57,98,57],[95,58,99,25,"then"],[95,62,99,29],[95,63,99,30],[95,73,99,31,"text"],[95,77,99,35],[96,12,99,35],[96,19,99,40,"Promise"],[96,26,99,47],[96,27,99,48,"resolve"],[96,34,99,55],[96,35,99,56,"JSON"],[96,39,99,60],[96,40,99,61,"parse"],[96,45,99,66],[96,46,99,67,"text"],[96,50,99,71],[96,51,99,72],[96,52,99,73],[97,10,99,73],[97,12,99,74],[98,8,100,16],[99,10,101,20],[99,17,101,27,"JSON"],[99,21,101,31],[99,22,101,32,"parse"],[99,27,101,37],[99,28,101,38,"_this"],[99,33,101,42],[99,34,101,43,"data"],[99,38,101,47],[99,39,101,48],[100,6,102,12],[101,4,103,8],[101,5,103,9],[102,4,104,8],[103,0,105,0],[104,0,106,0],[105,0,107,0],[106,4,108,8],[106,8,108,12],[106,9,108,13,"base64"],[106,15,108,19],[106,18,108,22],[106,30,108,51],[107,6,109,12],[107,14,109,20,"_this"],[107,19,109,24],[107,20,109,25,"type"],[107,24,109,29],[108,8,110,16],[108,13,110,21],[108,21,110,29],[109,10,111,20],[109,17,111,27,"_this"],[109,22,111,31],[109,23,111,32,"data"],[109,27,111,36],[110,8,112,16],[110,13,112,21],[110,19,112,27],[111,10,113,20],[111,17,113,27,"fs"],[111,28,113,29],[111,29,113,30,"readFile"],[111,37,113,38],[111,38,113,39,"_this"],[111,43,113,43],[111,44,113,44,"data"],[111,48,113,48],[111,50,113,50],[111,58,113,58],[111,59,113,59],[112,8,114,16],[113,10,115,20],[113,17,115,27,"base64"],[113,30,115,33],[113,31,115,34,"encode"],[113,37,115,40],[113,38,115,41,"_this"],[113,43,115,45],[113,44,115,46,"data"],[113,48,115,50],[113,49,115,51],[114,6,116,12],[115,4,117,8],[115,5,117,9],[116,4,118,8],[117,0,119,0],[118,0,120,0],[119,0,121,0],[120,4,122,8],[120,8,122,12],[120,9,122,13,"flush"],[120,14,122,18],[120,17,122,21],[120,29,122,27],[121,6,123,12],[121,10,123,16,"path"],[121,14,123,20],[121,17,123,23,"_this"],[121,22,123,27],[121,23,123,28,"path"],[121,27,123,32],[121,28,123,33],[121,29,123,34],[122,6,124,12],[122,10,124,16],[122,11,124,17,"path"],[122,15,124,21],[122,19,124,25,"_this"],[122,24,124,29],[122,25,124,30,"type"],[122,29,124,34],[122,34,124,39],[122,40,124,45],[122,42,125,16],[123,6,126,12],[123,13,126,19,"fs"],[123,24,126,21],[123,25,126,22,"unlink"],[123,31,126,28],[123,32,126,29,"path"],[123,36,126,33],[123,37,126,34],[124,4,127,8],[124,5,127,9],[125,4,128,8],[126,0,129,0],[127,0,130,0],[128,0,131,0],[129,4,132,8],[129,8,132,12],[129,9,132,13,"path"],[129,13,132,17],[129,16,132,20],[129,28,132,26],[130,6,133,12],[130,10,133,16,"_this"],[130,15,133,20],[130,16,133,21,"type"],[130,20,133,25],[130,25,133,30],[130,31,133,36],[130,33,134,16],[130,40,134,23,"_this"],[130,45,134,27],[130,46,134,28,"data"],[130,50,134,32],[131,6,135,12],[131,13,135,19],[131,17,135,23],[132,4,136,8],[132,5,136,9],[133,4,138,8],[133,8,138,12],[133,9,138,13,"session"],[133,16,138,20],[133,19,138,23],[133,29,138,24,"name"],[133,33,138,36],[133,35,138,76],[134,6,139,12],[134,10,139,16,"_this"],[134,15,139,20],[134,16,139,21,"type"],[134,20,139,25],[134,25,139,30],[134,31,139,36],[134,33,140,16],[134,40,140,23,"fs"],[134,51,140,25],[134,52,140,26,"session"],[134,59,140,33],[134,60,140,34,"name"],[134,64,140,38],[134,65,140,39],[134,66,140,40,"add"],[134,69,140,43],[134,70,140,44,"_this"],[134,75,140,48],[134,76,140,49,"data"],[134,80,140,53],[134,81,140,54],[134,82,140,55],[134,87,141,17],[135,8,142,16,"console"],[135,15,142,23],[135,16,142,24,"warn"],[135,20,142,28],[135,21,142,29],[135,63,142,71],[135,64,142,72],[136,8,143,16],[136,15,143,23],[136,19,143,27],[137,6,144,12],[138,4,145,8],[138,5,145,9],[139,4,146,8],[140,0,147,0],[141,0,148,0],[142,0,149,0],[143,0,150,0],[144,4,151,8],[144,8,151,12],[144,9,151,13,"readStream"],[144,19,151,23],[144,22,151,26],[144,32,151,27,"encoding"],[144,40,151,64],[144,42,151,103],[145,6,152,12],[145,10,152,16,"_this"],[145,15,152,20],[145,16,152,21,"type"],[145,20,152,25],[145,25,152,30],[145,31,152,36],[145,33,152,38],[146,8,153,16],[146,15,153,23,"fs"],[146,26,153,25],[146,27,153,26,"readStream"],[146,37,153,36],[146,38,153,37,"_this"],[146,43,153,41],[146,44,153,42,"data"],[146,48,153,46],[146,50,153,48,"encoding"],[146,58,153,56],[146,59,153,57],[147,6,154,12],[147,7,154,13],[147,13,155,17],[148,8,156,16,"console"],[148,15,156,23],[148,16,156,24,"warn"],[148,20,156,28],[148,21,156,29],[148,42,156,50],[148,44,156,52],[148,103,156,111],[148,104,156,112],[149,8,157,16],[149,15,157,23],[149,19,157,27],[150,6,158,12],[151,4,159,8],[151,5,159,9],[152,4,160,8],[153,0,161,0],[154,0,162,0],[155,0,163,0],[156,0,164,0],[157,0,165,0],[158,4,166,8],[158,8,166,12],[158,9,166,13,"readFile"],[158,17,166,21],[158,20,166,24],[158,30,166,25,"encoding"],[158,38,166,62],[158,40,166,67],[159,6,167,12],[159,10,167,16,"_this"],[159,15,167,20],[159,16,167,21,"type"],[159,20,167,25],[159,25,167,30],[159,31,167,36],[159,33,167,38],[160,8,168,16],[160,15,168,23,"fs"],[160,26,168,25],[160,27,168,26,"readFile"],[160,35,168,34],[160,36,168,35,"_this"],[160,41,168,39],[160,42,168,40,"data"],[160,46,168,44],[160,48,168,46,"encoding"],[160,56,168,54],[160,57,168,55],[161,6,169,12],[161,7,169,13],[161,13,170,17],[162,8,171,16,"console"],[162,15,171,23],[162,16,171,24,"warn"],[162,20,171,28],[162,21,171,29],[162,42,171,50],[162,44,171,52],[162,93,171,101],[162,94,171,102],[163,8,172,16],[163,15,172,23],[163,19,172,27],[164,6,173,12],[165,4,174,8],[165,5,174,9],[166,2,175,4],[166,3,175,5],[167,0,175,5],[167,3]],"functionMap":{"names":["<global>","FetchBlobResponse","FetchBlobResponse#constructor","info","array","Promise$argument_0","blob","text","fs.readFile.then$argument_0","json","base64","flush","path","session","readStream","readFile"],"mappings":"AAA;OCS;ICkB;oBCM;SDE;qBEE;+BCE;aDY;SFC;oBIM;+BDE;aCY;SJC;oBKK;iECK,4CD;SLI;oBOK;8BDM,2CC;SPI;sBQK;SRS;qBSK;STK;oBUK;SVI;uBWE;SXO;0BYM;SZQ;wBaO;SbQ;KDC"}},"type":"js/module"}]}