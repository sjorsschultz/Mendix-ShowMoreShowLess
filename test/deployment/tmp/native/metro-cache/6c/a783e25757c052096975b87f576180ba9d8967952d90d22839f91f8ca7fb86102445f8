{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"7RhWyTq5i/X0UNOgMT1VkjxHPX0="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/get\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  var _worklet_425682043203_init_data = {\n    code: \"function changeEventCalculator_panGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n    location: \"C:\\\\Program Files\\\\Mendix\\\\10.24.3.76411\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\gestures\\\\panGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_panGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"C:/Program Files/Mendix/10.24.3.76411/modeler/tools/node/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts\\\"],\\\"mappings\\\":\\\"AAUA,SAAAA,mCAEEA,CAAAC,OACA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAA2C,CAC/C,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.1\"\n  };\n  var changeEventCalculator = function () {\n    var _e = [new global.Error(), 1, -27];\n    var changeEventCalculator = function changeEventCalculator(current, previous) {\n      var changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          changeX: current.translationX,\n          changeY: current.translationY\n        };\n      } else {\n        changePayload = {\n          changeX: current.translationX - previous.translationX,\n          changeY: current.translationY - previous.translationY\n        };\n      }\n      return Object.assign({}, current, changePayload);\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 425682043203;\n    changeEventCalculator.__initData = _worklet_425682043203_init_data;\n    changeEventCalculator.__stackDetails = _e;\n    return changeEventCalculator;\n  }();\n  var PanGesture = exports.PanGesture = /*#__PURE__*/function (_ContinousBaseGesture) {\n    function PanGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, PanGesture);\n      _this = _callSuper(this, PanGesture);\n      _this.config = {};\n      _this.handlerName = 'PanGestureHandler';\n      return _this;\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    (0, _inherits2.default)(PanGesture, _ContinousBaseGesture);\n    return (0, _createClass2.default)(PanGesture, [{\n      key: \"activeOffsetY\",\n      value: function activeOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetYStart = offset[0];\n          this.config.activeOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetYStart = offset;\n        } else {\n          this.config.activeOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * Range along X axis (in points) where fingers travels without activation of gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n       */\n    }, {\n      key: \"activeOffsetX\",\n      value: function activeOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetXStart = offset[0];\n          this.config.activeOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetXStart = offset;\n        } else {\n          this.config.activeOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n       */\n    }, {\n      key: \"failOffsetY\",\n      value: function failOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetYStart = offset[0];\n          this.config.failOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetYStart = offset;\n        } else {\n          this.config.failOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n       */\n    }, {\n      key: \"failOffsetX\",\n      value: function failOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetXStart = offset[0];\n          this.config.failOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetXStart = offset;\n        } else {\n          this.config.failOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n       * @param minPointers\n       */\n    }, {\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n       * Should be a higher or equal to 0 integer.\n       * @param maxPointers\n       */\n    }, {\n      key: \"maxPointers\",\n      value: function maxPointers(_maxPointers) {\n        this.config.maxPointers = _maxPointers;\n        return this;\n      }\n\n      /**\n       * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n       * Expressed in points.\n       * @param distance\n       */\n    }, {\n      key: \"minDistance\",\n      value: function minDistance(distance) {\n        this.config.minDist = distance;\n        return this;\n      }\n\n      /**\n       * Minimum velocity the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocity\",\n      value: function minVelocity(velocity) {\n        this.config.minVelocity = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along X axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityX\",\n      value: function minVelocityX(velocity) {\n        this.config.minVelocityX = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityY\",\n      value: function minVelocityY(velocity) {\n        this.config.minVelocityY = velocity;\n        return this;\n      }\n\n      /**\n       * #### Android only\n       * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n       * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n       * @param value\n       */\n    }, {\n      key: \"averageTouches\",\n      value: function averageTouches(value) {\n        this.config.avgTouches = value;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n       */\n    }, {\n      key: \"enableTrackpadTwoFingerGesture\",\n      value: function enableTrackpadTwoFingerGesture(value) {\n        this.config.enableTrackpadTwoFingerGesture = value;\n        return this;\n      }\n\n      /**\n       * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n       * @param duration\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n       */\n    }, {\n      key: \"activateAfterLongPress\",\n      value: function activateAfterLongPress(duration) {\n        this.config.activateAfterLongPress = duration;\n        return this;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n        this.handlers.changeEventCalculator = changeEventCalculator;\n        return _superPropGet(PanGesture, \"onChange\", this, 3)([callback]);\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[7], \"./gesture\").ContinousBaseGesture);\n});","lineCount":246,"map":[[22,30,11,0],[23,4,11,0],[23,8,11,0,"_e"],[23,10,11,0],[23,18,11,0,"global"],[23,24,11,0],[23,25,11,0,"Error"],[23,30,11,0],[24,4,11,0],[24,8,11,0,"changeEventCalculator"],[24,29,11,0],[24,41,11,0,"changeEventCalculator"],[24,63,12,2,"current"],[24,70,12,60],[24,72,13,2,"previous"],[24,80,13,62],[24,82,14,2],[25,6,16,2],[25,10,16,6,"changePayload"],[25,23,16,49],[26,6,17,2],[26,10,17,6,"previous"],[26,18,17,14],[26,23,17,19,"undefined"],[26,32,17,28],[26,34,17,30],[27,8,18,4,"changePayload"],[27,21,18,17],[27,24,18,20],[28,10,19,6,"changeX"],[28,17,19,13],[28,19,19,15,"current"],[28,26,19,22],[28,27,19,23,"translationX"],[28,39,19,35],[29,10,20,6,"changeY"],[29,17,20,13],[29,19,20,15,"current"],[29,26,20,22],[29,27,20,23,"translationY"],[30,8,21,4],[30,9,21,5],[31,6,22,2],[31,7,22,3],[31,13,22,9],[32,8,23,4,"changePayload"],[32,21,23,17],[32,24,23,20],[33,10,24,6,"changeX"],[33,17,24,13],[33,19,24,15,"current"],[33,26,24,22],[33,27,24,23,"translationX"],[33,39,24,35],[33,42,24,38,"previous"],[33,50,24,46],[33,51,24,47,"translationX"],[33,63,24,59],[34,10,25,6,"changeY"],[34,17,25,13],[34,19,25,15,"current"],[34,26,25,22],[34,27,25,23,"translationY"],[34,39,25,35],[34,42,25,38,"previous"],[34,50,25,46],[34,51,25,47,"translationY"],[35,8,26,4],[35,9,26,5],[36,6,27,2],[37,6,29,2],[37,13,29,2,"Object"],[37,19,29,2],[37,20,29,2,"assign"],[37,26,29,2],[37,31,29,14,"current"],[37,38,29,21],[37,40,29,26,"changePayload"],[37,53,29,39],[38,4,30,0],[38,5,30,1],[39,4,30,1,"changeEventCalculator"],[39,25,30,1],[39,26,30,1,"__closure"],[39,35,30,1],[40,4,30,1,"changeEventCalculator"],[40,25,30,1],[40,26,30,1,"__workletHash"],[40,39,30,1],[41,4,30,1,"changeEventCalculator"],[41,25,30,1],[41,26,30,1,"__initData"],[41,36,30,1],[41,39,30,1,"_worklet_425682043203_init_data"],[41,70,30,1],[42,4,30,1,"changeEventCalculator"],[42,25,30,1],[42,26,30,1,"__stackDetails"],[42,40,30,1],[42,43,30,1,"_e"],[42,45,30,1],[43,4,30,1],[43,11,30,1,"changeEventCalculator"],[43,32,30,1],[44,2,30,1],[44,3,11,0],[45,2,11,0],[45,6,32,13,"PanGesture"],[45,16,32,23],[45,19,32,23,"exports"],[45,26,32,23],[45,27,32,23,"PanGesture"],[45,37,32,23],[45,63,32,23,"_ContinousBaseGesture"],[45,84,32,23],[46,4,38,2],[46,13,38,2,"PanGesture"],[46,24,38,2],[46,26,38,16],[47,6,38,16],[47,10,38,16,"_this"],[47,15,38,16],[48,6,38,16],[48,10,38,16,"_classCallCheck2"],[48,26,38,16],[48,27,38,16,"default"],[48,34,38,16],[48,42,38,16,"PanGesture"],[48,52,38,16],[49,6,39,4,"_this"],[49,11,39,4],[49,14,39,4,"_callSuper"],[49,24,39,4],[49,31,39,4,"PanGesture"],[49,41,39,4],[50,6,39,12,"_this"],[50,11,39,12],[50,12,36,9,"config"],[50,18,36,15],[50,21,36,56],[50,22,36,57],[50,23,36,58],[51,6,41,4,"_this"],[51,11,41,4],[51,12,41,9,"handlerName"],[51,23,41,20],[51,26,41,23],[51,45,41,42],[52,6,41,43],[52,13,41,43,"_this"],[52,18,41,43],[53,4,42,2],[55,4,44,2],[56,0,45,0],[57,0,46,0],[58,0,47,0],[59,0,48,0],[60,4,44,2],[60,8,44,2,"_inherits2"],[60,18,44,2],[60,19,44,2,"default"],[60,26,44,2],[60,28,44,2,"PanGesture"],[60,38,44,2],[60,40,44,2,"_ContinousBaseGesture"],[60,61,44,2],[61,4,44,2],[61,15,44,2,"_createClass2"],[61,28,44,2],[61,29,44,2,"default"],[61,36,44,2],[61,38,44,2,"PanGesture"],[61,48,44,2],[62,6,44,2,"key"],[62,9,44,2],[63,6,44,2,"value"],[63,11,44,2],[63,13,49,2],[63,22,49,2,"activeOffsetY"],[63,35,49,15,"activeOffsetY"],[63,36,50,4,"offset"],[63,42,50,75],[63,44,51,4],[64,8,52,4],[64,12,52,8,"Array"],[64,17,52,13],[64,18,52,14,"isArray"],[64,25,52,21],[64,26,52,22,"offset"],[64,32,52,28],[64,33,52,29],[64,35,52,31],[65,10,53,6],[65,14,53,10],[65,15,53,11,"config"],[65,21,53,17],[65,22,53,18,"activeOffsetYStart"],[65,40,53,36],[65,43,53,39,"offset"],[65,49,53,45],[65,50,53,46],[65,51,53,47],[65,52,53,48],[66,10,54,6],[66,14,54,10],[66,15,54,11,"config"],[66,21,54,17],[66,22,54,18,"activeOffsetYEnd"],[66,38,54,34],[66,41,54,37,"offset"],[66,47,54,43],[66,48,54,44],[66,49,54,45],[66,50,54,46],[67,8,55,4],[67,9,55,5],[67,15,55,11],[67,19,55,15,"offset"],[67,25,55,21],[67,28,55,24],[67,29,55,25],[67,31,55,27],[68,10,56,6],[68,14,56,10],[68,15,56,11,"config"],[68,21,56,17],[68,22,56,18,"activeOffsetYStart"],[68,40,56,36],[68,43,56,39,"offset"],[68,49,56,45],[69,8,57,4],[69,9,57,5],[69,15,57,11],[70,10,58,6],[70,14,58,10],[70,15,58,11,"config"],[70,21,58,17],[70,22,58,18,"activeOffsetYEnd"],[70,38,58,34],[70,41,58,37,"offset"],[70,47,58,43],[71,8,59,4],[72,8,60,4],[72,15,60,11],[72,19,60,15],[73,6,61,2],[75,6,63,2],[76,0,64,0],[77,0,65,0],[78,0,66,0],[79,0,67,0],[80,4,63,2],[81,6,63,2,"key"],[81,9,63,2],[82,6,63,2,"value"],[82,11,63,2],[82,13,68,2],[82,22,68,2,"activeOffsetX"],[82,35,68,15,"activeOffsetX"],[82,36,69,4,"offset"],[82,42,69,75],[82,44,70,4],[83,8,71,4],[83,12,71,8,"Array"],[83,17,71,13],[83,18,71,14,"isArray"],[83,25,71,21],[83,26,71,22,"offset"],[83,32,71,28],[83,33,71,29],[83,35,71,31],[84,10,72,6],[84,14,72,10],[84,15,72,11,"config"],[84,21,72,17],[84,22,72,18,"activeOffsetXStart"],[84,40,72,36],[84,43,72,39,"offset"],[84,49,72,45],[84,50,72,46],[84,51,72,47],[84,52,72,48],[85,10,73,6],[85,14,73,10],[85,15,73,11,"config"],[85,21,73,17],[85,22,73,18,"activeOffsetXEnd"],[85,38,73,34],[85,41,73,37,"offset"],[85,47,73,43],[85,48,73,44],[85,49,73,45],[85,50,73,46],[86,8,74,4],[86,9,74,5],[86,15,74,11],[86,19,74,15,"offset"],[86,25,74,21],[86,28,74,24],[86,29,74,25],[86,31,74,27],[87,10,75,6],[87,14,75,10],[87,15,75,11,"config"],[87,21,75,17],[87,22,75,18,"activeOffsetXStart"],[87,40,75,36],[87,43,75,39,"offset"],[87,49,75,45],[88,8,76,4],[88,9,76,5],[88,15,76,11],[89,10,77,6],[89,14,77,10],[89,15,77,11,"config"],[89,21,77,17],[89,22,77,18,"activeOffsetXEnd"],[89,38,77,34],[89,41,77,37,"offset"],[89,47,77,43],[90,8,78,4],[91,8,79,4],[91,15,79,11],[91,19,79,15],[92,6,80,2],[94,6,82,2],[95,0,83,0],[96,0,84,0],[97,0,85,0],[98,0,86,0],[99,4,82,2],[100,6,82,2,"key"],[100,9,82,2],[101,6,82,2,"value"],[101,11,82,2],[101,13,87,2],[101,22,87,2,"failOffsetY"],[101,33,87,13,"failOffsetY"],[101,34,88,4,"offset"],[101,40,88,71],[101,42,89,4],[102,8,90,4],[102,12,90,8,"Array"],[102,17,90,13],[102,18,90,14,"isArray"],[102,25,90,21],[102,26,90,22,"offset"],[102,32,90,28],[102,33,90,29],[102,35,90,31],[103,10,91,6],[103,14,91,10],[103,15,91,11,"config"],[103,21,91,17],[103,22,91,18,"failOffsetYStart"],[103,38,91,34],[103,41,91,37,"offset"],[103,47,91,43],[103,48,91,44],[103,49,91,45],[103,50,91,46],[104,10,92,6],[104,14,92,10],[104,15,92,11,"config"],[104,21,92,17],[104,22,92,18,"failOffsetYEnd"],[104,36,92,32],[104,39,92,35,"offset"],[104,45,92,41],[104,46,92,42],[104,47,92,43],[104,48,92,44],[105,8,93,4],[105,9,93,5],[105,15,93,11],[105,19,93,15,"offset"],[105,25,93,21],[105,28,93,24],[105,29,93,25],[105,31,93,27],[106,10,94,6],[106,14,94,10],[106,15,94,11,"config"],[106,21,94,17],[106,22,94,18,"failOffsetYStart"],[106,38,94,34],[106,41,94,37,"offset"],[106,47,94,43],[107,8,95,4],[107,9,95,5],[107,15,95,11],[108,10,96,6],[108,14,96,10],[108,15,96,11,"config"],[108,21,96,17],[108,22,96,18,"failOffsetYEnd"],[108,36,96,32],[108,39,96,35,"offset"],[108,45,96,41],[109,8,97,4],[110,8,98,4],[110,15,98,11],[110,19,98,15],[111,6,99,2],[113,6,101,2],[114,0,102,0],[115,0,103,0],[116,0,104,0],[117,0,105,0],[118,4,101,2],[119,6,101,2,"key"],[119,9,101,2],[120,6,101,2,"value"],[120,11,101,2],[120,13,106,2],[120,22,106,2,"failOffsetX"],[120,33,106,13,"failOffsetX"],[120,34,107,4,"offset"],[120,40,107,71],[120,42,108,4],[121,8,109,4],[121,12,109,8,"Array"],[121,17,109,13],[121,18,109,14,"isArray"],[121,25,109,21],[121,26,109,22,"offset"],[121,32,109,28],[121,33,109,29],[121,35,109,31],[122,10,110,6],[122,14,110,10],[122,15,110,11,"config"],[122,21,110,17],[122,22,110,18,"failOffsetXStart"],[122,38,110,34],[122,41,110,37,"offset"],[122,47,110,43],[122,48,110,44],[122,49,110,45],[122,50,110,46],[123,10,111,6],[123,14,111,10],[123,15,111,11,"config"],[123,21,111,17],[123,22,111,18,"failOffsetXEnd"],[123,36,111,32],[123,39,111,35,"offset"],[123,45,111,41],[123,46,111,42],[123,47,111,43],[123,48,111,44],[124,8,112,4],[124,9,112,5],[124,15,112,11],[124,19,112,15,"offset"],[124,25,112,21],[124,28,112,24],[124,29,112,25],[124,31,112,27],[125,10,113,6],[125,14,113,10],[125,15,113,11,"config"],[125,21,113,17],[125,22,113,18,"failOffsetXStart"],[125,38,113,34],[125,41,113,37,"offset"],[125,47,113,43],[126,8,114,4],[126,9,114,5],[126,15,114,11],[127,10,115,6],[127,14,115,10],[127,15,115,11,"config"],[127,21,115,17],[127,22,115,18,"failOffsetXEnd"],[127,36,115,32],[127,39,115,35,"offset"],[127,45,115,41],[128,8,116,4],[129,8,117,4],[129,15,117,11],[129,19,117,15],[130,6,118,2],[132,6,120,2],[133,0,121,0],[134,0,122,0],[135,0,123,0],[136,4,120,2],[137,6,120,2,"key"],[137,9,120,2],[138,6,120,2,"value"],[138,11,120,2],[138,13,124,2],[138,22,124,2,"minPointers"],[138,33,124,13,"minPointers"],[138,34,124,14,"minPointers"],[138,46,124,33],[138,48,124,35],[139,8,125,4],[139,12,125,8],[139,13,125,9,"config"],[139,19,125,15],[139,20,125,16,"minPointers"],[139,31,125,27],[139,34,125,30,"minPointers"],[139,46,125,41],[140,8,126,4],[140,15,126,11],[140,19,126,15],[141,6,127,2],[143,6,129,2],[144,0,130,0],[145,0,131,0],[146,0,132,0],[147,0,133,0],[148,4,129,2],[149,6,129,2,"key"],[149,9,129,2],[150,6,129,2,"value"],[150,11,129,2],[150,13,134,2],[150,22,134,2,"maxPointers"],[150,33,134,13,"maxPointers"],[150,34,134,14,"maxPointers"],[150,46,134,33],[150,48,134,35],[151,8,135,4],[151,12,135,8],[151,13,135,9,"config"],[151,19,135,15],[151,20,135,16,"maxPointers"],[151,31,135,27],[151,34,135,30,"maxPointers"],[151,46,135,41],[152,8,136,4],[152,15,136,11],[152,19,136,15],[153,6,137,2],[155,6,139,2],[156,0,140,0],[157,0,141,0],[158,0,142,0],[159,0,143,0],[160,4,139,2],[161,6,139,2,"key"],[161,9,139,2],[162,6,139,2,"value"],[162,11,139,2],[162,13,144,2],[162,22,144,2,"minDistance"],[162,33,144,13,"minDistance"],[162,34,144,14,"distance"],[162,42,144,30],[162,44,144,32],[163,8,145,4],[163,12,145,8],[163,13,145,9,"config"],[163,19,145,15],[163,20,145,16,"minDist"],[163,27,145,23],[163,30,145,26,"distance"],[163,38,145,34],[164,8,146,4],[164,15,146,11],[164,19,146,15],[165,6,147,2],[167,6,149,2],[168,0,150,0],[169,0,151,0],[170,0,152,0],[171,4,149,2],[172,6,149,2,"key"],[172,9,149,2],[173,6,149,2,"value"],[173,11,149,2],[173,13,153,2],[173,22,153,2,"minVelocity"],[173,33,153,13,"minVelocity"],[173,34,153,14,"velocity"],[173,42,153,30],[173,44,153,32],[174,8,154,4],[174,12,154,8],[174,13,154,9,"config"],[174,19,154,15],[174,20,154,16,"minVelocity"],[174,31,154,27],[174,34,154,30,"velocity"],[174,42,154,38],[175,8,155,4],[175,15,155,11],[175,19,155,15],[176,6,156,2],[178,6,158,2],[179,0,159,0],[180,0,160,0],[181,0,161,0],[182,4,158,2],[183,6,158,2,"key"],[183,9,158,2],[184,6,158,2,"value"],[184,11,158,2],[184,13,162,2],[184,22,162,2,"minVelocityX"],[184,34,162,14,"minVelocityX"],[184,35,162,15,"velocity"],[184,43,162,31],[184,45,162,33],[185,8,163,4],[185,12,163,8],[185,13,163,9,"config"],[185,19,163,15],[185,20,163,16,"minVelocityX"],[185,32,163,28],[185,35,163,31,"velocity"],[185,43,163,39],[186,8,164,4],[186,15,164,11],[186,19,164,15],[187,6,165,2],[189,6,167,2],[190,0,168,0],[191,0,169,0],[192,0,170,0],[193,4,167,2],[194,6,167,2,"key"],[194,9,167,2],[195,6,167,2,"value"],[195,11,167,2],[195,13,171,2],[195,22,171,2,"minVelocityY"],[195,34,171,14,"minVelocityY"],[195,35,171,15,"velocity"],[195,43,171,31],[195,45,171,33],[196,8,172,4],[196,12,172,8],[196,13,172,9,"config"],[196,19,172,15],[196,20,172,16,"minVelocityY"],[196,32,172,28],[196,35,172,31,"velocity"],[196,43,172,39],[197,8,173,4],[197,15,173,11],[197,19,173,15],[198,6,174,2],[200,6,176,2],[201,0,177,0],[202,0,178,0],[203,0,179,0],[204,0,180,0],[205,0,181,0],[206,4,176,2],[207,6,176,2,"key"],[207,9,176,2],[208,6,176,2,"value"],[208,11,176,2],[208,13,182,2],[208,22,182,2,"averageTouches"],[208,36,182,16,"averageTouches"],[208,37,182,17,"value"],[208,42,182,31],[208,44,182,33],[209,8,183,4],[209,12,183,8],[209,13,183,9,"config"],[209,19,183,15],[209,20,183,16,"avgTouches"],[209,30,183,26],[209,33,183,29,"value"],[209,38,183,34],[210,8,184,4],[210,15,184,11],[210,19,184,15],[211,6,185,2],[213,6,187,2],[214,0,188,0],[215,0,189,0],[216,0,190,0],[217,0,191,0],[218,0,192,0],[219,4,187,2],[220,6,187,2,"key"],[220,9,187,2],[221,6,187,2,"value"],[221,11,187,2],[221,13,193,2],[221,22,193,2,"enableTrackpadTwoFingerGesture"],[221,52,193,32,"enableTrackpadTwoFingerGesture"],[221,53,193,33,"value"],[221,58,193,47],[221,60,193,49],[222,8,194,4],[222,12,194,8],[222,13,194,9,"config"],[222,19,194,15],[222,20,194,16,"enableTrackpadTwoFingerGesture"],[222,50,194,46],[222,53,194,49,"value"],[222,58,194,54],[223,8,195,4],[223,15,195,11],[223,19,195,15],[224,6,196,2],[226,6,198,2],[227,0,199,0],[228,0,200,0],[229,0,201,0],[230,0,202,0],[231,4,198,2],[232,6,198,2,"key"],[232,9,198,2],[233,6,198,2,"value"],[233,11,198,2],[233,13,203,2],[233,22,203,2,"activateAfterLongPress"],[233,44,203,24,"activateAfterLongPress"],[233,45,203,25,"duration"],[233,53,203,41],[233,55,203,43],[234,8,204,4],[234,12,204,8],[234,13,204,9,"config"],[234,19,204,15],[234,20,204,16,"activateAfterLongPress"],[234,42,204,38],[234,45,204,41,"duration"],[234,53,204,49],[235,8,205,4],[235,15,205,11],[235,19,205,15],[236,6,206,2],[237,4,206,3],[238,6,206,3,"key"],[238,9,206,3],[239,6,206,3,"value"],[239,11,206,3],[239,13,208,2],[239,22,208,2,"onChange"],[239,30,208,10,"onChange"],[239,31,209,4,"callback"],[239,39,213,13],[239,41,214,4],[240,8,215,4],[241,8,216,4],[241,12,216,8],[241,13,216,9,"handlers"],[241,21,216,17],[241,22,216,18,"changeEventCalculator"],[241,43,216,39],[241,46,216,42,"changeEventCalculator"],[241,67,216,63],[242,8,217,4],[242,15,217,4,"_superPropGet"],[242,28,217,4],[242,29,217,4,"PanGesture"],[242,39,217,4],[242,63,217,26,"callback"],[242,71,217,34],[243,6,218,2],[244,4,218,3],[245,2,218,3],[245,4,32,32,"ContinousBaseGesture"],[245,34,32,32],[245,35,32,32,"ContinousBaseGesture"],[245,68,32,52],[246,0,32,52],[246,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACU;CDmB;OEE;ECM;GDI;EEO;GFY;EGO;GHY;EIO;GJY;EKO;GLY;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeE;GfU;CFC"}},"type":"js/module"}]}