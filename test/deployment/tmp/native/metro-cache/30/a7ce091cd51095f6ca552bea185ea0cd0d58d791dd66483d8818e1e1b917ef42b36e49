{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":77,"column":0,"index":2378}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":2,"column":76,"index":108}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":198},"end":{"line":5,"column":63,"index":261}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":162},"end":{"line":4,"column":35,"index":197}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps="}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":52,"index":161}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":262},"end":{"line":6,"column":55,"index":317}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterConfig = filterConfig;\n  exports.findNodeHandle = findNodeHandle;\n  exports.scheduleFlushOperations = scheduleFlushOperations;\n  exports.transformIntoHandlerTags = transformIntoHandlerTags;\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"../RNGestureHandlerModule\"));\n  function isConfigParam(param, name) {\n    // param !== Object(param) returns false if `param` is a function\n    // or an object and returns true if `param` is null\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var filteredConfig = Object.assign({}, defaults);\n    for (var key of validProps) {\n      var value = props[key];\n      if (isConfigParam(value, key)) {\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop' && typeof value !== 'object') {\n          value = {\n            top: value,\n            left: value,\n            bottom: value,\n            right: value\n          };\n        }\n        filteredConfig[key] = value;\n      }\n    }\n    return filteredConfig;\n  }\n  function transformIntoHandlerTags(handlerIDs) {\n    handlerIDs = (0, _$$_REQUIRE(_dependencyMap[3], \"../utils\").toArray)(handlerIDs);\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n    // converts handler string IDs into their numeric tags\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n      return _$$_REQUIRE(_dependencyMap[4], \"./handlersRegistry\").handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') {\n      return node;\n    }\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n  var flushOperationsScheduled = false;\n  function scheduleFlushOperations() {\n    if (!flushOperationsScheduled) {\n      flushOperationsScheduled = true;\n      (0, _$$_REQUIRE(_dependencyMap[5], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n        _RNGestureHandlerModule.default.flushOperations();\n        flushOperationsScheduled = false;\n      });\n    }\n  }\n});","lineCount":72,"map":[[10,2,2,0],[10,6,2,0,"_reactNative"],[10,18,2,0],[10,21,2,0,"_$$_REQUIRE"],[10,32,2,0],[10,33,2,0,"_dependencyMap"],[10,47,2,0],[11,2,5,0],[11,6,5,0,"_RNGestureHandlerModule"],[11,29,5,0],[11,32,5,0,"_interopRequireDefault"],[11,54,5,0],[11,55,5,0,"_$$_REQUIRE"],[11,66,5,0],[11,67,5,0,"_dependencyMap"],[11,81,5,0],[12,2,8,0],[12,11,8,9,"isConfigParam"],[12,24,8,22,"isConfigParam"],[12,25,8,23,"param"],[12,30,8,37],[12,32,8,39,"name"],[12,36,8,51],[12,38,8,53],[13,4,9,2],[14,4,10,2],[15,4,11,2],[15,11,12,4,"param"],[15,16,12,9],[15,21,12,14,"undefined"],[15,30,12,23],[15,35,13,5,"param"],[15,40,13,10],[15,45,13,15,"Object"],[15,51,13,21],[15,52,13,22,"param"],[15,57,13,27],[15,58,13,28],[15,62,14,6],[15,64,14,8],[15,76,14,20],[15,80,14,25,"param"],[15,85,14,58],[15,86,14,59],[15,87,14,60],[15,91,15,4,"name"],[15,95,15,8],[15,100,15,13],[15,122,15,35],[15,126,16,4,"name"],[15,130,16,8],[15,135,16,13],[15,151,16,29],[16,2,18,0],[17,2,20,7],[17,11,20,16,"filterConfig"],[17,23,20,28,"filterConfig"],[17,24,21,2,"props"],[17,29,21,32],[17,31,22,2,"validProps"],[17,41,22,22],[17,43,24,2],[18,4,24,2],[18,8,23,2,"defaults"],[18,16,23,35],[18,19,23,35,"arguments"],[18,28,23,35],[18,29,23,35,"length"],[18,35,23,35],[18,43,23,35,"arguments"],[18,52,23,35],[18,60,23,35,"undefined"],[18,69,23,35],[18,72,23,35,"arguments"],[18,81,23,35],[18,87,23,38],[18,88,23,39],[18,89,23,40],[19,4,25,2],[19,8,25,8,"filteredConfig"],[19,22,25,22],[19,25,25,22,"Object"],[19,31,25,22],[19,32,25,22,"assign"],[19,38,25,22],[19,43,25,30,"defaults"],[19,51,25,38],[19,52,25,40],[20,4,26,2],[20,9,26,7],[20,13,26,13,"key"],[20,16,26,16],[20,20,26,20,"validProps"],[20,30,26,30],[20,32,26,32],[21,6,27,4],[21,10,27,8,"value"],[21,15,27,13],[21,18,27,16,"props"],[21,23,27,21],[21,24,27,22,"key"],[21,27,27,25],[21,28,27,26],[22,6,28,4],[22,10,28,8,"isConfigParam"],[22,23,28,21],[22,24,28,22,"value"],[22,29,28,27],[22,31,28,29,"key"],[22,34,28,32],[22,35,28,33],[22,37,28,35],[23,8,29,6],[23,12,29,10,"key"],[23,15,29,13],[23,20,29,18],[23,42,29,40],[23,46,29,44,"key"],[23,49,29,47],[23,54,29,52],[23,63,29,61],[23,65,29,63],[24,10,30,8,"value"],[24,15,30,13],[24,18,30,16,"transformIntoHandlerTags"],[24,42,30,40],[24,43,30,41,"props"],[24,48,30,46],[24,49,30,47,"key"],[24,52,30,50],[24,53,30,51],[24,54,30,52],[25,8,31,6],[25,9,31,7],[25,15,31,13],[25,19,31,17,"key"],[25,22,31,20],[25,27,31,25],[25,36,31,34],[25,40,31,38],[25,47,31,45,"value"],[25,52,31,50],[25,57,31,55],[25,65,31,63],[25,67,31,65],[26,10,32,8,"value"],[26,15,32,13],[26,18,32,16],[27,12,32,18,"top"],[27,15,32,21],[27,17,32,23,"value"],[27,22,32,28],[28,12,32,30,"left"],[28,16,32,34],[28,18,32,36,"value"],[28,23,32,41],[29,12,32,43,"bottom"],[29,18,32,49],[29,20,32,51,"value"],[29,25,32,56],[30,12,32,58,"right"],[30,17,32,63],[30,19,32,65,"value"],[31,10,32,71],[31,11,32,72],[32,8,33,6],[33,8,34,6,"filteredConfig"],[33,22,34,20],[33,23,34,21,"key"],[33,26,34,24],[33,27,34,25],[33,30,34,28,"value"],[33,35,34,33],[34,6,35,4],[35,4,36,2],[36,4,37,2],[36,11,37,9,"filteredConfig"],[36,25,37,23],[37,2,38,0],[38,2,40,7],[38,11,40,16,"transformIntoHandlerTags"],[38,35,40,40,"transformIntoHandlerTags"],[38,36,40,41,"handlerIDs"],[38,46,40,56],[38,48,40,58],[39,4,41,2,"handlerIDs"],[39,14,41,12],[39,17,41,15],[39,21,41,15,"toArray"],[39,51,41,15],[39,52,41,15,"toArray"],[39,71,41,22],[39,73,41,23,"handlerIDs"],[39,83,41,33],[39,84,41,34],[40,4,43,2],[40,8,43,6,"Platform"],[40,29,43,14],[40,30,43,15,"OS"],[40,32,43,17],[40,37,43,22],[40,42,43,27],[40,44,43,29],[41,6,44,4],[41,13,44,11,"handlerIDs"],[41,23,44,21],[41,24,45,7,"map"],[41,27,45,10],[41,28,45,11],[41,38,45,11,"_ref"],[41,42,45,11],[42,8,45,11],[42,12,45,14,"current"],[42,19,45,21],[42,22,45,21,"_ref"],[42,26,45,21],[42,27,45,14,"current"],[42,34,45,21],[43,8,45,21],[43,15,45,46,"current"],[43,22,45,53],[44,6,45,53],[44,8,45,54],[44,9,46,7,"filter"],[44,15,46,13],[44,16,46,14],[44,26,46,15,"handle"],[44,32,46,26],[45,8,46,26],[45,15,46,31,"handle"],[45,21,46,37],[46,6,46,37],[46,8,46,38],[47,4,47,2],[48,4,48,2],[49,4,49,2],[49,11,49,9,"handlerIDs"],[49,21,49,19],[49,22,50,5,"map"],[49,25,50,8],[49,26,51,6],[49,36,51,7,"handlerID"],[49,45,51,21],[50,6,51,21],[50,10,51,21,"_handlerID$current"],[50,28,51,21],[51,6,51,21],[51,13,52,8,"handlerIDToTag"],[51,43,52,8],[51,44,52,8,"handlerIDToTag"],[51,80,52,22],[51,81,52,23,"handlerID"],[51,90,52,32],[51,91,52,33],[51,97,52,33,"_handlerID$current"],[51,115,52,33],[51,118,52,37,"handlerID"],[51,127,52,46],[51,128,52,47,"current"],[51,135,52,54],[51,156,52,37,"_handlerID$current"],[51,174,52,37],[51,175,52,56,"handlerTag"],[51,185,52,66],[51,190,52,70],[51,191,52,71],[51,192,52,72],[52,4,52,72],[52,5,53,4],[52,6,53,5],[52,7,54,5,"filter"],[52,13,54,11],[52,14,54,12],[52,24,54,13,"handlerTag"],[52,34,54,31],[53,6,54,31],[53,13,54,36,"handlerTag"],[53,23,54,46],[53,26,54,49],[53,27,54,50],[54,4,54,50],[54,6,54,51],[55,2,55,0],[56,2,57,7],[56,11,57,16,"findNodeHandle"],[56,25,57,30,"findNodeHandle"],[56,26,58,2,"node"],[56,30,58,77],[56,32,59,73],[57,4,60,2],[57,8,60,6,"Platform"],[57,29,60,14],[57,30,60,15,"OS"],[57,32,60,17],[57,37,60,22],[57,42,60,27],[57,44,60,29],[58,6,61,4],[58,13,61,11,"node"],[58,17,61,15],[59,4,62,2],[60,4,63,2],[60,11,63,9],[60,15,63,9,"findNodeHandleRN"],[60,42,63,25],[60,44,63,26,"node"],[60,48,63,30],[60,49,63,31],[61,2,64,0],[62,2,65,0],[62,6,65,4,"flushOperationsScheduled"],[62,30,65,28],[62,33,65,31],[62,38,65,36],[63,2,67,7],[63,11,67,16,"scheduleFlushOperations"],[63,34,67,39,"scheduleFlushOperations"],[63,35,67,39],[63,37,67,42],[64,4,68,2],[64,8,68,6],[64,9,68,7,"flushOperationsScheduled"],[64,33,68,31],[64,35,68,33],[65,6,69,4,"flushOperationsScheduled"],[65,30,69,28],[65,33,69,31],[65,37,69,35],[66,6,70,4],[66,10,70,4,"ghQueueMicrotask"],[66,40,70,4],[66,41,70,4,"ghQueueMicrotask"],[66,80,70,20],[66,82,70,21],[66,94,70,27],[67,8,71,6,"RNGestureHandlerModule"],[67,39,71,28],[67,40,71,29,"flushOperations"],[67,55,71,44],[67,56,71,45],[67,57,71,46],[68,8,73,6,"flushOperationsScheduled"],[68,32,73,30],[68,35,73,33],[68,40,73,38],[69,6,74,4],[69,7,74,5],[69,8,74,6],[70,4,75,2],[71,2,76,0],[72,0,76,1],[72,3]],"functionMap":{"names":["<global>","isConfigParam","filterConfig","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","findNodeHandle","scheduleFlushOperations","ghQueueMicrotask$argument_0"],"mappings":"AAA;ACO;CDU;OEE;CFkB;OGE;WCK,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CHC;OME;CNO;OOG;qBCG;KDI;CPE"}},"type":"js/module"}]}