{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":290,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":290,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":290,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./infoLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":32}}],"key":"PiNqERstAurHS3euL+PQR03s66E="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createPerformanceLogger;\n  exports.getCurrentTimestamp = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _infoLog = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./infoLog\"));\n  var _global$nativeQPLTime;\n  var PRINT_TO_CONSOLE = false;\n  var getCurrentTimestamp = exports.getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : function () {\n    return global.performance.now();\n  };\n  var PerformanceLogger = /*#__PURE__*/function () {\n    function PerformanceLogger() {\n      (0, _classCallCheck2.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n    }\n    return (0, _createClass2.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = Object.assign({}, performanceLogger.getTimespans(), this._timespans);\n        this._extras = Object.assign({}, performanceLogger.getExtras(), this._extras);\n        this._points = Object.assign({}, performanceLogger.getPoints(), this._points);\n        this._pointExtras = Object.assign({}, performanceLogger.getPointExtras(), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n        this._extras = {};\n        this._points = {};\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              (0, _infoLog.default)(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n          (0, _infoLog.default)(this._extras);\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              (0, _infoLog.default)(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n          return;\n        }\n        this._points[key] = timestamp;\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n          return;\n        }\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n          return;\n        }\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'start: ' + key);\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n          return;\n        }\n        var timespan = this._timespans[key];\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n          return;\n        }\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            (0, _infoLog.default)('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n          return;\n        }\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n        if (PRINT_TO_CONSOLE) {\n          (0, _infoLog.default)('PerformanceLogger.js', 'end: ' + key);\n        }\n      }\n    }]);\n  }();\n  function createPerformanceLogger() {\n    return new PerformanceLogger();\n  }\n});","lineCount":250,"map":[[10,2,18,0],[10,6,18,0,"_infoLog"],[10,14,18,0],[10,17,18,0,"_interopRequireDefault"],[10,39,18,0],[10,40,18,0,"_$$_REQUIRE"],[10,51,18,0],[10,52,18,0,"_dependencyMap"],[10,66,18,0],[11,2,18,32],[11,6,18,32,"_global$nativeQPLTime"],[11,27,18,32],[12,2,20,0],[12,6,20,6,"PRINT_TO_CONSOLE"],[12,22,20,29],[12,25,20,32],[12,30,20,37],[13,2,22,7],[13,6,22,13,"getCurrentTimestamp"],[13,25,22,46],[13,28,22,46,"exports"],[13,35,22,46],[13,36,22,46,"getCurrentTimestamp"],[13,55,22,46],[13,59,22,46,"_global$nativeQPLTime"],[13,80,22,46],[13,83,23,2,"global"],[13,89,23,8],[13,90,23,9,"nativeQPLTimestamp"],[13,108,23,27],[13,120,23,27,"_global$nativeQPLTime"],[13,141,23,27],[13,144,23,32],[14,4,23,32],[14,11,23,38,"global"],[14,17,23,44],[14,18,23,45,"performance"],[14,29,23,56],[14,30,23,57,"now"],[14,33,23,60],[14,34,23,61],[14,35,23,62],[15,2,23,62],[15,3,23,63],[16,2,23,64],[16,6,25,6,"PerformanceLogger"],[16,23,25,23],[17,4,25,23],[17,13,25,23,"PerformanceLogger"],[17,31,25,23],[18,6,25,23],[18,10,25,23,"_classCallCheck2"],[18,26,25,23],[18,27,25,23,"default"],[18,34,25,23],[18,42,25,23,"PerformanceLogger"],[18,59,25,23],[19,6,25,23],[19,11,26,2,"_timespans"],[19,21,26,12],[19,24,26,43],[19,25,26,44],[19,26,26,45],[20,6,26,45],[20,11,27,2,"_extras"],[20,18,27,9],[20,21,27,42],[20,22,27,43],[20,23,27,44],[21,6,27,44],[21,11,28,2,"_points"],[21,18,28,9],[21,21,28,38],[21,22,28,39],[21,23,28,40],[22,6,28,40],[22,11,29,2,"_pointExtras"],[22,23,29,14],[22,26,29,48],[22,27,29,49],[22,28,29,50],[23,6,29,50],[23,11,30,2,"_closed"],[23,18,30,9],[23,21,30,21],[23,26,30,26],[24,4,30,26],[25,4,30,26],[25,15,30,26,"_createClass2"],[25,28,30,26],[25,29,30,26,"default"],[25,36,30,26],[25,38,30,26,"PerformanceLogger"],[25,55,30,26],[26,6,30,26,"key"],[26,9,30,26],[27,6,30,26,"value"],[27,11,30,26],[27,13,32,2],[27,22,32,2,"addTimespan"],[27,33,32,13,"addTimespan"],[27,34,33,4,"key"],[27,37,33,15],[27,39,34,4,"startTime"],[27,48,34,21],[27,50,35,4,"endTime"],[27,57,35,19],[27,59,36,4,"startExtras"],[27,70,36,24],[27,72,37,4,"endExtras"],[27,81,37,22],[27,83,38,4],[28,8,39,4],[28,12,39,8],[28,16,39,12],[28,17,39,13,"_closed"],[28,24,39,20],[28,26,39,22],[29,10,40,6],[29,14,40,10,"PRINT_TO_CONSOLE"],[29,30,40,26],[29,34,40,30,"__DEV__"],[29,41,40,37],[29,43,40,39],[30,12,41,8],[30,16,41,8,"infoLog"],[30,32,41,15],[30,34,41,16],[30,90,41,72],[30,92,41,74,"key"],[30,95,41,77],[30,96,41,78],[31,10,42,6],[32,10,43,6],[33,8,44,4],[34,8,45,4],[34,12,45,8],[34,16,45,12],[34,17,45,13,"_timespans"],[34,27,45,23],[34,28,45,24,"key"],[34,31,45,27],[34,32,45,28],[34,34,45,30],[35,10,46,6],[35,14,46,10,"PRINT_TO_CONSOLE"],[35,30,46,26],[35,34,46,30,"__DEV__"],[35,41,46,37],[35,43,46,39],[36,12,47,8],[36,16,47,8,"infoLog"],[36,32,47,15],[36,34,48,10],[36,104,48,80],[36,106,49,10,"key"],[36,109,50,8],[36,110,50,9],[37,10,51,6],[38,10,52,6],[39,8,53,4],[40,8,55,4],[40,12,55,8],[40,13,55,9,"_timespans"],[40,23,55,19],[40,24,55,20,"key"],[40,27,55,23],[40,28,55,24],[40,31,55,27],[41,10,56,6,"startTime"],[41,19,56,15],[41,21,56,6,"startTime"],[41,30,56,15],[42,10,57,6,"endTime"],[42,17,57,13],[42,19,57,6,"endTime"],[42,26,57,13],[43,10,58,6,"totalTime"],[43,19,58,15],[43,21,58,17,"endTime"],[43,28,58,24],[43,32,58,28,"startTime"],[43,41,58,37],[43,45,58,41],[43,46,58,42],[43,47,58,43],[44,10,59,6,"startExtras"],[44,21,59,17],[44,23,59,6,"startExtras"],[44,34,59,17],[45,10,60,6,"endExtras"],[45,19,60,15],[45,21,60,6,"endExtras"],[46,8,61,4],[46,9,61,5],[47,6,62,2],[48,4,62,3],[49,6,62,3,"key"],[49,9,62,3],[50,6,62,3,"value"],[50,11,62,3],[50,13,64,2],[50,22,64,2,"append"],[50,28,64,8,"append"],[50,29,64,9,"performanceLogger"],[50,46,64,46],[50,48,64,48],[51,8,65,4],[51,12,65,8],[51,13,65,9,"_timespans"],[51,23,65,19],[51,26,65,19,"Object"],[51,32,65,19],[51,33,65,19,"assign"],[51,39,65,19],[51,44,66,9,"performanceLogger"],[51,61,66,26],[51,62,66,27,"getTimespans"],[51,74,66,39],[51,75,66,40],[51,76,66,41],[51,78,67,9],[51,82,67,13],[51,83,67,14,"_timespans"],[51,93,67,24],[51,94,68,5],[52,8,69,4],[52,12,69,8],[52,13,69,9,"_extras"],[52,20,69,16],[52,23,69,16,"Object"],[52,29,69,16],[52,30,69,16,"assign"],[52,36,69,16],[52,41,69,23,"performanceLogger"],[52,58,69,40],[52,59,69,41,"getExtras"],[52,68,69,50],[52,69,69,51],[52,70,69,52],[52,72,69,57],[52,76,69,61],[52,77,69,62,"_extras"],[52,84,69,69],[52,85,69,70],[53,8,70,4],[53,12,70,8],[53,13,70,9,"_points"],[53,20,70,16],[53,23,70,16,"Object"],[53,29,70,16],[53,30,70,16,"assign"],[53,36,70,16],[53,41,70,23,"performanceLogger"],[53,58,70,40],[53,59,70,41,"getPoints"],[53,68,70,50],[53,69,70,51],[53,70,70,52],[53,72,70,57],[53,76,70,61],[53,77,70,62,"_points"],[53,84,70,69],[53,85,70,70],[54,8,71,4],[54,12,71,8],[54,13,71,9,"_pointExtras"],[54,25,71,21],[54,28,71,21,"Object"],[54,34,71,21],[54,35,71,21,"assign"],[54,41,71,21],[54,46,72,9,"performanceLogger"],[54,63,72,26],[54,64,72,27,"getPointExtras"],[54,78,72,41],[54,79,72,42],[54,80,72,43],[54,82,73,9],[54,86,73,13],[54,87,73,14,"_pointExtras"],[54,99,73,26],[54,100,74,5],[55,6,75,2],[56,4,75,3],[57,6,75,3,"key"],[57,9,75,3],[58,6,75,3,"value"],[58,11,75,3],[58,13,77,2],[58,22,77,2,"clear"],[58,27,77,7,"clear"],[58,28,77,7],[58,30,77,10],[59,8,78,4],[59,12,78,8],[59,13,78,9,"_timespans"],[59,23,78,19],[59,26,78,22],[59,27,78,23],[59,28,78,24],[60,8,79,4],[60,12,79,8],[60,13,79,9,"_extras"],[60,20,79,16],[60,23,79,19],[60,24,79,20],[60,25,79,21],[61,8,80,4],[61,12,80,8],[61,13,80,9,"_points"],[61,20,80,16],[61,23,80,19],[61,24,80,20],[61,25,80,21],[62,8,81,4],[62,12,81,8,"PRINT_TO_CONSOLE"],[62,28,81,24],[62,30,81,26],[63,10,82,6],[63,14,82,6,"infoLog"],[63,30,82,13],[63,32,82,14],[63,54,82,36],[63,56,82,38],[63,63,82,45],[63,64,82,46],[64,8,83,4],[65,6,84,2],[66,4,84,3],[67,6,84,3,"key"],[67,9,84,3],[68,6,84,3,"value"],[68,11,84,3],[68,13,86,2],[68,22,86,2,"clearCompleted"],[68,36,86,16,"clearCompleted"],[68,37,86,16],[68,39,86,19],[69,8,87,4],[69,13,87,9],[69,17,87,15,"key"],[69,21,87,18],[69,25,87,22],[69,29,87,26],[69,30,87,27,"_timespans"],[69,40,87,37],[69,42,87,39],[70,10,87,39],[70,14,87,39,"_this$_timespans$_key"],[70,35,87,39],[71,10,88,6],[71,14,88,10],[71,16,88,10,"_this$_timespans$_key"],[71,37,88,10],[71,44,88,14],[71,45,88,15,"_timespans"],[71,55,88,25],[71,56,88,26,"key"],[71,60,88,29],[71,61,88,30],[71,82,88,10,"_this$_timespans$_key"],[71,103,88,10],[71,104,88,32,"totalTime"],[71,113,88,41],[71,118,88,45],[71,122,88,49],[71,124,88,51],[72,12,89,8],[72,19,89,15],[72,23,89,19],[72,24,89,20,"_timespans"],[72,34,89,30],[72,35,89,31,"key"],[72,39,89,34],[72,40,89,35],[73,10,90,6],[74,8,91,4],[75,8,92,4],[75,12,92,8],[75,13,92,9,"_extras"],[75,20,92,16],[75,23,92,19],[75,24,92,20],[75,25,92,21],[76,8,93,4],[76,12,93,8],[76,13,93,9,"_points"],[76,20,93,16],[76,23,93,19],[76,24,93,20],[76,25,93,21],[77,8,94,4],[77,12,94,8,"PRINT_TO_CONSOLE"],[77,28,94,24],[77,30,94,26],[78,10,95,6],[78,14,95,6,"infoLog"],[78,30,95,13],[78,32,95,14],[78,54,95,36],[78,56,95,38],[78,72,95,54],[78,73,95,55],[79,8,96,4],[80,6,97,2],[81,4,97,3],[82,6,97,3,"key"],[82,9,97,3],[83,6,97,3,"value"],[83,11,97,3],[83,13,99,2],[83,22,99,2,"close"],[83,27,99,7,"close"],[83,28,99,7],[83,30,99,10],[84,8,100,4],[84,12,100,8],[84,13,100,9,"_closed"],[84,20,100,16],[84,23,100,19],[84,27,100,23],[85,6,101,2],[86,4,101,3],[87,6,101,3,"key"],[87,9,101,3],[88,6,101,3,"value"],[88,11,101,3],[88,13,103,2],[88,22,103,2,"currentTimestamp"],[88,38,103,18,"currentTimestamp"],[88,39,103,18],[88,41,103,29],[89,8,104,4],[89,15,104,11,"getCurrentTimestamp"],[89,34,104,30],[89,35,104,31],[89,36,104,32],[90,6,105,2],[91,4,105,3],[92,6,105,3,"key"],[92,9,105,3],[93,6,105,3,"value"],[93,11,105,3],[93,13,107,2],[93,22,107,2,"getExtras"],[93,31,107,11,"getExtras"],[93,32,107,11],[93,34,107,44],[94,8,108,4],[94,15,108,11],[94,19,108,15],[94,20,108,16,"_extras"],[94,27,108,23],[95,6,109,2],[96,4,109,3],[97,6,109,3,"key"],[97,9,109,3],[98,6,109,3,"value"],[98,11,109,3],[98,13,111,2],[98,22,111,2,"getPoints"],[98,31,111,11,"getPoints"],[98,32,111,11],[98,34,111,40],[99,8,112,4],[99,15,112,11],[99,19,112,15],[99,20,112,16,"_points"],[99,27,112,23],[100,6,113,2],[101,4,113,3],[102,6,113,3,"key"],[102,9,113,3],[103,6,113,3,"value"],[103,11,113,3],[103,13,115,2],[103,22,115,2,"getPointExtras"],[103,36,115,16,"getPointExtras"],[103,37,115,16],[103,39,115,45],[104,8,116,4],[104,15,116,11],[104,19,116,15],[104,20,116,16,"_pointExtras"],[104,32,116,28],[105,6,117,2],[106,4,117,3],[107,6,117,3,"key"],[107,9,117,3],[108,6,117,3,"value"],[108,11,117,3],[108,13,119,2],[108,22,119,2,"getTimespans"],[108,34,119,14,"getTimespans"],[108,35,119,14],[108,37,119,45],[109,8,120,4],[109,15,120,11],[109,19,120,15],[109,20,120,16,"_timespans"],[109,30,120,26],[110,6,121,2],[111,4,121,3],[112,6,121,3,"key"],[112,9,121,3],[113,6,121,3,"value"],[113,11,121,3],[113,13,123,2],[113,22,123,2,"hasTimespan"],[113,33,123,13,"hasTimespan"],[113,34,123,14,"key"],[113,37,123,25],[113,39,123,36],[114,8,124,4],[114,15,124,11],[114,16,124,12],[114,17,124,13],[114,21,124,17],[114,22,124,18,"_timespans"],[114,32,124,28],[114,33,124,29,"key"],[114,36,124,32],[114,37,124,33],[115,6,125,2],[116,4,125,3],[117,6,125,3,"key"],[117,9,125,3],[118,6,125,3,"value"],[118,11,125,3],[118,13,127,2],[118,22,127,2,"isClosed"],[118,30,127,10,"isClosed"],[118,31,127,10],[118,33,127,22],[119,8,128,4],[119,15,128,11],[119,19,128,15],[119,20,128,16,"_closed"],[119,27,128,23],[120,6,129,2],[121,4,129,3],[122,6,129,3,"key"],[122,9,129,3],[123,6,129,3,"value"],[123,11,129,3],[123,13,131,2],[123,22,131,2,"logEverything"],[123,35,131,15,"logEverything"],[123,36,131,15],[123,38,131,18],[124,8,132,4],[124,12,132,8,"PRINT_TO_CONSOLE"],[124,28,132,24],[124,30,132,26],[125,10,134,6],[125,15,134,11],[125,19,134,17,"key"],[125,24,134,20],[125,28,134,24],[125,32,134,28],[125,33,134,29,"_timespans"],[125,43,134,39],[125,45,134,41],[126,12,134,41],[126,16,134,41,"_this$_timespans$_key2"],[126,38,134,41],[127,12,135,8],[127,16,135,12],[127,18,135,12,"_this$_timespans$_key2"],[127,40,135,12],[127,47,135,16],[127,48,135,17,"_timespans"],[127,58,135,27],[127,59,135,28,"key"],[127,64,135,31],[127,65,135,32],[127,86,135,12,"_this$_timespans$_key2"],[127,108,135,12],[127,109,135,34,"totalTime"],[127,118,135,43],[127,123,135,47],[127,127,135,51],[127,129,135,53],[128,14,136,10],[128,18,136,10,"infoLog"],[128,34,136,17],[128,36,136,18,"key"],[128,41,136,21],[128,44,136,24],[128,48,136,28],[128,51,136,31],[128,55,136,35],[128,56,136,36,"_timespans"],[128,66,136,46],[128,67,136,47,"key"],[128,72,136,50],[128,73,136,51],[128,74,136,52,"totalTime"],[128,83,136,61],[128,86,136,64],[128,90,136,68],[128,91,136,69],[129,12,137,8],[130,10,138,6],[131,10,141,6],[131,14,141,6,"infoLog"],[131,30,141,13],[131,32,141,14],[131,36,141,18],[131,37,141,19,"_extras"],[131,44,141,26],[131,45,141,27],[132,10,144,6],[132,15,144,11],[132,19,144,17,"key"],[132,24,144,20],[132,28,144,24],[132,32,144,28],[132,33,144,29,"_points"],[132,40,144,36],[132,42,144,38],[133,12,145,8],[133,16,145,12],[133,20,145,16],[133,21,145,17,"_points"],[133,28,145,24],[133,29,145,25,"key"],[133,34,145,28],[133,35,145,29],[133,39,145,33],[133,43,145,37],[133,45,145,39],[134,14,146,10],[134,18,146,10,"infoLog"],[134,34,146,17],[134,36,146,18,"key"],[134,41,146,21],[134,44,146,24],[134,48,146,28],[134,51,146,31],[134,55,146,35],[134,56,146,36,"_points"],[134,63,146,43],[134,64,146,44,"key"],[134,69,146,47],[134,70,146,48],[134,73,146,51],[134,77,146,55],[134,78,146,56],[135,12,147,8],[136,10,148,6],[137,8,149,4],[138,6,150,2],[139,4,150,3],[140,6,150,3,"key"],[140,9,150,3],[141,6,150,3,"value"],[141,11,150,3],[141,13,152,2],[141,22,152,2,"markPoint"],[141,31,152,11,"markPoint"],[141,32,153,4,"key"],[141,35,153,15],[141,37,156,4],[142,8,156,4],[142,12,154,4,"timestamp"],[142,21,154,22],[142,24,154,22,"arguments"],[142,33,154,22],[142,34,154,22,"length"],[142,40,154,22],[142,48,154,22,"arguments"],[142,57,154,22],[142,65,154,22,"undefined"],[142,74,154,22],[142,77,154,22,"arguments"],[142,86,154,22],[142,92,154,25,"getCurrentTimestamp"],[142,111,154,44],[142,112,154,45],[142,113,154,46],[143,8,154,46],[143,12,155,4,"extras"],[143,18,155,19],[143,21,155,19,"arguments"],[143,30,155,19],[143,31,155,19,"length"],[143,37,155,19],[143,44,155,19,"arguments"],[143,53,155,19],[143,59,155,19,"undefined"],[143,68,155,19],[144,8,157,4],[144,12,157,8],[144,16,157,12],[144,17,157,13,"_closed"],[144,24,157,20],[144,26,157,22],[145,10,158,6],[145,14,158,10,"PRINT_TO_CONSOLE"],[145,30,158,26],[145,34,158,30,"__DEV__"],[145,41,158,37],[145,43,158,39],[146,12,159,8],[146,16,159,8,"infoLog"],[146,32,159,15],[146,34,159,16],[146,88,159,70],[146,90,159,72,"key"],[146,93,159,75],[146,94,159,76],[147,10,160,6],[148,10,161,6],[149,8,162,4],[150,8,163,4],[150,12,163,8],[150,16,163,12],[150,17,163,13,"_points"],[150,24,163,20],[150,25,163,21,"key"],[150,28,163,24],[150,29,163,25],[150,33,163,29],[150,37,163,33],[150,39,163,35],[151,10,164,6],[151,14,164,10,"PRINT_TO_CONSOLE"],[151,30,164,26],[151,34,164,30,"__DEV__"],[151,41,164,37],[151,43,164,39],[152,12,165,8],[152,16,165,8,"infoLog"],[152,32,165,15],[152,34,166,10],[152,111,166,87],[152,113,167,10,"key"],[152,116,168,8],[152,117,168,9],[153,10,169,6],[154,10,170,6],[155,8,171,4],[156,8,172,4],[156,12,172,8],[156,13,172,9,"_points"],[156,20,172,16],[156,21,172,17,"key"],[156,24,172,20],[156,25,172,21],[156,28,172,24,"timestamp"],[156,37,172,33],[157,8,173,4],[157,12,173,8,"extras"],[157,18,173,14],[157,20,173,16],[158,10,174,6],[158,14,174,10],[158,15,174,11,"_pointExtras"],[158,27,174,23],[158,28,174,24,"key"],[158,31,174,27],[158,32,174,28],[158,35,174,31,"extras"],[158,41,174,37],[159,8,175,4],[160,6,176,2],[161,4,176,3],[162,6,176,3,"key"],[162,9,176,3],[163,6,176,3,"value"],[163,11,176,3],[163,13,178,2],[163,22,178,2,"removeExtra"],[163,33,178,13,"removeExtra"],[163,34,178,14,"key"],[163,37,178,25],[163,39,178,40],[164,8,179,4],[164,12,179,10,"value"],[164,17,179,15],[164,20,179,18],[164,24,179,22],[164,25,179,23,"_extras"],[164,32,179,30],[164,33,179,31,"key"],[164,36,179,34],[164,37,179,35],[165,8,180,4],[165,15,180,11],[165,19,180,15],[165,20,180,16,"_extras"],[165,27,180,23],[165,28,180,24,"key"],[165,31,180,27],[165,32,180,28],[166,8,181,4],[166,15,181,11,"value"],[166,20,181,16],[167,6,182,2],[168,4,182,3],[169,6,182,3,"key"],[169,9,182,3],[170,6,182,3,"value"],[170,11,182,3],[170,13,184,2],[170,22,184,2,"setExtra"],[170,30,184,10,"setExtra"],[170,31,184,11,"key"],[170,34,184,22],[170,36,184,24,"value"],[170,41,184,41],[170,43,184,43],[171,8,185,4],[171,12,185,8],[171,16,185,12],[171,17,185,13,"_closed"],[171,24,185,20],[171,26,185,22],[172,10,186,6],[172,14,186,10,"PRINT_TO_CONSOLE"],[172,30,186,26],[172,34,186,30,"__DEV__"],[172,41,186,37],[172,43,186,39],[173,12,187,8],[173,16,187,8,"infoLog"],[173,32,187,15],[173,34,187,16],[173,87,187,69],[173,89,187,71,"key"],[173,92,187,74],[173,93,187,75],[174,10,188,6],[175,10,189,6],[176,8,190,4],[177,8,192,4],[177,12,192,8],[177,16,192,12],[177,17,192,13,"_extras"],[177,24,192,20],[177,25,192,21,"hasOwnProperty"],[177,39,192,35],[177,40,192,36,"key"],[177,43,192,39],[177,44,192,40],[177,46,192,42],[178,10,193,6],[178,14,193,10,"PRINT_TO_CONSOLE"],[178,30,193,26],[178,34,193,30,"__DEV__"],[178,41,193,37],[178,43,193,39],[179,12,194,8],[179,16,194,8,"infoLog"],[179,32,194,15],[179,34,195,10],[179,102,195,78],[179,104,196,10],[180,14,196,11,"key"],[180,17,196,14],[180,19,196,11,"key"],[180,22,196,14],[181,14,196,16,"currentValue"],[181,26,196,28],[181,28,196,30],[181,32,196,34],[181,33,196,35,"_extras"],[181,40,196,42],[181,41,196,43,"key"],[181,44,196,46],[181,45,196,47],[182,14,196,49,"attemptedValue"],[182,28,196,63],[182,30,196,65,"value"],[183,12,196,70],[183,13,197,8],[183,14,197,9],[184,10,198,6],[185,10,199,6],[186,8,200,4],[187,8,201,4],[187,12,201,8],[187,13,201,9,"_extras"],[187,20,201,16],[187,21,201,17,"key"],[187,24,201,20],[187,25,201,21],[187,28,201,24,"value"],[187,33,201,29],[188,6,202,2],[189,4,202,3],[190,6,202,3,"key"],[190,9,202,3],[191,6,202,3,"value"],[191,11,202,3],[191,13,204,2],[191,22,204,2,"startTimespan"],[191,35,204,15,"startTimespan"],[191,36,205,4,"key"],[191,39,205,15],[191,41,208,4],[192,8,208,4],[192,12,206,4,"timestamp"],[192,21,206,22],[192,24,206,22,"arguments"],[192,33,206,22],[192,34,206,22,"length"],[192,40,206,22],[192,48,206,22,"arguments"],[192,57,206,22],[192,65,206,22,"undefined"],[192,74,206,22],[192,77,206,22,"arguments"],[192,86,206,22],[192,92,206,25,"getCurrentTimestamp"],[192,111,206,44],[192,112,206,45],[192,113,206,46],[193,8,206,46],[193,12,207,4,"extras"],[193,18,207,19],[193,21,207,19,"arguments"],[193,30,207,19],[193,31,207,19,"length"],[193,37,207,19],[193,44,207,19,"arguments"],[193,53,207,19],[193,59,207,19,"undefined"],[193,68,207,19],[194,8,209,4],[194,12,209,8],[194,16,209,12],[194,17,209,13,"_closed"],[194,24,209,20],[194,26,209,22],[195,10,210,6],[195,14,210,10,"PRINT_TO_CONSOLE"],[195,30,210,26],[195,34,210,30,"__DEV__"],[195,41,210,37],[195,43,210,39],[196,12,211,8],[196,16,211,8,"infoLog"],[196,32,211,15],[196,34,212,10],[196,92,212,68],[196,94,213,10,"key"],[196,97,214,8],[196,98,214,9],[197,10,215,6],[198,10,216,6],[199,8,217,4],[200,8,219,4],[200,12,219,8],[200,16,219,12],[200,17,219,13,"_timespans"],[200,27,219,23],[200,28,219,24,"key"],[200,31,219,27],[200,32,219,28],[200,34,219,30],[201,10,220,6],[201,14,220,10,"PRINT_TO_CONSOLE"],[201,30,220,26],[201,34,220,30,"__DEV__"],[201,41,220,37],[201,43,220,39],[202,12,221,8],[202,16,221,8,"infoLog"],[202,32,221,15],[202,34,222,10],[202,106,222,82],[202,108,223,10,"key"],[202,111,224,8],[202,112,224,9],[203,10,225,6],[204,10,226,6],[205,8,227,4],[206,8,229,4],[206,12,229,8],[206,13,229,9,"_timespans"],[206,23,229,19],[206,24,229,20,"key"],[206,27,229,23],[206,28,229,24],[206,31,229,27],[207,10,230,6,"startTime"],[207,19,230,15],[207,21,230,17,"timestamp"],[207,30,230,26],[208,10,231,6,"startExtras"],[208,21,231,17],[208,23,231,19,"extras"],[209,8,232,4],[209,9,232,5],[210,8,233,4],[210,12,233,8,"PRINT_TO_CONSOLE"],[210,28,233,24],[210,30,233,26],[211,10,234,6],[211,14,234,6,"infoLog"],[211,30,234,13],[211,32,234,14],[211,54,234,36],[211,56,234,38],[211,65,234,47],[211,68,234,50,"key"],[211,71,234,53],[211,72,234,54],[212,8,235,4],[213,6,236,2],[214,4,236,3],[215,6,236,3,"key"],[215,9,236,3],[216,6,236,3,"value"],[216,11,236,3],[216,13,238,2],[216,22,238,2,"stopTimespan"],[216,34,238,14,"stopTimespan"],[216,35,239,4,"key"],[216,38,239,15],[216,40,242,4],[217,8,242,4],[217,12,240,4,"timestamp"],[217,21,240,22],[217,24,240,22,"arguments"],[217,33,240,22],[217,34,240,22,"length"],[217,40,240,22],[217,48,240,22,"arguments"],[217,57,240,22],[217,65,240,22,"undefined"],[217,74,240,22],[217,77,240,22,"arguments"],[217,86,240,22],[217,92,240,25,"getCurrentTimestamp"],[217,111,240,44],[217,112,240,45],[217,113,240,46],[218,8,240,46],[218,12,241,4,"extras"],[218,18,241,19],[218,21,241,19,"arguments"],[218,30,241,19],[218,31,241,19,"length"],[218,37,241,19],[218,44,241,19,"arguments"],[218,53,241,19],[218,59,241,19,"undefined"],[218,68,241,19],[219,8,243,4],[219,12,243,8],[219,16,243,12],[219,17,243,13,"_closed"],[219,24,243,20],[219,26,243,22],[220,10,244,6],[220,14,244,10,"PRINT_TO_CONSOLE"],[220,30,244,26],[220,34,244,30,"__DEV__"],[220,41,244,37],[220,43,244,39],[221,12,245,8],[221,16,245,8,"infoLog"],[221,32,245,15],[221,34,245,16],[221,91,245,73],[221,93,245,75,"key"],[221,96,245,78],[221,97,245,79],[222,10,246,6],[223,10,247,6],[224,8,248,4],[225,8,250,4],[225,12,250,10,"timespan"],[225,20,250,18],[225,23,250,21],[225,27,250,25],[225,28,250,26,"_timespans"],[225,38,250,36],[225,39,250,37,"key"],[225,42,250,40],[225,43,250,41],[226,8,251,4],[226,12,251,8],[226,13,251,9,"timespan"],[226,21,251,17],[226,25,251,21,"timespan"],[226,33,251,29],[226,34,251,30,"startTime"],[226,43,251,39],[226,47,251,43],[226,51,251,47],[226,53,251,49],[227,10,252,6],[227,14,252,10,"PRINT_TO_CONSOLE"],[227,30,252,26],[227,34,252,30,"__DEV__"],[227,41,252,37],[227,43,252,39],[228,12,253,8],[228,16,253,8,"infoLog"],[228,32,253,15],[228,34,254,10],[228,105,254,81],[228,107,255,10,"key"],[228,110,256,8],[228,111,256,9],[229,10,257,6],[230,10,258,6],[231,8,259,4],[232,8,260,4],[232,12,260,8,"timespan"],[232,20,260,16],[232,21,260,17,"endTime"],[232,28,260,24],[232,32,260,28],[232,36,260,32],[232,38,260,34],[233,10,261,6],[233,14,261,10,"PRINT_TO_CONSOLE"],[233,30,261,26],[233,34,261,30,"__DEV__"],[233,41,261,37],[233,43,261,39],[234,12,262,8],[234,16,262,8,"infoLog"],[234,32,262,15],[234,34,263,10],[234,107,263,83],[234,109,264,10,"key"],[234,112,265,8],[234,113,265,9],[235,10,266,6],[236,10,267,6],[237,8,268,4],[238,8,270,4,"timespan"],[238,16,270,12],[238,17,270,13,"endExtras"],[238,26,270,22],[238,29,270,25,"extras"],[238,35,270,31],[239,8,271,4,"timespan"],[239,16,271,12],[239,17,271,13,"endTime"],[239,24,271,20],[239,27,271,23,"timestamp"],[239,36,271,32],[240,8,272,4,"timespan"],[240,16,272,12],[240,17,272,13,"totalTime"],[240,26,272,22],[240,29,272,25,"timespan"],[240,37,272,33],[240,38,272,34,"endTime"],[240,45,272,41],[240,49,272,45,"timespan"],[240,57,272,53],[240,58,272,54,"startTime"],[240,67,272,63],[240,71,272,67],[240,72,272,68],[240,73,272,69],[241,8,273,4],[241,12,273,8,"PRINT_TO_CONSOLE"],[241,28,273,24],[241,30,273,26],[242,10,274,6],[242,14,274,6,"infoLog"],[242,30,274,13],[242,32,274,14],[242,54,274,36],[242,56,274,38],[242,63,274,45],[242,66,274,48,"key"],[242,69,274,51],[242,70,274,52],[243,8,275,4],[244,6,276,2],[245,4,276,3],[246,2,276,3],[247,2,288,15],[247,11,288,24,"createPerformanceLogger"],[247,34,288,47,"createPerformanceLogger"],[247,35,288,47],[247,37,288,70],[248,4,289,2],[248,11,289,9],[248,15,289,13,"PerformanceLogger"],[248,32,289,30],[248,33,289,31],[248,34,289,32],[249,2,290,0],[250,0,290,1],[250,3]],"functionMap":{"names":["<global>","<anonymous>","PerformanceLogger","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;gCCsB,8BD;AEE;ECO;GD8B;EEE;GFW;EGE;GHO;EIE;GJW;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbmB;EcE;GdwB;EeE;GfI;EgBE;GhBkB;EiBE;GjBgC;EkBE;GlBsC;CFC;eqBW"}},"type":"js/module"}]}