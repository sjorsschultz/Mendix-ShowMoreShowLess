{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":44,"index":9695}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":44,"index":9695}}],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":44,"index":9695}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":37,"index":281},"end":{"line":8,"column":53,"index":297}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":18,"index":416},"end":{"line":12,"column":46,"index":444}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":372},"end":{"line":11,"column":40,"index":396}}],"key":"MFm/RQZ0I+p8Bl7IYFE14NJy3p8="}},{"name":"react-is","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":15,"index":335},"end":{"line":10,"column":34,"index":354}},{"start":{"line":10,"column":15,"index":335},"end":{"line":10,"column":34,"index":354}}],"key":"hoZupclAije+HbYquo78nDVN6Z8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\");\n  var _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n  var React = _react;\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[4], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  var MemoizedScreen = /*#__PURE__*/React.memo(function (_ref) {\n    var component = _ref.component;\n    var route = (0, _$$_REQUIRE(_dependencyMap[5], \"./useRoute.js\").useRoute)();\n    var children = /*#__PURE__*/React.createElement(component, {\n      route: route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  var getItemsFromScreens = function getItemsFromScreens(Screen, screens) {\n    return Object.entries(screens).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        item = _ref3[1];\n      var component;\n      var props = {};\n      var useIf;\n      var isNavigator = false;\n      if ('screen' in item) {\n        var screen = item.screen,\n          _if = item.if,\n          rest = _objectWithoutProperties(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, _$$_REQUIRE(_dependencyMap[6], \"react-is\").isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, _$$_REQUIRE(_dependencyMap[6], \"react-is\").isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      var element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return function () {\n        var shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, Object.assign({\n          name: name\n        }, props, {\n          children: function children() {\n            return element;\n          }\n        }), name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    var Navigator = tree.Navigator,\n      Group = tree.Group,\n      Screen = tree.Screen,\n      config = tree.config;\n    var screens = config.screens,\n      groups = config.groups,\n      rest = _objectWithoutProperties(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    var items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (var key in config) {\n      if (key === 'screens' && screens) {\n        items.push.apply(items, _toConsumableArray(getItemsFromScreens(Screen, screens)));\n      }\n      if (key === 'groups' && groups) {\n        items.push.apply(items, _toConsumableArray(Object.entries(groups).map(function (_ref4) {\n          var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            _ref5$ = _ref5[1],\n            useIf = _ref5$.if,\n            group = _objectWithoutProperties(_ref5$, _excluded3);\n          var groupItems = getItemsFromScreens(Screen, group.screens);\n          return function () {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            var children = groupItems.map(function (item) {\n              return item();\n            });\n            var shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _react.createElement)(Group, Object.assign({\n              navigationKey: key\n            }, group, {\n              key: key\n            }), children);\n          };\n        })));\n      }\n    }\n    var NavigatorComponent = function NavigatorComponent() {\n      var children = items.map(function (item) {\n        return item();\n      });\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, Object.assign({}, rest, {\n        children: children\n      }));\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    var initialScreenConfig;\n    var _createPathConfigForTree = function createPathConfigForTree(t, o, skipInitialDetection) {\n      var createPathConfigForScreens = function createPathConfigForScreens(screens, initialRouteName) {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort(function (_ref6, _ref7) {\n          var _ref8 = _slicedToArray(_ref6, 1),\n            a = _ref8[0];\n          var _ref9 = _slicedToArray(_ref7, 1),\n            b = _ref9[0];\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(function (_ref10) {\n          var _ref11 = _slicedToArray(_ref10, 2),\n            key = _ref11[0],\n            item = _ref11[1];\n          var screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          var screens;\n          var skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = _createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = _createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(function (_ref12) {\n          var _ref13 = _slicedToArray(_ref12, 2),\n            screen = _ref13[1];\n          return Object.keys(screen).length > 0;\n        }));\n      };\n      var screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (var key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          var _o$initialRouteName;\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, (_o$initialRouteName = o == null ? void 0 : o.initialRouteName) != null ? _o$initialRouteName : t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(function (_ref14) {\n            var _o$initialRouteName2;\n            var _ref15 = _slicedToArray(_ref14, 2),\n              group = _ref15[1];\n            Object.assign(screens, createPathConfigForScreens(group.screens, (_o$initialRouteName2 = o == null ? void 0 : o.initialRouteName) != null ? _o$initialRouteName2 : t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    var screens = _createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":304,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13],[5,6,1,13,"_objectWithoutProperties"],[5,30,1,13],[5,33,1,13,"_$$_REQUIRE"],[5,44,1,13],[5,45,1,13,"_dependencyMap"],[5,59,1,13],[6,2,1,13],[6,6,1,13,"_slicedToArray"],[6,20,1,13],[6,23,1,13,"_$$_REQUIRE"],[6,34,1,13],[6,35,1,13,"_dependencyMap"],[6,49,1,13],[7,2,1,13],[7,6,1,13,"_excluded"],[7,15,1,13],[8,4,1,13,"_excluded2"],[8,14,1,13],[9,4,1,13,"_excluded3"],[9,14,1,13],[10,2,3,0,"Object"],[10,8,3,6],[10,9,3,7,"defineProperty"],[10,23,3,21],[10,24,3,22,"exports"],[10,31,3,29],[10,33,3,31],[10,45,3,43],[10,47,3,45],[11,4,4,2,"value"],[11,9,4,7],[11,11,4,9],[12,2,5,0],[12,3,5,1],[12,4,5,2],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"createComponentForStaticNavigation"],[13,44,6,42],[13,47,6,45,"createComponentForStaticNavigation"],[13,81,6,79],[14,2,7,0,"exports"],[14,9,7,7],[14,10,7,8,"createPathConfigForStaticNavigation"],[14,45,7,43],[14,48,7,46,"createPathConfigForStaticNavigation"],[14,83,7,81],[15,2,8,0],[15,6,8,4,"_react"],[15,12,8,10],[15,15,8,13,"_interopRequireWildcard"],[15,38,8,36],[15,39,8,37,"require"],[15,50,8,44],[15,51,8,44,"_dependencyMap"],[15,65,8,44],[15,77,8,52],[15,78,8,53],[15,79,8,54],[16,2,9,0],[16,6,9,4,"React"],[16,11,9,9],[16,14,9,12,"_react"],[16,20,9,18],[17,2,12,0],[17,6,12,4,"_jsxRuntime"],[17,17,12,15],[17,20,12,18,"require"],[17,31,12,25],[17,32,12,25,"_dependencyMap"],[17,46,12,25],[17,70,12,45],[17,71,12,46],[18,2,13,0],[18,11,13,9,"_getRequireWildcardCache"],[18,35,13,33,"_getRequireWildcardCache"],[18,36,13,34,"e"],[18,37,13,35],[18,39,13,37],[19,4,13,39],[19,8,13,43],[19,18,13,53],[19,22,13,57],[19,29,13,64,"WeakMap"],[19,36,13,71],[19,38,13,73],[19,45,13,80],[19,49,13,84],[20,4,13,86],[20,8,13,90,"r"],[20,9,13,91],[20,12,13,94],[20,16,13,98,"WeakMap"],[20,23,13,105],[20,24,13,106],[20,25,13,107],[21,6,13,109,"t"],[21,7,13,110],[21,10,13,113],[21,14,13,117,"WeakMap"],[21,21,13,124],[21,22,13,125],[21,23,13,126],[22,4,13,128],[22,11,13,135],[22,12,13,136,"_getRequireWildcardCache"],[22,36,13,160],[22,39,13,163],[22,48,13,136,"_getRequireWildcardCache"],[22,72,13,160,"_getRequireWildcardCache"],[22,73,13,173,"e"],[22,74,13,174],[22,76,13,176],[23,6,13,178],[23,13,13,185,"e"],[23,14,13,186],[23,17,13,189,"t"],[23,18,13,190],[23,21,13,193,"r"],[23,22,13,194],[24,4,13,196],[24,5,13,197],[24,7,13,199,"e"],[24,8,13,200],[24,9,13,201],[25,2,13,203],[26,2,14,0],[26,11,14,9,"_interopRequireWildcard"],[26,34,14,32,"_interopRequireWildcard"],[26,35,14,33,"e"],[26,36,14,34],[26,38,14,36,"r"],[26,39,14,37],[26,41,14,39],[27,4,14,41],[27,8,14,45],[27,9,14,46,"r"],[27,10,14,47],[27,14,14,51,"e"],[27,15,14,52],[27,19,14,56,"e"],[27,20,14,57],[27,21,14,58,"__esModule"],[27,31,14,68],[27,33,14,70],[27,40,14,77,"e"],[27,41,14,78],[28,4,14,80],[28,8,14,84],[28,12,14,88],[28,17,14,93,"e"],[28,18,14,94],[28,22,14,98],[28,30,14,106],[28,34,14,110],[28,41,14,117,"e"],[28,42,14,118],[28,46,14,122],[28,56,14,132],[28,60,14,136],[28,67,14,143,"e"],[28,68,14,144],[28,70,14,146],[28,77,14,153],[29,6,14,155,"default"],[29,13,14,162],[29,15,14,164,"e"],[30,4,14,166],[30,5,14,167],[31,4,14,169],[31,8,14,173,"t"],[31,9,14,174],[31,12,14,177,"_getRequireWildcardCache"],[31,36,14,201],[31,37,14,202,"r"],[31,38,14,203],[31,39,14,204],[32,4,14,206],[32,8,14,210,"t"],[32,9,14,211],[32,13,14,215,"t"],[32,14,14,216],[32,15,14,217,"has"],[32,18,14,220],[32,19,14,221,"e"],[32,20,14,222],[32,21,14,223],[32,23,14,225],[32,30,14,232,"t"],[32,31,14,233],[32,32,14,234,"get"],[32,35,14,237],[32,36,14,238,"e"],[32,37,14,239],[32,38,14,240],[33,4,14,242],[33,8,14,246,"n"],[33,9,14,247],[33,12,14,250],[34,8,14,252,"__proto__"],[34,17,14,261],[34,19,14,263],[35,6,14,268],[35,7,14,269],[36,6,14,271,"a"],[36,7,14,272],[36,10,14,275,"Object"],[36,16,14,281],[36,17,14,282,"defineProperty"],[36,31,14,296],[36,35,14,300,"Object"],[36,41,14,306],[36,42,14,307,"getOwnPropertyDescriptor"],[36,66,14,331],[37,4,14,333],[37,9,14,338],[37,13,14,342,"u"],[37,14,14,343],[37,18,14,347,"e"],[37,19,14,348],[37,21,14,350],[37,25,14,354],[37,34,14,363],[37,39,14,368,"u"],[37,40,14,369],[37,44,14,373],[37,45,14,374],[37,46,14,375],[37,47,14,376,"hasOwnProperty"],[37,61,14,390],[37,62,14,391,"call"],[37,66,14,395],[37,67,14,396,"e"],[37,68,14,397],[37,70,14,399,"u"],[37,71,14,400],[37,72,14,401],[37,74,14,403],[38,6,14,405],[38,10,14,409,"i"],[38,11,14,410],[38,14,14,413,"a"],[38,15,14,414],[38,18,14,417,"Object"],[38,24,14,423],[38,25,14,424,"getOwnPropertyDescriptor"],[38,49,14,448],[38,50,14,449,"e"],[38,51,14,450],[38,53,14,452,"u"],[38,54,14,453],[38,55,14,454],[38,58,14,457],[38,62,14,461],[39,6,14,463,"i"],[39,7,14,464],[39,12,14,469,"i"],[39,13,14,470],[39,14,14,471,"get"],[39,17,14,474],[39,21,14,478,"i"],[39,22,14,479],[39,23,14,480,"set"],[39,26,14,483],[39,27,14,484],[39,30,14,487,"Object"],[39,36,14,493],[39,37,14,494,"defineProperty"],[39,51,14,508],[39,52,14,509,"n"],[39,53,14,510],[39,55,14,512,"u"],[39,56,14,513],[39,58,14,515,"i"],[39,59,14,516],[39,60,14,517],[39,63,14,520,"n"],[39,64,14,521],[39,65,14,522,"u"],[39,66,14,523],[39,67,14,524],[39,70,14,527,"e"],[39,71,14,528],[39,72,14,529,"u"],[39,73,14,530],[39,74,14,531],[40,4,14,533],[41,4,14,535],[41,11,14,542,"n"],[41,12,14,543],[41,13,14,544,"default"],[41,20,14,551],[41,23,14,554,"e"],[41,24,14,555],[41,26,14,557,"t"],[41,27,14,558],[41,31,14,562,"t"],[41,32,14,563],[41,33,14,564,"set"],[41,36,14,567],[41,37,14,568,"e"],[41,38,14,569],[41,40,14,571,"n"],[41,41,14,572],[41,42,14,573],[41,44,14,575,"n"],[41,45,14,576],[42,2,14,578],[43,2,15,0],[44,0,16,0],[45,0,17,0],[46,0,18,0],[48,2,20,0],[49,0,21,0],[50,0,22,0],[51,0,23,0],[53,2,25,0],[54,0,26,0],[55,0,27,0],[56,0,28,0],[58,2,30,0],[59,0,31,0],[60,0,32,0],[61,0,33,0],[63,2,35,0],[64,0,36,0],[65,0,37,0],[67,2,39,0],[67,6,39,6,"MemoizedScreen"],[67,20,39,20],[67,23,39,23],[67,36,39,36,"React"],[67,41,39,41],[67,42,39,42,"memo"],[67,46,39,46],[67,47,39,47],[67,57,39,47,"_ref"],[67,61,39,47],[67,63,41,6],[68,4,41,6],[68,8,40,2,"component"],[68,17,40,11],[68,20,40,11,"_ref"],[68,24,40,11],[68,25,40,2,"component"],[68,34,40,11],[69,4,42,2],[69,8,42,8,"route"],[69,13,42,13],[69,16,42,16],[69,17,42,17],[69,18,42,18],[69,20,42,20,"_$$_REQUIRE"],[69,31,42,20],[69,32,42,20,"_dependencyMap"],[69,46,42,20],[69,68,42,30,"useRoute"],[69,76,42,38],[69,78,42,40],[69,79,42,41],[70,4,43,2],[70,8,43,8,"children"],[70,16,43,16],[70,19,43,19],[70,32,43,32,"React"],[70,37,43,37],[70,38,43,38,"createElement"],[70,51,43,51],[70,52,43,52,"component"],[70,61,43,61],[70,63,43,63],[71,6,44,4,"route"],[71,11,44,9],[71,13,44,4,"route"],[72,4,45,2],[72,5,45,3],[72,6,45,4],[73,4,46,2],[73,11,46,9,"children"],[73,19,46,17],[74,2,47,0],[74,3,47,1],[74,4,47,2],[75,2,48,0,"MemoizedScreen"],[75,16,48,14],[75,17,48,15,"displayName"],[75,28,48,26],[75,31,48,29],[75,45,48,43],[76,2,49,0],[76,6,49,6,"getItemsFromScreens"],[76,25,49,25],[76,28,49,28],[76,37,49,6,"getItemsFromScreens"],[76,56,49,25,"getItemsFromScreens"],[76,57,49,29,"Screen"],[76,63,49,35],[76,65,49,37,"screens"],[76,72,49,44],[76,74,49,49],[77,4,50,2],[77,11,50,9,"Object"],[77,17,50,15],[77,18,50,16,"entries"],[77,25,50,23],[77,26,50,24,"screens"],[77,33,50,31],[77,34,50,32],[77,35,50,33,"map"],[77,38,50,36],[77,39,50,37],[77,49,50,37,"_ref2"],[77,54,50,37],[77,56,50,55],[78,6,50,55],[78,10,50,55,"_ref3"],[78,15,50,55],[78,18,50,55,"_slicedToArray"],[78,32,50,55],[78,33,50,55,"_ref2"],[78,38,50,55],[79,8,50,39,"name"],[79,12,50,43],[79,15,50,43,"_ref3"],[79,20,50,43],[80,8,50,45,"item"],[80,12,50,49],[80,15,50,49,"_ref3"],[80,20,50,49],[81,6,51,4],[81,10,51,8,"component"],[81,19,51,17],[82,6,52,4],[82,10,52,8,"props"],[82,15,52,13],[82,18,52,16],[82,19,52,17],[82,20,52,18],[83,6,53,4],[83,10,53,8,"useIf"],[83,15,53,13],[84,6,54,4],[84,10,54,8,"isNavigator"],[84,21,54,19],[84,24,54,22],[84,29,54,27],[85,6,55,4],[85,10,55,8],[85,18,55,16],[85,22,55,20,"item"],[85,26,55,24],[85,28,55,26],[86,8,56,6],[86,12,57,8,"screen"],[86,18,57,14],[86,21,60,10,"item"],[86,25,60,14],[86,26,57,8,"screen"],[86,32,57,14],[87,10,58,12,"_if"],[87,13,58,15],[87,16,60,10,"item"],[87,20,60,14],[87,21,58,8,"if"],[87,23,58,10],[88,10,59,11,"rest"],[88,14,59,15],[88,17,59,15,"_objectWithoutProperties"],[88,41,59,15],[88,42,60,10,"item"],[88,46,60,14],[88,48,60,14,"_excluded"],[88,57,60,14],[89,8,61,6,"useIf"],[89,13,61,11],[89,16,61,14,"_if"],[89,19,61,17],[90,8,62,6,"props"],[90,13,62,11],[90,16,62,14,"rest"],[90,20,62,18],[91,8,63,6],[91,12,63,10],[91,13,63,11],[91,14,63,12],[91,16,63,14,"_$$_REQUIRE"],[91,27,63,14],[91,28,63,14,"_dependencyMap"],[91,42,63,14],[91,59,63,23,"isValidElementType"],[91,77,63,41],[91,79,63,43,"screen"],[91,85,63,49],[91,86,63,50],[91,88,63,52],[92,10,64,8,"component"],[92,19,64,17],[92,22,64,20,"screen"],[92,28,64,26],[93,8,65,6],[93,9,65,7],[93,15,65,13],[93,19,65,17],[93,27,65,25],[93,31,65,29,"screen"],[93,37,65,35],[93,39,65,37],[94,10,66,8,"isNavigator"],[94,21,66,19],[94,24,66,22],[94,28,66,26],[95,10,67,8,"component"],[95,19,67,17],[95,22,67,20,"createComponentForStaticNavigation"],[95,56,67,54],[95,57,67,55,"screen"],[95,63,67,61],[95,65,67,63],[95,68,67,66,"name"],[95,72,67,70],[95,83,67,81],[95,84,67,82],[96,8,68,6],[97,6,69,4],[97,7,69,5],[97,13,69,11],[97,17,69,15],[97,18,69,16],[97,19,69,17],[97,21,69,19,"_$$_REQUIRE"],[97,32,69,19],[97,33,69,19,"_dependencyMap"],[97,47,69,19],[97,64,69,28,"isValidElementType"],[97,82,69,46],[97,84,69,48,"item"],[97,88,69,52],[97,89,69,53],[97,91,69,55],[98,8,70,6,"component"],[98,17,70,15],[98,20,70,18,"item"],[98,24,70,22],[99,6,71,4],[99,7,71,5],[99,13,71,11],[99,17,71,15],[99,25,71,23],[99,29,71,27,"item"],[99,33,71,31],[99,35,71,33],[100,8,72,6,"isNavigator"],[100,19,72,17],[100,22,72,20],[100,26,72,24],[101,8,73,6,"component"],[101,17,73,15],[101,20,73,18,"createComponentForStaticNavigation"],[101,54,73,52],[101,55,73,53,"item"],[101,59,73,57],[101,61,73,59],[101,64,73,62,"name"],[101,68,73,66],[101,79,73,77],[101,80,73,78],[102,6,74,4],[103,6,75,4],[103,10,75,8,"component"],[103,19,75,17],[103,23,75,21],[103,27,75,25],[103,29,75,27],[104,8,76,6],[104,14,76,12],[104,18,76,16,"Error"],[104,23,76,21],[104,24,76,22],[104,77,76,75,"name"],[104,81,76,79],[104,262,76,260],[104,263,76,261],[105,6,77,4],[106,6,78,4],[106,10,78,10,"element"],[106,17,78,17],[106,20,78,20,"isNavigator"],[106,31,78,31],[106,35,78,35],[106,48,78,48,"React"],[106,53,78,53],[106,54,78,54,"createElement"],[106,67,78,67],[106,68,78,68,"component"],[106,77,78,77],[106,79,78,79],[106,80,78,80],[106,81,78,81],[106,82,78,82],[106,86,78,86],[106,99,78,99],[106,100,78,100],[106,101,78,101],[106,103,78,103,"_jsxRuntime"],[106,114,78,114],[106,115,78,115,"jsx"],[106,118,78,118],[106,120,78,120,"MemoizedScreen"],[106,134,78,134],[106,136,78,136],[107,8,79,6,"component"],[107,17,79,15],[107,19,79,17,"component"],[108,6,80,4],[108,7,80,5],[108,8,80,6],[109,6,81,4],[109,13,81,11],[109,25,81,17],[110,8,82,6],[110,12,82,12,"shouldRender"],[110,24,82,24],[110,27,82,27,"useIf"],[110,32,82,32],[110,36,82,36],[110,40,82,40],[110,44,82,44,"useIf"],[110,49,82,49],[110,50,82,50],[110,51,82,51],[111,8,83,6],[111,12,83,10],[111,13,83,11,"shouldRender"],[111,25,83,23],[111,27,83,25],[112,10,84,8],[112,17,84,15],[112,21,84,19],[113,8,85,6],[114,8,86,6],[114,15,86,13],[114,28,86,26],[114,29,86,27],[114,30,86,28],[114,32,86,30,"_jsxRuntime"],[114,43,86,41],[114,44,86,42,"jsx"],[114,47,86,45],[114,49,86,47,"Screen"],[114,55,86,53],[114,57,86,53,"Object"],[114,63,86,53],[114,64,86,53,"assign"],[114,70,86,53],[115,10,87,8,"name"],[115,14,87,12],[115,16,87,14,"name"],[116,8,87,18],[116,11,88,11,"props"],[116,16,88,16],[117,10,89,8,"children"],[117,18,89,16],[117,20,89,18],[117,29,89,8,"children"],[117,37,89,16,"children"],[117,38,89,16],[118,12,89,16],[118,19,89,24,"element"],[118,26,89,31],[119,10,89,31],[120,8,89,31],[120,12,90,9,"name"],[120,16,90,13],[120,17,90,14],[121,6,91,4],[121,7,91,5],[122,4,92,2],[122,5,92,3],[122,6,92,4],[123,2,93,0],[123,3,93,1],[125,2,95,0],[126,0,96,0],[127,0,97,0],[128,0,98,0],[129,0,99,0],[130,0,100,0],[131,0,101,0],[132,2,102,0],[132,11,102,9,"createComponentForStaticNavigation"],[132,45,102,43,"createComponentForStaticNavigation"],[132,46,102,44,"tree"],[132,50,102,48],[132,52,102,50,"displayName"],[132,63,102,61],[132,65,102,63],[133,4,103,2],[133,8,104,4,"Navigator"],[133,17,104,13],[133,20,108,6,"tree"],[133,24,108,10],[133,25,104,4,"Navigator"],[133,34,104,13],[134,6,105,4,"Group"],[134,11,105,9],[134,14,108,6,"tree"],[134,18,108,10],[134,19,105,4,"Group"],[134,24,105,9],[135,6,106,4,"Screen"],[135,12,106,10],[135,15,108,6,"tree"],[135,19,108,10],[135,20,106,4,"Screen"],[135,26,106,10],[136,6,107,4,"config"],[136,12,107,10],[136,15,108,6,"tree"],[136,19,108,10],[136,20,107,4,"config"],[136,26,107,10],[137,4,109,2],[137,8,110,4,"screens"],[137,15,110,11],[137,18,113,6,"config"],[137,24,113,12],[137,25,110,4,"screens"],[137,32,110,11],[138,6,111,4,"groups"],[138,12,111,10],[138,15,113,6,"config"],[138,21,113,12],[138,22,111,4,"groups"],[138,28,111,10],[139,6,112,7,"rest"],[139,10,112,11],[139,13,112,11,"_objectWithoutProperties"],[139,37,112,11],[139,38,113,6,"config"],[139,44,113,12],[139,46,113,12,"_excluded2"],[139,56,113,12],[140,4,114,2],[140,8,114,6,"screens"],[140,15,114,13],[140,19,114,17],[140,23,114,21],[140,27,114,25,"groups"],[140,33,114,31],[140,37,114,35],[140,41,114,39],[140,43,114,41],[141,6,115,4],[141,12,115,10],[141,16,115,14,"Error"],[141,21,115,19],[141,22,115,20],[141,153,115,151],[141,154,115,152],[142,4,116,2],[143,4,117,2],[143,8,117,8,"items"],[143,13,117,13],[143,16,117,16],[143,18,117,18],[145,4,119,2],[146,4,120,2],[147,4,121,2],[147,9,121,7],[147,13,121,13,"key"],[147,16,121,16],[147,20,121,20,"config"],[147,26,121,26],[147,28,121,28],[148,6,122,4],[148,10,122,8,"key"],[148,13,122,11],[148,18,122,16],[148,27,122,25],[148,31,122,29,"screens"],[148,38,122,36],[148,40,122,38],[149,8,123,6,"items"],[149,13,123,11],[149,14,123,12,"push"],[149,18,123,16],[149,19,123,16,"apply"],[149,24,123,16],[149,25,123,6,"items"],[149,30,123,11],[149,32,123,11,"_toConsumableArray"],[149,50,123,11],[149,51,123,20,"getItemsFromScreens"],[149,70,123,39],[149,71,123,40,"Screen"],[149,77,123,46],[149,79,123,48,"screens"],[149,86,123,55],[149,87,123,56],[149,89,123,57],[150,6,124,4],[151,6,125,4],[151,10,125,8,"key"],[151,13,125,11],[151,18,125,16],[151,26,125,24],[151,30,125,28,"groups"],[151,36,125,34],[151,38,125,36],[152,8,126,6,"items"],[152,13,126,11],[152,14,126,12,"push"],[152,18,126,16],[152,19,126,16,"apply"],[152,24,126,16],[152,25,126,6,"items"],[152,30,126,11],[152,32,126,11,"_toConsumableArray"],[152,50,126,11],[152,51,126,20,"Object"],[152,57,126,26],[152,58,126,27,"entries"],[152,65,126,34],[152,66,126,35,"groups"],[152,72,126,41],[152,73,126,42],[152,74,126,43,"map"],[152,77,126,46],[152,78,126,47],[152,88,126,47,"_ref4"],[152,93,126,47],[152,95,129,13],[153,10,129,13],[153,14,129,13,"_ref5"],[153,19,129,13],[153,22,129,13,"_slicedToArray"],[153,36,129,13],[153,37,129,13,"_ref4"],[153,42,129,13],[154,12,126,49,"key"],[154,15,126,52],[154,18,126,52,"_ref5"],[154,23,126,52],[155,12,126,52,"_ref5$"],[155,18,126,52],[155,21,126,52,"_ref5"],[155,26,126,52],[156,12,127,12,"useIf"],[156,17,127,17],[156,20,127,17,"_ref5$"],[156,26,127,17],[156,27,127,8,"if"],[156,29,127,10],[157,12,128,11,"group"],[157,17,128,16],[157,20,128,16,"_objectWithoutProperties"],[157,44,128,16],[157,45,128,16,"_ref5$"],[157,51,128,16],[157,53,128,16,"_excluded3"],[157,63,128,16],[158,10,130,8],[158,14,130,14,"groupItems"],[158,24,130,24],[158,27,130,27,"getItemsFromScreens"],[158,46,130,46],[158,47,130,47,"Screen"],[158,53,130,53],[158,55,130,55,"group"],[158,60,130,60],[158,61,130,61,"screens"],[158,68,130,68],[158,69,130,69],[159,10,131,8],[159,17,131,15],[159,29,131,21],[160,12,132,10],[161,12,133,10],[161,16,133,16,"children"],[161,24,133,24],[161,27,133,27,"groupItems"],[161,37,133,37],[161,38,133,38,"map"],[161,41,133,41],[161,42,133,42],[161,52,133,42,"item"],[161,56,133,46],[162,14,133,46],[162,21,133,50,"item"],[162,25,133,54],[162,26,133,55],[162,27,133,56],[163,12,133,56],[163,14,133,57],[164,12,134,10],[164,16,134,16,"shouldRender"],[164,28,134,28],[164,31,134,31,"useIf"],[164,36,134,36],[164,40,134,40],[164,44,134,44],[164,48,134,48,"useIf"],[164,53,134,53],[164,54,134,54],[164,55,134,55],[165,12,135,10],[165,16,135,14],[165,17,135,15,"shouldRender"],[165,29,135,27],[165,31,135,29],[166,14,136,12],[166,21,136,19],[166,25,136,23],[167,12,137,10],[168,12,138,10],[168,19,138,17],[168,32,138,30],[168,33,138,31],[168,34,138,32],[168,36,138,34,"_react"],[168,42,138,40],[168,43,138,41,"createElement"],[168,56,138,54],[168,58,138,56,"Group"],[168,63,138,61],[168,65,138,61,"Object"],[168,71,138,61],[168,72,138,61,"assign"],[168,78,138,61],[169,14,139,12,"navigationKey"],[169,27,139,25],[169,29,139,27,"key"],[170,12,139,30],[170,15,140,15,"group"],[170,20,140,20],[171,14,141,12,"key"],[171,17,141,15],[171,19,141,17,"key"],[172,12,141,20],[172,16,142,13,"children"],[172,24,142,21],[172,25,142,22],[173,10,143,8],[173,11,143,9],[174,8,144,6],[174,9,144,7],[174,10,144,8],[174,12,144,9],[175,6,145,4],[176,4,146,2],[177,4,147,2],[177,8,147,8,"NavigatorComponent"],[177,26,147,26],[177,29,147,29],[177,38,147,8,"NavigatorComponent"],[177,56,147,26,"NavigatorComponent"],[177,57,147,26],[177,59,147,35],[178,6,148,4],[178,10,148,10,"children"],[178,18,148,18],[178,21,148,21,"items"],[178,26,148,26],[178,27,148,27,"map"],[178,30,148,30],[178,31,148,31],[178,41,148,31,"item"],[178,45,148,35],[179,8,148,35],[179,15,148,39,"item"],[179,19,148,43],[179,20,148,44],[179,21,148,45],[180,6,148,45],[180,8,148,46],[181,6,149,4],[181,13,149,11],[181,26,149,24],[181,27,149,25],[181,28,149,26],[181,30,149,28,"_jsxRuntime"],[181,41,149,39],[181,42,149,40,"jsx"],[181,45,149,43],[181,47,149,45,"Navigator"],[181,56,149,54],[181,58,149,54,"Object"],[181,64,149,54],[181,65,149,54,"assign"],[181,71,149,54],[181,76,150,9,"rest"],[181,80,150,13],[182,8,151,6,"children"],[182,16,151,14],[182,18,151,16,"children"],[183,6,151,24],[183,8,152,5],[183,9,152,6],[184,4,153,2],[184,5,153,3],[185,4,154,2,"NavigatorComponent"],[185,22,154,20],[185,23,154,21,"displayName"],[185,34,154,32],[185,37,154,35,"displayName"],[185,48,154,46],[186,4,155,2],[186,11,155,9,"NavigatorComponent"],[186,29,155,27],[187,2,156,0],[188,2,157,0],[189,0,158,0],[190,0,159,0],[191,0,160,0],[192,0,161,0],[193,0,162,0],[194,0,163,0],[195,0,164,0],[196,0,165,0],[197,0,166,0],[198,0,167,0],[199,0,168,0],[200,0,169,0],[201,0,170,0],[202,0,171,0],[203,0,172,0],[204,0,173,0],[205,0,174,0],[206,0,175,0],[207,2,176,0],[207,11,176,9,"createPathConfigForStaticNavigation"],[207,46,176,44,"createPathConfigForStaticNavigation"],[207,47,176,45,"tree"],[207,51,176,49],[207,53,176,51,"options"],[207,60,176,58],[207,62,176,60,"auto"],[207,66,176,64],[207,68,176,66],[208,4,177,2],[208,8,177,6,"initialScreenConfig"],[208,27,177,25],[209,4,178,2],[209,8,178,8,"createPathConfigForTree"],[209,32,178,31],[209,35,178,34],[209,44,178,8,"createPathConfigForTree"],[209,67,178,31,"createPathConfigForTree"],[209,68,178,35,"t"],[209,69,178,36],[209,71,178,38,"o"],[209,72,178,39],[209,74,178,41,"skipInitialDetection"],[209,94,178,61],[209,96,178,66],[210,6,179,4],[210,10,179,10,"createPathConfigForScreens"],[210,36,179,36],[210,39,179,39],[210,48,179,10,"createPathConfigForScreens"],[210,74,179,36,"createPathConfigForScreens"],[210,75,179,40,"screens"],[210,82,179,47],[210,84,179,49,"initialRouteName"],[210,100,179,65],[210,102,179,70],[211,8,180,6],[211,15,180,13,"Object"],[211,21,180,19],[211,22,180,20,"fromEntries"],[211,33,180,31],[211,34,180,32,"Object"],[211,40,180,38],[211,41,180,39,"entries"],[211,48,180,46],[211,49,180,47,"screens"],[211,56,180,54],[212,8,181,6],[213,8,182,6],[214,8,182,6],[214,9,183,7,"sort"],[214,13,183,11],[214,14,183,12],[214,24,183,12,"_ref6"],[214,29,183,12],[214,31,183,12,"_ref7"],[214,36,183,12],[214,38,183,26],[215,10,183,26],[215,14,183,26,"_ref8"],[215,19,183,26],[215,22,183,26,"_slicedToArray"],[215,36,183,26],[215,37,183,26,"_ref6"],[215,42,183,26],[216,12,183,14,"a"],[216,13,183,15],[216,16,183,15,"_ref8"],[216,21,183,15],[217,10,183,15],[217,14,183,15,"_ref9"],[217,19,183,15],[217,22,183,15,"_slicedToArray"],[217,36,183,15],[217,37,183,15,"_ref7"],[217,42,183,15],[218,12,183,19,"b"],[218,13,183,20],[218,16,183,20,"_ref9"],[218,21,183,20],[219,10,184,8],[219,14,184,12,"a"],[219,15,184,13],[219,20,184,18,"initialRouteName"],[219,36,184,34],[219,38,184,36],[220,12,185,10],[220,19,185,17],[220,20,185,18],[220,21,185,19],[221,10,186,8],[222,10,187,8],[222,14,187,12,"b"],[222,15,187,13],[222,20,187,18,"initialRouteName"],[222,36,187,34],[222,38,187,36],[223,12,188,10],[223,19,188,17],[223,20,188,18],[224,10,189,8],[225,10,190,8],[225,17,190,15],[225,18,190,16],[226,8,191,6],[226,9,191,7],[226,10,191,8],[226,11,191,9,"map"],[226,14,191,12],[226,15,191,13],[226,25,191,13,"_ref10"],[226,31,191,13],[226,33,191,30],[227,10,191,30],[227,14,191,30,"_ref11"],[227,20,191,30],[227,23,191,30,"_slicedToArray"],[227,37,191,30],[227,38,191,30,"_ref10"],[227,44,191,30],[228,12,191,15,"key"],[228,15,191,18],[228,18,191,18,"_ref11"],[228,24,191,18],[229,12,191,20,"item"],[229,16,191,24],[229,19,191,24,"_ref11"],[229,25,191,24],[230,10,192,8],[230,14,192,14,"screenConfig"],[230,26,192,26],[230,29,192,29],[230,30,192,30],[230,31,192,31],[231,10,193,8],[231,14,193,12],[231,23,193,21],[231,27,193,25,"item"],[231,31,193,29],[231,33,193,31],[232,12,194,10],[232,16,194,14],[232,23,194,21,"item"],[232,27,194,25],[232,28,194,26,"linking"],[232,35,194,33],[232,40,194,38],[232,48,194,46],[232,50,194,48],[233,14,195,12,"screenConfig"],[233,26,195,24],[233,27,195,25,"path"],[233,31,195,29],[233,34,195,32,"item"],[233,38,195,36],[233,39,195,37,"linking"],[233,46,195,44],[234,12,196,10],[234,13,196,11],[234,19,196,17],[235,14,197,12,"Object"],[235,20,197,18],[235,21,197,19,"assign"],[235,27,197,25],[235,28,197,26,"screenConfig"],[235,40,197,38],[235,42,197,40,"item"],[235,46,197,44],[235,47,197,45,"linking"],[235,54,197,52],[235,55,197,53],[236,12,198,10],[237,12,199,10],[237,16,199,14],[237,23,199,21,"screenConfig"],[237,35,199,33],[237,36,199,34,"path"],[237,40,199,38],[237,45,199,43],[237,53,199,51],[237,55,199,53],[238,14,200,12,"screenConfig"],[238,26,200,24],[238,27,200,25,"path"],[238,31,200,29],[238,34,200,32,"screenConfig"],[238,46,200,44],[238,47,200,45,"path"],[238,51,200,49],[238,52,200,50,"replace"],[238,59,200,57],[238,60,200,58],[238,65,200,63],[238,67,200,65],[238,69,200,67],[238,70,200,68],[238,71,200,69],[239,14,200,69],[239,15,201,13,"replace"],[239,22,201,20],[239,23,201,21],[239,28,201,26],[239,30,201,28],[239,32,201,30],[239,33,201,31],[239,34,201,32],[239,35,201,33],[240,12,202,10],[241,10,203,8],[242,10,204,8],[242,14,204,12,"screens"],[242,21,204,19],[243,10,205,8],[243,14,205,14,"skipInitialDetectionInChild"],[243,41,205,41],[243,44,205,44,"skipInitialDetection"],[243,64,205,64],[243,68,205,68,"screenConfig"],[243,80,205,80],[243,81,205,81,"path"],[243,85,205,85],[243,89,205,89],[243,93,205,93],[243,97,205,97,"screenConfig"],[243,109,205,109],[243,110,205,110,"path"],[243,114,205,114],[243,119,205,119],[243,121,205,121],[244,10,206,8],[244,14,206,12],[244,22,206,20],[244,26,206,24,"item"],[244,30,206,28],[244,32,206,30],[245,12,207,10,"screens"],[245,19,207,17],[245,22,207,20,"createPathConfigForTree"],[245,46,207,43],[245,47,207,44,"item"],[245,51,207,48],[245,53,207,50,"undefined"],[245,62,207,59],[245,64,207,61,"skipInitialDetectionInChild"],[245,91,207,88],[245,92,207,89],[246,10,208,8],[246,11,208,9],[246,17,208,15],[246,21,208,19],[246,29,208,27],[246,33,208,31,"item"],[246,37,208,35],[246,41,208,39],[246,49,208,47],[246,53,208,51,"item"],[246,57,208,55],[246,58,208,56,"screen"],[246,64,208,62],[246,69,208,67,"item"],[246,73,208,71],[246,74,208,72,"screen"],[246,80,208,78],[246,81,208,79,"config"],[246,87,208,85],[246,88,208,86,"screens"],[246,95,208,93],[246,99,208,97,"item"],[246,103,208,101],[246,104,208,102,"screen"],[246,110,208,108],[246,111,208,109,"config"],[246,117,208,115],[246,118,208,116,"groups"],[246,124,208,122],[246,125,208,123],[246,127,208,125],[247,12,209,10,"screens"],[247,19,209,17],[247,22,209,20,"createPathConfigForTree"],[247,46,209,43],[247,47,209,44,"item"],[247,51,209,48],[247,52,209,49,"screen"],[247,58,209,55],[247,60,209,57,"undefined"],[247,69,209,66],[247,71,209,68,"skipInitialDetectionInChild"],[247,98,209,95],[247,99,209,96],[248,10,210,8],[249,10,211,8],[249,14,211,12,"screens"],[249,21,211,19],[249,23,211,21],[250,12,212,10,"screenConfig"],[250,24,212,22],[250,25,212,23,"screens"],[250,32,212,30],[250,35,212,33,"screens"],[250,42,212,40],[251,10,213,8],[252,10,214,8],[252,14,214,12,"auto"],[252,18,214,16],[252,22,214,20],[252,23,214,21,"screenConfig"],[252,35,214,33],[252,36,214,34,"screens"],[252,43,214,41],[253,10,215,8],[254,10,216,8],[254,12,216,10],[254,21,216,19],[254,25,216,23,"item"],[254,29,216,27],[254,33,216,31,"item"],[254,37,216,35],[254,38,216,36,"linking"],[254,45,216,43],[254,49,216,47],[254,53,216,51],[254,54,216,52],[254,56,216,54],[255,12,217,10],[255,16,217,14,"screenConfig"],[255,28,217,26],[255,29,217,27,"path"],[255,33,217,31],[255,37,217,35],[255,41,217,39],[255,43,217,41],[256,14,218,12],[256,18,218,16],[256,19,218,17,"skipInitialDetection"],[256,39,218,37],[256,43,218,41,"screenConfig"],[256,55,218,53],[256,56,218,54,"path"],[256,60,218,58],[256,65,218,63],[256,67,218,65],[256,69,218,67],[257,16,219,14],[258,16,220,14],[259,16,221,14,"initialScreenConfig"],[259,35,221,33],[259,38,221,36,"undefined"],[259,47,221,45],[260,14,222,12],[261,12,223,10],[261,13,223,11],[261,19,223,17],[262,14,224,12],[262,18,224,16],[262,19,224,17,"skipInitialDetection"],[262,39,224,37],[262,43,224,41,"initialScreenConfig"],[262,62,224,60],[262,66,224,64],[262,70,224,68],[262,72,224,70],[263,16,225,14,"initialScreenConfig"],[263,35,225,33],[263,38,225,36,"screenConfig"],[263,50,225,48],[264,14,226,12],[265,14,227,12,"screenConfig"],[265,26,227,24],[265,27,227,25,"path"],[265,31,227,29],[265,34,227,32,"key"],[265,37,227,35],[265,38,227,36,"replace"],[265,45,227,43],[265,46,227,44],[265,57,227,55],[265,59,227,57],[265,64,227,62],[265,65,227,63],[265,66,227,64,"replace"],[265,73,227,71],[265,74,227,72],[265,78,227,76],[265,80,227,78],[265,82,227,80],[265,83,227,81],[265,84,227,82,"toLowerCase"],[265,95,227,93],[265,96,227,94],[265,97,227,95],[266,12,228,10],[267,10,229,8],[268,10,230,8],[268,17,230,15],[268,18,230,16,"key"],[268,21,230,19],[268,23,230,21,"screenConfig"],[268,35,230,33],[268,36,230,34],[269,8,231,6],[269,9,231,7],[269,10,231,8],[269,11,231,9,"filter"],[269,17,231,15],[269,18,231,16],[269,28,231,16,"_ref12"],[269,34,231,16],[270,10,231,16],[270,14,231,16,"_ref13"],[270,20,231,16],[270,23,231,16,"_slicedToArray"],[270,37,231,16],[270,38,231,16,"_ref12"],[270,44,231,16],[271,12,231,20,"screen"],[271,18,231,26],[271,21,231,26,"_ref13"],[271,27,231,26],[272,10,231,26],[272,17,231,32,"Object"],[272,23,231,38],[272,24,231,39,"keys"],[272,28,231,43],[272,29,231,44,"screen"],[272,35,231,50],[272,36,231,51],[272,37,231,52,"length"],[272,43,231,58],[272,46,231,61],[272,47,231,62],[273,8,231,62],[273,10,231,63],[273,11,231,64],[274,6,232,4],[274,7,232,5],[275,6,233,4],[275,10,233,10,"screens"],[275,17,233,17],[275,20,233,20],[275,21,233,21],[275,22,233,22],[277,6,235,4],[278,6,236,4],[279,6,237,4],[279,11,237,9],[279,15,237,15,"key"],[279,18,237,18],[279,22,237,22,"t"],[279,23,237,23],[279,24,237,24,"config"],[279,30,237,30],[279,32,237,32],[280,8,238,6],[280,12,238,10,"key"],[280,15,238,13],[280,20,238,18],[280,29,238,27],[280,33,238,31,"t"],[280,34,238,32],[280,35,238,33,"config"],[280,41,238,39],[280,42,238,40,"screens"],[280,49,238,47],[280,51,238,49],[281,10,238,49],[281,14,238,49,"_o$initialRouteName"],[281,33,238,49],[282,10,239,8,"Object"],[282,16,239,14],[282,17,239,15,"assign"],[282,23,239,21],[282,24,239,22,"screens"],[282,31,239,29],[282,33,239,31,"createPathConfigForScreens"],[282,59,239,57],[282,60,239,58,"t"],[282,61,239,59],[282,62,239,60,"config"],[282,68,239,66],[282,69,239,67,"screens"],[282,76,239,74],[282,79,239,74,"_o$initialRouteName"],[282,98,239,74],[282,101,239,76,"o"],[282,102,239,77],[282,122,239,76,"o"],[282,123,239,77],[282,124,239,79,"initialRouteName"],[282,140,239,95],[282,152,239,95,"_o$initialRouteName"],[282,171,239,95],[282,174,239,99,"t"],[282,175,239,100],[282,176,239,101,"config"],[282,182,239,107],[282,183,239,108,"initialRouteName"],[282,199,239,124],[282,200,239,125],[282,201,239,126],[283,8,240,6],[284,8,241,6],[284,12,241,10,"key"],[284,15,241,13],[284,20,241,18],[284,28,241,26],[284,32,241,30,"t"],[284,33,241,31],[284,34,241,32,"config"],[284,40,241,38],[284,41,241,39,"groups"],[284,47,241,45],[284,49,241,47],[285,10,242,8,"Object"],[285,16,242,14],[285,17,242,15,"entries"],[285,24,242,22],[285,25,242,23,"t"],[285,26,242,24],[285,27,242,25,"config"],[285,33,242,31],[285,34,242,32,"groups"],[285,40,242,38],[285,41,242,39],[285,42,242,40,"forEach"],[285,49,242,47],[285,50,242,48],[285,60,242,48,"_ref14"],[285,66,242,48],[285,68,242,63],[286,12,242,63],[286,16,242,63,"_o$initialRouteName2"],[286,36,242,63],[287,12,242,63],[287,16,242,63,"_ref15"],[287,22,242,63],[287,25,242,63,"_slicedToArray"],[287,39,242,63],[287,40,242,63,"_ref14"],[287,46,242,63],[288,14,242,52,"group"],[288,19,242,57],[288,22,242,57,"_ref15"],[288,28,242,57],[289,12,243,10,"Object"],[289,18,243,16],[289,19,243,17,"assign"],[289,25,243,23],[289,26,243,24,"screens"],[289,33,243,31],[289,35,243,33,"createPathConfigForScreens"],[289,61,243,59],[289,62,243,60,"group"],[289,67,243,65],[289,68,243,66,"screens"],[289,75,243,73],[289,78,243,73,"_o$initialRouteName2"],[289,98,243,73],[289,101,243,75,"o"],[289,102,243,76],[289,122,243,75,"o"],[289,123,243,76],[289,124,243,78,"initialRouteName"],[289,140,243,94],[289,152,243,94,"_o$initialRouteName2"],[289,172,243,94],[289,175,243,98,"t"],[289,176,243,99],[289,177,243,100,"config"],[289,183,243,106],[289,184,243,107,"initialRouteName"],[289,200,243,123],[289,201,243,124],[289,202,243,125],[290,10,244,8],[290,11,244,9],[290,12,244,10],[291,8,245,6],[292,6,246,4],[293,6,247,4],[293,10,247,8,"Object"],[293,16,247,14],[293,17,247,15,"keys"],[293,21,247,19],[293,22,247,20,"screens"],[293,29,247,27],[293,30,247,28],[293,31,247,29,"length"],[293,37,247,35],[293,42,247,40],[293,43,247,41],[293,45,247,43],[294,8,248,6],[294,15,248,13,"undefined"],[294,24,248,22],[295,6,249,4],[296,6,250,4],[296,13,250,11,"screens"],[296,20,250,18],[297,4,251,2],[297,5,251,3],[298,4,252,2],[298,8,252,8,"screens"],[298,15,252,15],[298,18,252,18,"createPathConfigForTree"],[298,42,252,41],[298,43,252,42,"tree"],[298,47,252,46],[298,49,252,48,"options"],[298,56,252,55],[298,58,252,57],[298,63,252,62],[298,64,252,63],[299,4,253,2],[299,8,253,6,"auto"],[299,12,253,10],[299,16,253,14,"initialScreenConfig"],[299,35,253,33],[299,37,253,35],[300,6,254,4,"initialScreenConfig"],[300,25,254,23],[300,26,254,24,"path"],[300,30,254,28],[300,33,254,31],[300,35,254,33],[301,4,255,2],[302,4,256,2],[302,11,256,9,"screens"],[302,18,256,16],[303,2,257,0],[304,0,257,1],[304,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;ACY,4MD;AEC,mkBF;+CGyB;CHQ;4BIE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CJC;AQS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CRG;AYoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CZM"}},"type":"js/module"}]}