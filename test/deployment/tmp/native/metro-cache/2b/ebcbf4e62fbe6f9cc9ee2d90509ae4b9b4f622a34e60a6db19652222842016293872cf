{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":786,"column":0,"index":25561}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}},{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}},{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE="}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0="}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n  var React = _react;\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"invariant\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[8], \"react-native\");\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[9], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = exports.default = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _callSuper(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = React.createRef();\n      _this.pointerEventsView = React.createRef();\n      _this.panGestureHandler = React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = function (props, state) {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = function (ev) {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide == null || _this.props.onDrawerSlide(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged == null || _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[10], \"../State\").State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent: nativeEvent\n          });\n        } else if (nativeEvent.state === _$$_REQUIRE(_dependencyMap[10], \"../State\").State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[10], \"../State\").State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = function (showing) {\n        var _this$accessibilityIs, _this$pointerEventsVi, _this$panGestureHandl;\n        _this.drawerShown = showing;\n        (_this$accessibilityIs = _this.accessibilityIsModalView.current) == null || _this$accessibilityIs.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        (_this$pointerEventsVi = _this.pointerEventsView.current) == null || _this$pointerEventsVi.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        (_this$panGestureHandl = _this.panGestureHandler.current) == null || _this$panGestureHandl.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = function (fromValue, toValue, velocity, speed) {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed != null ? speed : undefined\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen == null || _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose == null || _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = function () {\n        /* Overlay styles */\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[11], \"../handlers/TapGestureHandler\").TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          })\n        });\n      };\n      _this.renderDrawer = function () {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            })\n          })]\n        });\n      };\n      _this.setPanGestureRef = function (ref) {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef == null || _this.props.onGestureRef(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    return (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[12], \"../handlers/PanGestureHandler\").PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        });\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","lineCount":536,"map":[[12,2,9,0],[12,6,9,0,"_react"],[12,12,9,0],[12,15,9,0,"_interopRequireWildcard"],[12,38,9,0],[12,39,9,0,"_$$_REQUIRE"],[12,50,9,0],[12,51,9,0,"_dependencyMap"],[12,65,9,0],[13,2,9,31],[13,6,9,31,"React"],[13,11,9,31],[13,14,9,31,"_react"],[13,20,9,31],[14,2,11,0],[14,6,11,0,"_invariant"],[14,16,11,0],[14,19,11,0,"_interopRequireDefault"],[14,41,11,0],[14,42,11,0,"_$$_REQUIRE"],[14,53,11,0],[14,54,11,0,"_dependencyMap"],[14,68,11,0],[15,2,12,0],[15,6,12,0,"_reactNative"],[15,18,12,0],[15,21,12,0,"_$$_REQUIRE"],[15,32,12,0],[15,33,12,0,"_dependencyMap"],[15,47,12,0],[16,2,24,22],[16,6,24,22,"_jsxRuntime"],[16,17,24,22],[16,20,24,22,"_$$_REQUIRE"],[16,31,24,22],[16,32,24,22,"_dependencyMap"],[16,46,24,22],[17,2,24,22],[17,11,24,22,"_getRequireWildcardCache"],[17,36,24,22,"e"],[17,37,24,22],[17,66,24,22,"WeakMap"],[17,73,24,22],[17,92,24,22,"r"],[17,93,24,22],[17,100,24,22,"WeakMap"],[17,107,24,22],[17,111,24,22,"t"],[17,112,24,22],[17,119,24,22,"WeakMap"],[17,126,24,22],[17,138,24,22,"_getRequireWildcardCache"],[17,162,24,22],[17,174,24,22,"_getRequireWildcardCache"],[17,199,24,22,"e"],[17,200,24,22],[17,211,24,22,"e"],[17,212,24,22],[17,215,24,22,"t"],[17,216,24,22],[17,219,24,22,"r"],[17,220,24,22],[17,225,24,22,"e"],[17,226,24,22],[18,2,24,22],[18,11,24,22,"_interopRequireWildcard"],[18,35,24,22,"e"],[18,36,24,22],[18,38,24,22,"r"],[18,39,24,22],[18,48,24,22,"r"],[18,49,24,22],[18,53,24,22,"e"],[18,54,24,22],[18,58,24,22,"e"],[18,59,24,22],[18,60,24,22,"__esModule"],[18,70,24,22],[18,79,24,22,"e"],[18,80,24,22],[18,95,24,22,"e"],[18,96,24,22],[18,119,24,22,"e"],[18,120,24,22],[18,145,24,22,"e"],[18,146,24,22],[18,157,24,22,"default"],[18,164,24,22],[18,166,24,22,"e"],[18,167,24,22],[18,175,24,22,"t"],[18,176,24,22],[18,179,24,22,"_getRequireWildcardCache"],[18,203,24,22],[18,204,24,22,"r"],[18,205,24,22],[18,212,24,22,"t"],[18,213,24,22],[18,217,24,22,"t"],[18,218,24,22],[18,219,24,22,"has"],[18,222,24,22],[18,223,24,22,"e"],[18,224,24,22],[18,234,24,22,"t"],[18,235,24,22],[18,236,24,22,"get"],[18,239,24,22],[18,240,24,22,"e"],[18,241,24,22],[18,248,24,22,"n"],[18,249,24,22],[18,254,24,22,"__proto__"],[18,263,24,22],[18,273,24,22,"a"],[18,274,24,22],[18,277,24,22,"Object"],[18,283,24,22],[18,284,24,22,"defineProperty"],[18,298,24,22],[18,302,24,22,"Object"],[18,308,24,22],[18,309,24,22,"getOwnPropertyDescriptor"],[18,333,24,22],[18,344,24,22,"u"],[18,345,24,22],[18,349,24,22,"e"],[18,350,24,22],[18,370,24,22,"u"],[18,371,24,22],[18,378,24,22,"hasOwnProperty"],[18,392,24,22],[18,393,24,22,"call"],[18,397,24,22],[18,398,24,22,"e"],[18,399,24,22],[18,401,24,22,"u"],[18,402,24,22],[18,411,24,22,"i"],[18,412,24,22],[18,415,24,22,"a"],[18,416,24,22],[18,419,24,22,"Object"],[18,425,24,22],[18,426,24,22,"getOwnPropertyDescriptor"],[18,450,24,22],[18,451,24,22,"e"],[18,452,24,22],[18,454,24,22,"u"],[18,455,24,22],[18,465,24,22,"i"],[18,466,24,22],[18,471,24,22,"i"],[18,472,24,22],[18,473,24,22,"get"],[18,476,24,22],[18,480,24,22,"i"],[18,481,24,22],[18,482,24,22,"set"],[18,485,24,22],[18,489,24,22,"Object"],[18,495,24,22],[18,496,24,22,"defineProperty"],[18,510,24,22],[18,511,24,22,"n"],[18,512,24,22],[18,514,24,22,"u"],[18,515,24,22],[18,517,24,22,"i"],[18,518,24,22],[18,522,24,22,"n"],[18,523,24,22],[18,524,24,22,"u"],[18,525,24,22],[18,529,24,22,"e"],[18,530,24,22],[18,531,24,22,"u"],[18,532,24,22],[18,544,24,22,"n"],[18,545,24,22],[18,546,24,22,"default"],[18,553,24,22],[18,556,24,22,"e"],[18,557,24,22],[18,559,24,22,"t"],[18,560,24,22],[18,564,24,22,"t"],[18,565,24,22],[18,566,24,22,"set"],[18,569,24,22],[18,570,24,22,"e"],[18,571,24,22],[18,573,24,22,"n"],[18,574,24,22],[18,577,24,22,"n"],[18,578,24,22],[19,2,24,22],[19,11,24,22,"_callSuper"],[19,22,24,22,"t"],[19,23,24,22],[19,25,24,22,"o"],[19,26,24,22],[19,28,24,22,"e"],[19,29,24,22],[19,40,24,22,"o"],[19,41,24,22],[19,48,24,22,"_getPrototypeOf2"],[19,64,24,22],[19,65,24,22,"default"],[19,72,24,22],[19,74,24,22,"o"],[19,75,24,22],[19,82,24,22,"_possibleConstructorReturn2"],[19,109,24,22],[19,110,24,22,"default"],[19,117,24,22],[19,119,24,22,"t"],[19,120,24,22],[19,122,24,22,"_isNativeReflectConstruct"],[19,147,24,22],[19,152,24,22,"Reflect"],[19,159,24,22],[19,160,24,22,"construct"],[19,169,24,22],[19,170,24,22,"o"],[19,171,24,22],[19,173,24,22,"e"],[19,174,24,22],[19,186,24,22,"_getPrototypeOf2"],[19,202,24,22],[19,203,24,22,"default"],[19,210,24,22],[19,212,24,22,"t"],[19,213,24,22],[19,215,24,22,"constructor"],[19,226,24,22],[19,230,24,22,"o"],[19,231,24,22],[19,232,24,22,"apply"],[19,237,24,22],[19,238,24,22,"t"],[19,239,24,22],[19,241,24,22,"e"],[19,242,24,22],[20,2,24,22],[20,11,24,22,"_isNativeReflectConstruct"],[20,37,24,22],[20,51,24,22,"t"],[20,52,24,22],[20,56,24,22,"Boolean"],[20,63,24,22],[20,64,24,22,"prototype"],[20,73,24,22],[20,74,24,22,"valueOf"],[20,81,24,22],[20,82,24,22,"call"],[20,86,24,22],[20,87,24,22,"Reflect"],[20,94,24,22],[20,95,24,22,"construct"],[20,104,24,22],[20,105,24,22,"Boolean"],[20,112,24,22],[20,145,24,22,"t"],[20,146,24,22],[20,159,24,22,"_isNativeReflectConstruct"],[20,184,24,22],[20,196,24,22,"_isNativeReflectConstruct"],[20,222,24,22],[20,235,24,22,"t"],[20,236,24,22],[20,246,1,0],[21,2,2,0],[22,2,3,0],[23,2,4,0],[24,2,5,0],[25,2,6,0],[26,2,7,0],[27,2,41,0],[27,6,41,6,"DRAG_TOSS"],[27,15,41,15],[27,18,41,18],[27,22,41,22],[28,2,43,0],[28,6,43,6,"IDLE"],[28,10,43,23],[28,13,43,26],[28,19,43,32],[29,2,44,0],[29,6,44,6,"DRAGGING"],[29,14,44,27],[29,17,44,30],[29,27,44,40],[30,2,45,0],[30,6,45,6,"SETTLING"],[30,14,45,27],[30,17,45,30],[30,27,45,40],[32,2,47,0],[33,0,48,0],[34,0,49,0],[36,2,52,0],[37,0,53,0],[38,0,54,0],[40,2,57,0],[41,0,58,0],[42,0,59,0],[44,2,62,0],[45,0,63,0],[46,0,64,0],[48,2,67,0],[49,0,68,0],[50,0,69,0],[52,2,72,0],[53,2,73,0],[54,2,74,0],[56,2,77,0],[57,0,78,0],[58,0,79,0],[60,2,208,0],[61,0,209,0],[62,0,210,0],[64,2,220,0],[65,0,221,0],[66,0,222,0],[67,2,228,0],[68,0,229,0],[69,0,230,0],[70,2,228,0],[70,6,231,21,"DrawerLayout"],[70,18,231,33],[70,21,231,33,"exports"],[70,28,231,33],[70,29,231,33,"default"],[70,36,231,33],[70,62,231,33,"_Component"],[70,72,231,33],[71,4,247,2],[71,13,247,2,"DrawerLayout"],[71,26,247,14,"props"],[71,32,247,38],[71,34,247,40],[72,6,247,40],[72,10,247,40,"_this"],[72,15,247,40],[73,6,247,40],[73,10,247,40,"_classCallCheck2"],[73,26,247,40],[73,27,247,40,"default"],[73,34,247,40],[73,42,247,40,"DrawerLayout"],[73,54,247,40],[74,6,248,4,"_this"],[74,11,248,4],[74,14,248,4,"_callSuper"],[74,24,248,4],[74,31,248,4,"DrawerLayout"],[74,43,248,4],[74,46,248,10,"props"],[74,52,248,15],[75,6,248,17,"_this"],[75,11,248,17],[75,12,283,10,"accessibilityIsModalView"],[75,36,283,34],[75,39,283,37,"React"],[75,44,283,42],[75,45,283,43,"createRef"],[75,54,283,52],[75,55,283,59],[75,56,283,60],[76,6,283,60,"_this"],[76,11,283,60],[76,12,284,10,"pointerEventsView"],[76,29,284,27],[76,32,284,30,"React"],[76,37,284,35],[76,38,284,36,"createRef"],[76,47,284,45],[76,48,284,52],[76,49,284,53],[77,6,284,53,"_this"],[77,11,284,53],[77,12,285,10,"panGestureHandler"],[77,29,285,27],[77,32,285,30,"React"],[77,37,285,35],[77,38,285,36,"createRef"],[77,47,285,45],[77,48,285,72],[77,49,285,73],[78,6,285,73,"_this"],[78,11,285,73],[78,12,286,10,"drawerShown"],[78,23,286,21],[78,26,286,24],[78,31,286,29],[79,6,286,29,"_this"],[79,11,286,29],[79,12,293,10,"updateAnimatedEvent"],[79,31,293,29],[79,34,293,32],[79,44,294,4,"props"],[79,49,294,28],[79,51,295,4,"state"],[79,56,295,28],[79,58,296,7],[80,8,297,4],[81,8,298,4],[81,12,298,12,"drawerPosition"],[81,26,298,26],[81,29,298,56,"props"],[81,34,298,61],[81,35,298,12,"drawerPosition"],[81,49,298,26],[82,10,298,28,"drawerWidth"],[82,21,298,39],[82,24,298,56,"props"],[82,29,298,61],[82,30,298,28,"drawerWidth"],[82,41,298,39],[83,10,298,41,"drawerType"],[83,20,298,51],[83,23,298,56,"props"],[83,28,298,61],[83,29,298,41,"drawerType"],[83,39,298,51],[84,8,299,4],[84,12,300,13,"dragXValue"],[84,22,300,23],[84,25,304,8,"state"],[84,30,304,13],[84,31,300,6,"dragX"],[84,36,300,11],[85,10,301,14,"touchXValue"],[85,21,301,25],[85,24,304,8,"state"],[85,29,304,13],[85,30,301,6,"touchX"],[85,36,301,12],[86,10,302,6,"drawerTranslation"],[86,27,302,23],[86,30,304,8,"state"],[86,35,304,13],[86,36,302,6,"drawerTranslation"],[86,53,302,23],[87,10,303,6,"containerWidth"],[87,24,303,20],[87,27,304,8,"state"],[87,32,304,13],[87,33,303,6,"containerWidth"],[87,47,303,20],[88,8,306,4],[88,12,306,8,"dragX"],[88,17,306,13],[88,20,306,16,"dragXValue"],[88,30,306,26],[89,8,307,4],[89,12,307,8,"touchX"],[89,18,307,14],[89,21,307,17,"touchXValue"],[89,32,307,28],[90,8,309,4],[90,12,309,8,"drawerPosition"],[90,26,309,22],[90,31,309,27],[90,37,309,33],[90,39,309,35],[91,10,310,6],[92,10,311,6],[93,10,312,6],[94,10,313,6],[95,10,314,6],[96,10,315,6],[97,10,316,6,"dragX"],[97,15,316,11],[97,18,316,14,"Animated"],[97,39,316,22],[97,40,316,23,"multiply"],[97,48,316,31],[97,49,317,8],[97,53,317,12,"Animated"],[97,74,317,20],[97,75,317,21,"Value"],[97,80,317,26],[97,81,317,27],[97,82,317,28],[97,83,317,29],[97,84,317,30],[97,86,318,8,"dragXValue"],[97,96,319,6],[97,97,319,25],[97,98,319,26],[97,99,319,27],[98,10,320,6,"touchX"],[98,16,320,12],[98,19,320,15,"Animated"],[98,40,320,23],[98,41,320,24,"add"],[98,44,320,27],[98,45,321,8],[98,49,321,12,"Animated"],[98,70,321,20],[98,71,321,21,"Value"],[98,76,321,26],[98,77,321,27,"containerWidth"],[98,91,321,41],[98,92,321,42],[98,94,322,8,"Animated"],[98,115,322,16],[98,116,322,17,"multiply"],[98,124,322,25],[98,125,322,26],[98,129,322,30,"Animated"],[98,150,322,38],[98,151,322,39,"Value"],[98,156,322,44],[98,157,322,45],[98,158,322,46],[98,159,322,47],[98,160,322,48],[98,162,322,50,"touchXValue"],[98,173,322,61],[98,174,323,6],[98,175,323,25],[98,176,323,26],[98,177,323,27],[99,10,324,6,"touchXValue"],[99,21,324,17],[99,22,324,18,"setValue"],[99,30,324,26],[99,31,324,27,"containerWidth"],[99,45,324,41],[99,46,324,42],[100,8,325,4],[100,9,325,5],[100,15,325,11],[101,10,326,6,"touchXValue"],[101,21,326,17],[101,22,326,18,"setValue"],[101,30,326,26],[101,31,326,27],[101,32,326,28],[101,33,326,29],[102,8,327,4],[104,8,329,4],[105,8,330,4],[106,8,331,4],[107,8,332,4],[108,8,333,4],[109,8,334,4],[110,8,335,4],[111,8,336,4],[112,8,337,4],[113,8,338,4],[114,8,339,4],[115,8,340,4],[116,8,341,4],[117,8,342,4],[118,8,343,4],[119,8,344,4],[120,8,345,4],[121,8,346,4],[122,8,347,4],[123,8,348,4],[124,8,349,4],[125,8,350,4],[126,8,351,4],[127,8,352,4],[128,8,353,4],[129,8,354,4],[129,12,354,8,"translationX"],[129,24,354,20],[129,27,354,23,"dragX"],[129,32,354,28],[130,8,355,4],[130,12,355,8,"drawerType"],[130,22,355,18],[130,27,355,23],[130,34,355,30],[130,36,355,32],[131,10,356,6],[131,14,356,12,"startPositionX"],[131,28,356,26],[131,31,356,29,"Animated"],[131,52,356,37],[131,53,356,38,"add"],[131,56,356,41],[131,57,357,8,"touchX"],[131,63,357,14],[131,65,358,8,"Animated"],[131,86,358,16],[131,87,358,17,"multiply"],[131,95,358,25],[131,96,358,26],[131,100,358,30,"Animated"],[131,121,358,38],[131,122,358,39,"Value"],[131,127,358,44],[131,128,358,45],[131,129,358,46],[131,130,358,47],[131,131,358,48],[131,133,358,50,"dragX"],[131,138,358,55],[131,139,359,6],[131,140,359,7],[132,10,361,6],[132,14,361,12,"dragOffsetFromOnStartPosition"],[132,43,361,41],[132,46,361,44,"startPositionX"],[132,60,361,58],[132,61,361,59,"interpolate"],[132,72,361,70],[132,73,361,71],[133,12,362,8,"inputRange"],[133,22,362,18],[133,24,362,20],[133,25,362,21,"drawerWidth"],[133,36,362,32],[133,39,362,36],[133,40,362,37],[133,42,362,39,"drawerWidth"],[133,53,362,50],[133,55,362,53,"drawerWidth"],[133,66,362,64],[133,69,362,68],[133,70,362,69],[133,71,362,70],[134,12,363,8,"outputRange"],[134,23,363,19],[134,25,363,21],[134,26,363,22],[134,27,363,23],[134,29,363,25],[134,30,363,26],[134,32,363,28],[134,33,363,29],[135,10,364,6],[135,11,364,7],[135,12,364,8],[136,10,365,6,"translationX"],[136,22,365,18],[136,25,365,21,"Animated"],[136,46,365,29],[136,47,365,30,"add"],[136,50,365,33],[136,51,366,8,"dragX"],[136,56,366,13],[136,58,367,8,"dragOffsetFromOnStartPosition"],[136,87,368,6],[136,88,368,25],[136,89,368,26],[136,90,368,27],[137,8,369,4],[138,8,371,4,"_this"],[138,13,371,4],[138,14,371,9,"openValue"],[138,23,371,18],[138,26,371,21,"Animated"],[138,47,371,29],[138,48,371,30,"add"],[138,51,371,33],[138,52,371,34,"translationX"],[138,64,371,46],[138,66,371,48,"drawerTranslation"],[138,83,371,65],[138,84,371,66],[138,85,371,67,"interpolate"],[138,96,371,78],[138,97,371,79],[139,10,372,6,"inputRange"],[139,20,372,16],[139,22,372,18],[139,23,372,19],[139,24,372,20],[139,26,372,22,"drawerWidth"],[139,37,372,33],[139,38,372,35],[140,10,373,6,"outputRange"],[140,21,373,17],[140,23,373,19],[140,24,373,20],[140,25,373,21],[140,27,373,23],[140,28,373,24],[140,29,373,25],[141,10,374,6,"extrapolate"],[141,21,374,17],[141,23,374,19],[142,8,375,4],[142,9,375,5],[142,10,375,6],[143,8,377,4],[143,12,377,10,"gestureOptions"],[143,26,383,5],[143,29,383,8],[144,10,384,6,"useNativeDriver"],[144,25,384,21],[144,27,384,23,"props"],[144,32,384,28],[144,33,384,29,"useNativeAnimations"],[145,8,385,4],[145,9,385,5],[146,8,387,4],[146,12,387,8,"_this"],[146,17,387,8],[146,18,387,13,"props"],[146,23,387,18],[146,24,387,19,"onDrawerSlide"],[146,37,387,32],[146,39,387,34],[147,10,388,6,"gestureOptions"],[147,24,388,20],[147,25,388,21,"listener"],[147,33,388,29],[147,36,388,32],[147,46,388,33,"ev"],[147,48,388,35],[147,50,388,40],[148,12,389,8],[148,16,389,14,"translationX"],[148,28,389,26],[148,31,389,29,"Math"],[148,35,389,33],[148,36,389,34,"floor"],[148,41,389,39],[148,42,389,40,"Math"],[148,46,389,44],[148,47,389,45,"abs"],[148,50,389,48],[148,51,389,49,"ev"],[148,53,389,51],[148,54,389,52,"nativeEvent"],[148,65,389,63],[148,66,389,64,"translationX"],[148,78,389,76],[148,79,389,77],[148,80,389,78],[149,12,390,8],[149,16,390,14,"position"],[149,24,390,22],[149,27,390,25,"translationX"],[149,39,390,37],[149,42,390,40,"_this"],[149,47,390,40],[149,48,390,45,"state"],[149,53,390,50],[149,54,390,51,"containerWidth"],[149,68,390,65],[150,12,392,8,"_this"],[150,17,392,8],[150,18,392,13,"props"],[150,23,392,18],[150,24,392,19,"onDrawerSlide"],[150,37,392,32],[150,49,392,8,"_this"],[150,54,392,8],[150,55,392,13,"props"],[150,60,392,18],[150,61,392,19,"onDrawerSlide"],[150,74,392,32],[150,75,392,35,"position"],[150,83,392,43],[150,84,392,44],[151,10,393,6],[151,11,393,7],[152,8,394,4],[153,8,396,4,"_this"],[153,13,396,4],[153,14,396,9,"onGestureEvent"],[153,28,396,23],[153,31,396,26,"Animated"],[153,52,396,34],[153,53,396,35,"event"],[153,58,396,40],[153,59,397,6],[153,60,397,7],[154,10,397,9,"nativeEvent"],[154,21,397,20],[154,23,397,22],[155,12,397,24,"translationX"],[155,24,397,36],[155,26,397,38,"dragXValue"],[155,36,397,48],[156,12,397,50,"x"],[156,13,397,51],[156,15,397,53,"touchXValue"],[157,10,397,65],[158,8,397,67],[158,9,397,68],[158,10,397,69],[158,12,398,6,"gestureOptions"],[158,26,399,4],[158,27,399,5],[159,6,400,2],[159,7,400,3],[160,6,400,3,"_this"],[160,11,400,3],[160,12,402,10,"handleContainerLayout"],[160,33,402,31],[160,36,402,34],[160,46,402,34,"_ref"],[160,50,402,34],[160,52,402,74],[161,8,402,74],[161,12,402,37,"nativeEvent"],[161,23,402,48],[161,26,402,48,"_ref"],[161,30,402,48],[161,31,402,37,"nativeEvent"],[161,42,402,48],[162,8,403,4,"_this"],[162,13,403,4],[162,14,403,9,"setState"],[162,22,403,17],[162,23,403,18],[163,10,403,20,"containerWidth"],[163,24,403,34],[163,26,403,36,"nativeEvent"],[163,37,403,47],[163,38,403,48,"layout"],[163,44,403,54],[163,45,403,55,"width"],[164,8,403,61],[164,9,403,62],[164,10,403,63],[165,6,404,2],[165,7,404,3],[166,6,404,3,"_this"],[166,11,404,3],[166,12,406,10,"emitStateChanged"],[166,28,406,26],[166,31,406,29],[166,41,407,4,"newState"],[166,49,407,25],[166,51,408,4,"drawerWillShow"],[166,65,408,27],[166,67,409,7],[167,8,410,4,"_this"],[167,13,410,4],[167,14,410,9,"props"],[167,19,410,14],[167,20,410,15,"onDrawerStateChanged"],[167,40,410,35],[167,52,410,4,"_this"],[167,57,410,4],[167,58,410,9,"props"],[167,63,410,14],[167,64,410,15,"onDrawerStateChanged"],[167,84,410,35],[167,85,410,38,"newState"],[167,93,410,46],[167,95,410,48,"drawerWillShow"],[167,109,410,62],[167,110,410,63],[168,6,411,2],[168,7,411,3],[169,6,411,3,"_this"],[169,11,411,3],[169,12,413,10,"openingHandlerStateChange"],[169,37,413,35],[169,40,413,38],[169,50,413,38,"_ref2"],[169,55,413,38],[169,57,415,64],[170,8,415,64],[170,12,414,4,"nativeEvent"],[170,23,414,15],[170,26,414,15,"_ref2"],[170,31,414,15],[170,32,414,4,"nativeEvent"],[170,43,414,15],[171,8,416,4],[171,12,416,8,"nativeEvent"],[171,23,416,19],[171,24,416,20,"oldState"],[171,32,416,28],[171,37,416,33,"State"],[171,68,416,33],[171,69,416,33,"State"],[171,86,416,38],[171,87,416,39,"ACTIVE"],[171,93,416,45],[171,95,416,47],[172,10,417,6,"_this"],[172,15,417,6],[172,16,417,11,"handleRelease"],[172,29,417,24],[172,30,417,25],[173,12,417,27,"nativeEvent"],[173,23,417,38],[173,25,417,27,"nativeEvent"],[174,10,417,39],[174,11,417,40],[174,12,417,41],[175,8,418,4],[175,9,418,5],[175,15,418,11],[175,19,418,15,"nativeEvent"],[175,30,418,26],[175,31,418,27,"state"],[175,36,418,32],[175,41,418,37,"State"],[175,72,418,37],[175,73,418,37,"State"],[175,90,418,42],[175,91,418,43,"ACTIVE"],[175,97,418,49],[175,99,418,51],[176,10,419,6,"_this"],[176,15,419,6],[176,16,419,11,"emitStateChanged"],[176,32,419,27],[176,33,419,28,"DRAGGING"],[176,41,419,36],[176,43,419,38],[176,48,419,43],[176,49,419,44],[177,10,420,6,"_this"],[177,15,420,6],[177,16,420,11,"setState"],[177,24,420,19],[177,25,420,20],[178,12,420,22,"drawerState"],[178,23,420,33],[178,25,420,35,"DRAGGING"],[179,10,420,44],[179,11,420,45],[179,12,420,46],[180,10,421,6],[180,14,421,10,"_this"],[180,19,421,10],[180,20,421,15,"props"],[180,25,421,20],[180,26,421,21,"keyboardDismissMode"],[180,45,421,40],[180,50,421,45],[180,59,421,54],[180,61,421,56],[181,12,422,8,"Keyboard"],[181,33,422,16],[181,34,422,17,"dismiss"],[181,41,422,24],[181,42,422,25],[181,43,422,26],[182,10,423,6],[183,10,424,6],[183,14,424,10,"_this"],[183,19,424,10],[183,20,424,15,"props"],[183,25,424,20],[183,26,424,21,"hideStatusBar"],[183,39,424,34],[183,41,424,36],[184,12,425,8,"StatusBar"],[184,34,425,17],[184,35,425,18,"setHidden"],[184,44,425,27],[184,45,425,28],[184,49,425,32],[184,51,425,34,"_this"],[184,56,425,34],[184,57,425,39,"props"],[184,62,425,44],[184,63,425,45,"statusBarAnimation"],[184,81,425,63],[184,85,425,67],[184,92,425,74],[184,93,425,75],[185,10,426,6],[186,8,427,4],[187,6,428,2],[187,7,428,3],[188,6,428,3,"_this"],[188,11,428,3],[188,12,430,10,"onTapHandlerStateChange"],[188,35,430,33],[188,38,430,36],[188,48,430,36,"_ref3"],[188,53,430,36],[188,55,432,64],[189,8,432,64],[189,12,431,4,"nativeEvent"],[189,23,431,15],[189,26,431,15,"_ref3"],[189,31,431,15],[189,32,431,4,"nativeEvent"],[189,43,431,15],[190,8,433,4],[190,12,434,6,"_this"],[190,17,434,6],[190,18,434,11,"drawerShown"],[190,29,434,22],[190,33,435,6,"nativeEvent"],[190,44,435,17],[190,45,435,18,"oldState"],[190,53,435,26],[190,58,435,31,"State"],[190,89,435,31],[190,90,435,31,"State"],[190,107,435,36],[190,108,435,37,"ACTIVE"],[190,114,435,43],[190,118,436,6,"_this"],[190,123,436,6],[190,124,436,11,"props"],[190,129,436,16],[190,130,436,17,"drawerLockMode"],[190,144,436,31],[190,149,436,36],[190,162,436,49],[190,164,437,6],[191,10,438,6,"_this"],[191,15,438,6],[191,16,438,11,"closeDrawer"],[191,27,438,22],[191,28,438,23],[191,29,438,24],[192,8,439,4],[193,6,440,2],[193,7,440,3],[194,6,440,3,"_this"],[194,11,440,3],[194,12,442,10,"handleRelease"],[194,25,442,23],[194,28,442,26],[194,38,442,26,"_ref4"],[194,43,442,26],[194,45,444,64],[195,8,444,64],[195,12,443,4,"nativeEvent"],[195,23,443,15],[195,26,443,15,"_ref4"],[195,31,443,15],[195,32,443,4,"nativeEvent"],[195,43,443,15],[196,8,445,4],[196,12,445,4,"_this$props"],[196,23,445,4],[196,26,445,56,"_this"],[196,31,445,56],[196,32,445,61,"props"],[196,37,445,66],[197,10,445,12,"drawerWidth"],[197,21,445,23],[197,24,445,23,"_this$props"],[197,35,445,23],[197,36,445,12,"drawerWidth"],[197,47,445,23],[198,10,445,25,"drawerPosition"],[198,24,445,39],[198,27,445,39,"_this$props"],[198,38,445,39],[198,39,445,25,"drawerPosition"],[198,53,445,39],[199,10,445,41,"drawerType"],[199,20,445,51],[199,23,445,51,"_this$props"],[199,34,445,51],[199,35,445,41,"drawerType"],[199,45,445,51],[200,8,446,4],[200,12,446,12,"containerWidth"],[200,26,446,26],[200,29,446,31,"_this"],[200,34,446,31],[200,35,446,36,"state"],[200,40,446,41],[200,41,446,12,"containerWidth"],[200,55,446,26],[201,8,447,4],[201,12,447,24,"dragX"],[201,17,447,29],[201,20,447,56,"nativeEvent"],[201,31,447,67],[201,32,447,10,"translationX"],[201,44,447,22],[202,10,447,31,"velocityX"],[202,19,447,40],[202,22,447,56,"nativeEvent"],[202,33,447,67],[202,34,447,31,"velocityX"],[202,43,447,40],[203,10,447,45,"touchX"],[203,16,447,51],[203,19,447,56,"nativeEvent"],[203,30,447,67],[203,31,447,42,"x"],[203,32,447,43],[204,8,449,4],[204,12,449,8,"drawerPosition"],[204,26,449,22],[204,31,449,27],[204,37,449,33],[204,39,449,35],[205,10,450,6],[206,10,451,6],[207,10,452,6,"dragX"],[207,15,452,11],[207,18,452,14],[207,19,452,15,"dragX"],[207,24,452,20],[208,10,453,6,"touchX"],[208,16,453,12],[208,19,453,15,"containerWidth"],[208,33,453,29],[208,36,453,32,"touchX"],[208,42,453,38],[209,10,454,6,"velocityX"],[209,19,454,15],[209,22,454,18],[209,23,454,19,"velocityX"],[209,32,454,28],[210,8,455,4],[211,8,457,4],[211,12,457,10,"gestureStartX"],[211,25,457,23],[211,28,457,26,"touchX"],[211,34,457,32],[211,37,457,35,"dragX"],[211,42,457,40],[212,8,458,4],[212,12,458,8,"dragOffsetBasedOnStart"],[212,34,458,30],[212,37,458,33],[212,38,458,34],[213,8,460,4],[213,12,460,8,"drawerType"],[213,22,460,18],[213,27,460,23],[213,34,460,30],[213,36,460,32],[214,10,461,6,"dragOffsetBasedOnStart"],[214,32,461,28],[214,35,462,8,"gestureStartX"],[214,48,462,21],[214,51,462,24,"drawerWidth"],[214,62,462,36],[214,65,462,39,"gestureStartX"],[214,78,462,52],[214,81,462,55,"drawerWidth"],[214,92,462,67],[214,95,462,70],[214,96,462,71],[215,8,463,4],[216,8,465,4],[216,12,465,10,"startOffsetX"],[216,24,465,22],[216,27,466,6,"dragX"],[216,32,466,11],[216,35,466,14,"dragOffsetBasedOnStart"],[216,57,466,36],[216,61,466,40,"_this"],[216,66,466,40],[216,67,466,45,"drawerShown"],[216,78,466,56],[216,81,466,59,"drawerWidth"],[216,92,466,70],[216,95,466,74],[216,96,466,75],[216,97,466,76],[217,8,467,4],[217,12,467,10,"projOffsetX"],[217,23,467,21],[217,26,467,24,"startOffsetX"],[217,38,467,36],[217,41,467,39,"DRAG_TOSS"],[217,50,467,48],[217,53,467,51,"velocityX"],[217,62,467,60],[218,8,469,4],[218,12,469,10,"shouldOpen"],[218,22,469,20],[218,25,469,23,"projOffsetX"],[218,36,469,34],[218,39,469,37,"drawerWidth"],[218,50,469,48],[218,53,469,52],[218,54,469,53],[219,8,471,4],[219,12,471,8,"shouldOpen"],[219,22,471,18],[219,24,471,20],[220,10,472,6,"_this"],[220,15,472,6],[220,16,472,11,"animateDrawer"],[220,29,472,24],[220,30,472,25,"startOffsetX"],[220,42,472,37],[220,44,472,39,"drawerWidth"],[220,55,472,50],[220,57,472,53,"velocityX"],[220,66,472,62],[220,67,472,63],[221,8,473,4],[221,9,473,5],[221,15,473,11],[222,10,474,6,"_this"],[222,15,474,6],[222,16,474,11,"animateDrawer"],[222,29,474,24],[222,30,474,25,"startOffsetX"],[222,42,474,37],[222,44,474,39],[222,45,474,40],[222,47,474,42,"velocityX"],[222,56,474,51],[222,57,474,52],[223,8,475,4],[224,6,476,2],[224,7,476,3],[225,6,476,3,"_this"],[225,11,476,3],[225,12,478,10,"updateShowing"],[225,25,478,23],[225,28,478,26],[225,38,478,27,"showing"],[225,45,478,43],[225,47,478,48],[226,8,478,48],[226,12,478,48,"_this$accessibilityIs"],[226,33,478,48],[226,35,478,48,"_this$pointerEventsVi"],[226,56,478,48],[226,58,478,48,"_this$panGestureHandl"],[226,79,478,48],[227,8,479,4,"_this"],[227,13,479,4],[227,14,479,9,"drawerShown"],[227,25,479,20],[227,28,479,23,"showing"],[227,35,479,30],[228,8,480,4],[228,9,480,4,"_this$accessibilityIs"],[228,30,480,4],[228,33,480,4,"_this"],[228,38,480,4],[228,39,480,9,"accessibilityIsModalView"],[228,63,480,33],[228,64,480,34,"current"],[228,71,480,41],[228,84,480,4,"_this$accessibilityIs"],[228,105,480,4],[228,106,480,43,"setNativeProps"],[228,120,480,57],[228,121,480,58],[229,10,481,6,"accessibilityViewIsModal"],[229,34,481,30],[229,36,481,32,"showing"],[230,8,482,4],[230,9,482,5],[230,10,482,6],[231,8,483,4],[231,9,483,4,"_this$pointerEventsVi"],[231,30,483,4],[231,33,483,4,"_this"],[231,38,483,4],[231,39,483,9,"pointerEventsView"],[231,56,483,26],[231,57,483,27,"current"],[231,64,483,34],[231,77,483,4,"_this$pointerEventsVi"],[231,98,483,4],[231,99,483,36,"setNativeProps"],[231,113,483,50],[231,114,483,51],[232,10,484,6,"pointerEvents"],[232,23,484,19],[232,25,484,21,"showing"],[232,32,484,28],[232,35,484,31],[232,41,484,37],[232,44,484,40],[233,8,485,4],[233,9,485,5],[233,10,485,6],[234,8,486,4],[234,12,486,4,"_this$props2"],[234,24,486,4],[234,27,486,60,"_this"],[234,32,486,60],[234,33,486,65,"props"],[234,38,486,70],[235,10,486,12,"drawerPosition"],[235,24,486,26],[235,27,486,26,"_this$props2"],[235,39,486,26],[235,40,486,12,"drawerPosition"],[235,54,486,26],[236,10,486,28,"minSwipeDistance"],[236,26,486,44],[236,29,486,44,"_this$props2"],[236,41,486,44],[236,42,486,28,"minSwipeDistance"],[236,58,486,44],[237,10,486,46,"edgeWidth"],[237,19,486,55],[237,22,486,55,"_this$props2"],[237,34,486,55],[237,35,486,46,"edgeWidth"],[237,44,486,55],[238,8,487,4],[238,12,487,10,"fromLeft"],[238,20,487,18],[238,23,487,21,"drawerPosition"],[238,37,487,35],[238,42,487,40],[238,48,487,46],[239,8,488,4],[240,8,489,4],[241,8,490,4],[242,8,491,4],[242,12,491,10,"gestureOrientation"],[242,30,491,28],[242,33,492,6],[242,34,492,7,"fromLeft"],[242,42,492,15],[242,45,492,18],[242,46,492,19],[242,49,492,22],[242,50,492,23],[242,51,492,24],[242,56,492,29,"_this"],[242,61,492,29],[242,62,492,34,"drawerShown"],[242,73,492,45],[242,76,492,48],[242,77,492,49],[242,78,492,50],[242,81,492,53],[242,82,492,54],[242,83,492,55],[243,8,493,4],[244,8,494,4],[245,8,495,4],[246,8,496,4],[246,12,496,10,"hitSlop"],[246,19,496,17],[246,22,496,20,"fromLeft"],[246,30,496,28],[246,33,497,8],[247,10,497,10,"left"],[247,14,497,14],[247,16,497,16],[247,17,497,17],[248,10,497,19,"width"],[248,15,497,24],[248,17,497,26,"showing"],[248,24,497,33],[248,27,497,36,"undefined"],[248,36,497,45],[248,39,497,48,"edgeWidth"],[249,8,497,58],[249,9,497,59],[249,12,498,8],[250,10,498,10,"right"],[250,15,498,15],[250,17,498,17],[250,18,498,18],[251,10,498,20,"width"],[251,15,498,25],[251,17,498,27,"showing"],[251,24,498,34],[251,27,498,37,"undefined"],[251,36,498,46],[251,39,498,49,"edgeWidth"],[252,8,498,59],[252,9,498,60],[253,8,499,4],[254,8,500,4],[254,9,500,4,"_this$panGestureHandl"],[254,30,500,4],[254,33,500,4,"_this"],[254,38,500,4],[254,39,500,9,"panGestureHandler"],[254,56,500,26],[254,57,500,27,"current"],[254,64,500,34],[254,77,500,4,"_this$panGestureHandl"],[254,98,500,4],[254,99,500,36,"setNativeProps"],[254,113,500,50],[254,114,500,51],[255,10,501,6,"hitSlop"],[255,17,501,13],[255,19,501,6,"hitSlop"],[255,26,501,13],[256,10,502,6,"activeOffsetX"],[256,23,502,19],[256,25,502,21,"gestureOrientation"],[256,43,502,39],[256,46,502,42,"minSwipeDistance"],[257,8,503,4],[257,9,503,5],[257,10,503,6],[258,6,504,2],[258,7,504,3],[259,6,504,3,"_this"],[259,11,504,3],[259,12,506,10,"animateDrawer"],[259,25,506,23],[259,28,506,26],[259,38,507,4,"fromValue"],[259,47,507,40],[259,49,508,4,"toValue"],[259,56,508,19],[259,58,509,4,"velocity"],[259,66,509,20],[259,68,510,4,"speed"],[259,73,510,18],[259,75,511,7],[260,8,512,4,"_this"],[260,13,512,4],[260,14,512,9,"state"],[260,19,512,14],[260,20,512,15,"dragX"],[260,25,512,20],[260,26,512,21,"setValue"],[260,34,512,29],[260,35,512,30],[260,36,512,31],[260,37,512,32],[261,8,513,4,"_this"],[261,13,513,4],[261,14,513,9,"state"],[261,19,513,14],[261,20,513,15,"touchX"],[261,26,513,21],[261,27,513,22,"setValue"],[261,35,513,30],[261,36,514,6,"_this"],[261,41,514,6],[261,42,514,11,"props"],[261,47,514,16],[261,48,514,17,"drawerPosition"],[261,62,514,31],[261,67,514,36],[261,73,514,42],[261,76,514,45],[261,77,514,46],[261,80,514,49,"_this"],[261,85,514,49],[261,86,514,54,"state"],[261,91,514,59],[261,92,514,60,"containerWidth"],[261,106,515,4],[261,107,515,5],[262,8,517,4],[262,12,517,8,"fromValue"],[262,21,517,17],[262,25,517,21],[262,29,517,25],[262,31,517,27],[263,10,518,6],[263,14,518,10,"nextFramePosition"],[263,31,518,27],[263,34,518,30,"fromValue"],[263,43,518,39],[264,10,519,6],[264,14,519,10,"_this"],[264,19,519,10],[264,20,519,15,"props"],[264,25,519,20],[264,26,519,21,"useNativeAnimations"],[264,45,519,40],[264,47,519,42],[265,12,520,8],[266,12,521,8],[267,12,522,8],[268,12,523,8],[269,12,524,8],[269,16,524,12,"fromValue"],[269,25,524,21],[269,28,524,24,"toValue"],[269,35,524,31],[269,39,524,35,"velocity"],[269,47,524,43],[269,50,524,46],[269,51,524,47],[269,53,524,49],[270,14,525,10,"nextFramePosition"],[270,31,525,27],[270,34,525,30,"Math"],[270,38,525,34],[270,39,525,35,"min"],[270,42,525,38],[270,43,525,39,"fromValue"],[270,52,525,48],[270,55,525,51,"velocity"],[270,63,525,59],[270,66,525,62],[270,70,525,66],[270,72,525,68,"toValue"],[270,79,525,75],[270,80,525,76],[271,12,526,8],[271,13,526,9],[271,19,526,15],[271,23,526,19,"fromValue"],[271,32,526,28],[271,35,526,31,"toValue"],[271,42,526,38],[271,46,526,42,"velocity"],[271,54,526,50],[271,57,526,53],[271,58,526,54],[271,60,526,56],[272,14,527,10,"nextFramePosition"],[272,31,527,27],[272,34,527,30,"Math"],[272,38,527,34],[272,39,527,35,"max"],[272,42,527,38],[272,43,527,39,"fromValue"],[272,52,527,48],[272,55,527,51,"velocity"],[272,63,527,59],[272,66,527,62],[272,70,527,66],[272,72,527,68,"toValue"],[272,79,527,75],[272,80,527,76],[273,12,528,8],[274,10,529,6],[275,10,530,6,"_this"],[275,15,530,6],[275,16,530,11,"state"],[275,21,530,16],[275,22,530,17,"drawerTranslation"],[275,39,530,34],[275,40,530,35,"setValue"],[275,48,530,43],[275,49,530,44,"nextFramePosition"],[275,66,530,61],[275,67,530,62],[276,8,531,4],[277,8,533,4],[277,12,533,10,"willShow"],[277,20,533,18],[277,23,533,21,"toValue"],[277,30,533,28],[277,35,533,33],[277,36,533,34],[278,8,534,4,"_this"],[278,13,534,4],[278,14,534,9,"updateShowing"],[278,27,534,22],[278,28,534,23,"willShow"],[278,36,534,31],[278,37,534,32],[279,8,535,4,"_this"],[279,13,535,4],[279,14,535,9,"emitStateChanged"],[279,30,535,25],[279,31,535,26,"SETTLING"],[279,39,535,34],[279,41,535,36,"willShow"],[279,49,535,44],[279,50,535,45],[280,8,536,4,"_this"],[280,13,536,4],[280,14,536,9,"setState"],[280,22,536,17],[280,23,536,18],[281,10,536,20,"drawerState"],[281,21,536,31],[281,23,536,33,"SETTLING"],[282,8,536,42],[282,9,536,43],[282,10,536,44],[283,8,537,4],[283,12,537,8,"_this"],[283,17,537,8],[283,18,537,13,"props"],[283,23,537,18],[283,24,537,19,"hideStatusBar"],[283,37,537,32],[283,39,537,34],[284,10,538,6,"StatusBar"],[284,32,538,15],[284,33,538,16,"setHidden"],[284,42,538,25],[284,43,538,26,"willShow"],[284,51,538,34],[284,53,538,36,"_this"],[284,58,538,36],[284,59,538,41,"props"],[284,64,538,46],[284,65,538,47,"statusBarAnimation"],[284,83,538,65],[284,87,538,69],[284,94,538,76],[284,95,538,77],[285,8,539,4],[286,8,540,4,"Animated"],[286,29,540,12],[286,30,540,13,"spring"],[286,36,540,19],[286,37,540,20,"_this"],[286,42,540,20],[286,43,540,25,"state"],[286,48,540,30],[286,49,540,31,"drawerTranslation"],[286,66,540,48],[286,68,540,50],[287,10,541,6,"velocity"],[287,18,541,14],[287,20,541,6,"velocity"],[287,28,541,14],[288,10,542,6,"bounciness"],[288,20,542,16],[288,22,542,18],[288,23,542,19],[289,10,543,6,"toValue"],[289,17,543,13],[289,19,543,6,"toValue"],[289,26,543,13],[290,10,544,6,"useNativeDriver"],[290,25,544,21],[290,27,544,23,"_this"],[290,32,544,23],[290,33,544,28,"props"],[290,38,544,33],[290,39,544,34,"useNativeAnimations"],[290,58,544,54],[291,10,545,6,"speed"],[291,15,545,11],[291,17,545,13,"speed"],[291,22,545,18],[291,33,545,13,"speed"],[291,38,545,18],[291,41,545,22,"undefined"],[292,8,546,4],[292,9,546,5],[292,10,546,6],[292,11,546,7,"start"],[292,16,546,12],[292,17,546,13],[292,27,546,13,"_ref5"],[292,32,546,13],[292,34,546,31],[293,10,546,31],[293,14,546,16,"finished"],[293,22,546,24],[293,25,546,24,"_ref5"],[293,30,546,24],[293,31,546,16,"finished"],[293,39,546,24],[294,10,547,6],[294,14,547,10,"finished"],[294,22,547,18],[294,24,547,20],[295,12,548,8,"_this"],[295,17,548,8],[295,18,548,13,"emitStateChanged"],[295,34,548,29],[295,35,548,30,"IDLE"],[295,39,548,34],[295,41,548,36,"willShow"],[295,49,548,44],[295,50,548,45],[296,12,549,8,"_this"],[296,17,549,8],[296,18,549,13,"setState"],[296,26,549,21],[296,27,549,22],[297,14,549,24,"drawerOpened"],[297,26,549,36],[297,28,549,38,"willShow"],[298,12,549,47],[298,13,549,48],[298,14,549,49],[299,12,550,8],[299,16,550,12,"_this"],[299,21,550,12],[299,22,550,17,"state"],[299,27,550,22],[299,28,550,23,"drawerState"],[299,39,550,34],[299,44,550,39,"DRAGGING"],[299,52,550,47],[299,54,550,49],[300,14,551,10],[301,14,552,10],[302,14,553,10,"_this"],[302,19,553,10],[302,20,553,15,"setState"],[302,28,553,23],[302,29,553,24],[303,16,553,26,"drawerState"],[303,27,553,37],[303,29,553,39,"IDLE"],[304,14,553,44],[304,15,553,45],[304,16,553,46],[305,12,554,8],[306,12,555,8],[306,16,555,12,"willShow"],[306,24,555,20],[306,26,555,22],[307,14,556,10,"_this"],[307,19,556,10],[307,20,556,15,"props"],[307,25,556,20],[307,26,556,21,"onDrawerOpen"],[307,38,556,33],[307,50,556,10,"_this"],[307,55,556,10],[307,56,556,15,"props"],[307,61,556,20],[307,62,556,21,"onDrawerOpen"],[307,74,556,33],[307,75,556,36],[307,76,556,37],[308,12,557,8],[308,13,557,9],[308,19,557,15],[309,14,558,10,"_this"],[309,19,558,10],[309,20,558,15,"props"],[309,25,558,20],[309,26,558,21,"onDrawerClose"],[309,39,558,34],[309,51,558,10,"_this"],[309,56,558,10],[309,57,558,15,"props"],[309,62,558,20],[309,63,558,21,"onDrawerClose"],[309,76,558,34],[309,77,558,37],[309,78,558,38],[310,12,559,8],[311,10,560,6],[312,8,561,4],[312,9,561,5],[312,10,561,6],[313,6,562,2],[313,7,562,3],[314,6,562,3,"_this"],[314,11,562,3],[314,12,564,2,"openDrawer"],[314,22,564,12],[314,25,564,15],[314,37,564,55],[315,8,564,55],[315,12,564,16,"options"],[315,19,564,45],[315,22,564,45,"arguments"],[315,31,564,45],[315,32,564,45,"length"],[315,38,564,45],[315,46,564,45,"arguments"],[315,55,564,45],[315,63,564,45,"undefined"],[315,72,564,45],[315,75,564,45,"arguments"],[315,84,564,45],[315,90,564,48],[315,91,564,49],[315,92,564,50],[316,8,565,4,"_this"],[316,13,565,4],[316,14,565,9,"animateDrawer"],[316,27,565,22],[317,8,566,6],[318,8,567,6,"undefined"],[318,17,567,15],[318,19,568,6,"_this"],[318,24,568,6],[318,25,568,11,"props"],[318,30,568,16],[318,31,568,17,"drawerWidth"],[318,42,568,28],[318,44,569,6,"options"],[318,51,569,13],[318,52,569,14,"velocity"],[318,60,569,22],[318,63,569,25,"options"],[318,70,569,32],[318,71,569,33,"velocity"],[318,79,569,41],[318,82,569,44],[318,83,569,45],[318,85,570,6,"options"],[318,92,570,13],[318,93,570,14,"speed"],[318,98,571,4],[318,99,571,5],[320,8,573,4],[321,8,574,4],[322,8,575,4,"_this"],[322,13,575,4],[322,14,575,9,"forceUpdate"],[322,25,575,20],[322,26,575,21],[322,27,575,22],[323,6,576,2],[323,7,576,3],[324,6,576,3,"_this"],[324,11,576,3],[324,12,578,2,"closeDrawer"],[324,23,578,13],[324,26,578,16],[324,38,578,56],[325,8,578,56],[325,12,578,17,"options"],[325,19,578,46],[325,22,578,46,"arguments"],[325,31,578,46],[325,32,578,46,"length"],[325,38,578,46],[325,46,578,46,"arguments"],[325,55,578,46],[325,63,578,46,"undefined"],[325,72,578,46],[325,75,578,46,"arguments"],[325,84,578,46],[325,90,578,49],[325,91,578,50],[325,92,578,51],[326,8,579,4],[327,8,580,4,"_this"],[327,13,580,4],[327,14,580,9,"animateDrawer"],[327,27,580,22],[327,28,581,6,"undefined"],[327,37,581,15],[327,39,582,6],[327,40,582,7],[327,42,583,6,"options"],[327,49,583,13],[327,50,583,14,"velocity"],[327,58,583,22],[327,61,583,25,"options"],[327,68,583,32],[327,69,583,33,"velocity"],[327,77,583,41],[327,80,583,44],[327,81,583,45],[327,83,584,6,"options"],[327,90,584,13],[327,91,584,14,"speed"],[327,96,585,4],[327,97,585,5],[329,8,587,4],[330,8,588,4],[331,8,589,4,"_this"],[331,13,589,4],[331,14,589,9,"forceUpdate"],[331,25,589,20],[331,26,589,21],[331,27,589,22],[332,6,590,2],[332,7,590,3],[333,6,590,3,"_this"],[333,11,590,3],[333,12,592,10,"renderOverlay"],[333,25,592,23],[333,28,592,26],[333,40,592,32],[334,8,593,4],[335,8,594,4],[335,12,594,4,"invariant"],[335,30,594,13],[335,32,594,14,"_this"],[335,37,594,14],[335,38,594,19,"openValue"],[335,47,594,28],[335,49,594,30],[335,64,594,45],[335,65,594,46],[336,8,595,4],[336,12,595,8,"overlayOpacity"],[336,26,595,22],[337,8,597,4],[337,12,597,8,"_this"],[337,17,597,8],[337,18,597,13,"state"],[337,23,597,18],[337,24,597,19,"drawerState"],[337,35,597,30],[337,40,597,35,"IDLE"],[337,44,597,39],[337,46,597,41],[338,10,598,6,"overlayOpacity"],[338,24,598,20],[338,27,598,23,"_this"],[338,32,598,23],[338,33,598,28,"openValue"],[338,42,598,37],[339,8,599,4],[339,9,599,5],[339,15,599,11],[340,10,600,6,"overlayOpacity"],[340,24,600,20],[340,27,600,23,"_this"],[340,32,600,23],[340,33,600,28,"state"],[340,38,600,33],[340,39,600,34,"drawerOpened"],[340,51,600,46],[340,54,600,49],[340,55,600,50],[340,58,600,53],[340,59,600,54],[341,8,601,4],[342,8,603,4],[342,12,603,10,"dynamicOverlayStyles"],[342,32,603,30],[342,35,603,33],[343,10,604,6,"opacity"],[343,17,604,13],[343,19,604,15,"overlayOpacity"],[343,33,604,29],[344,10,605,6,"backgroundColor"],[344,25,605,21],[344,27,605,23,"_this"],[344,32,605,23],[344,33,605,28,"props"],[344,38,605,33],[344,39,605,34,"overlayColor"],[345,8,606,4],[345,9,606,5],[346,8,608,4],[346,28,609,6],[346,32,609,6,"_jsxRuntime"],[346,43,609,6],[346,44,609,6,"jsx"],[346,47,609,6],[346,49,609,7,"_$$_REQUIRE"],[346,60,609,7],[346,61,609,7,"_dependencyMap"],[346,75,609,7],[346,114,609,7,"TapGestureHandler"],[346,131,609,24],[347,10,609,25,"onHandlerStateChange"],[347,30,609,45],[347,32,609,47,"_this"],[347,37,609,47],[347,38,609,52,"onTapHandlerStateChange"],[347,61,609,76],[348,10,609,76,"children"],[348,18,609,76],[348,33,610,8],[348,37,610,8,"_jsxRuntime"],[348,48,610,8],[348,49,610,8,"jsx"],[348,52,610,8],[348,54,610,9,"_reactNative"],[348,66,610,9],[348,67,610,9,"Animated"],[348,75,610,17],[348,76,610,18,"View"],[348,80,610,22],[349,12,611,10,"pointerEvents"],[349,25,611,23],[349,27,611,25,"_this"],[349,32,611,25],[349,33,611,30,"drawerShown"],[349,44,611,41],[349,47,611,44],[349,53,611,50],[349,56,611,53],[349,62,611,60],[350,12,612,10,"ref"],[350,15,612,13],[350,17,612,15,"_this"],[350,22,612,15],[350,23,612,20,"pointerEventsView"],[350,40,612,38],[351,12,613,10,"style"],[351,17,613,15],[351,19,613,17],[351,20,613,18,"styles"],[351,26,613,24],[351,27,613,25,"overlay"],[351,34,613,32],[351,36,613,34,"dynamicOverlayStyles"],[351,56,613,54],[352,10,613,56],[352,11,614,9],[353,8,614,10],[353,9,615,25],[353,10,615,26],[354,6,617,2],[354,7,617,3],[355,6,617,3,"_this"],[355,11,617,3],[355,12,619,10,"renderDrawer"],[355,24,619,22],[355,27,619,25],[355,39,619,31],[356,8,620,4],[356,12,620,4,"_this$props3"],[356,24,620,4],[356,27,627,8,"_this"],[356,32,627,8],[356,33,627,13,"props"],[356,38,627,18],[357,10,621,6,"drawerBackgroundColor"],[357,31,621,27],[357,34,621,27,"_this$props3"],[357,46,621,27],[357,47,621,6,"drawerBackgroundColor"],[357,68,621,27],[358,10,622,6,"drawerWidth"],[358,21,622,17],[358,24,622,17,"_this$props3"],[358,36,622,17],[358,37,622,6,"drawerWidth"],[358,48,622,17],[359,10,623,6,"drawerPosition"],[359,24,623,20],[359,27,623,20,"_this$props3"],[359,39,623,20],[359,40,623,6,"drawerPosition"],[359,54,623,20],[360,10,624,6,"drawerType"],[360,20,624,16],[360,23,624,16,"_this$props3"],[360,35,624,16],[360,36,624,6,"drawerType"],[360,46,624,16],[361,10,625,6,"drawerContainerStyle"],[361,30,625,26],[361,33,625,26,"_this$props3"],[361,45,625,26],[361,46,625,6,"drawerContainerStyle"],[361,66,625,26],[362,10,626,6,"contentContainerStyle"],[362,31,626,27],[362,34,626,27,"_this$props3"],[362,46,626,27],[362,47,626,6,"contentContainerStyle"],[362,68,626,27],[363,8,629,4],[363,12,629,10,"fromLeft"],[363,20,629,18],[363,23,629,21,"drawerPosition"],[363,37,629,35],[363,42,629,40],[363,48,629,46],[364,8,630,4],[364,12,630,10,"drawerSlide"],[364,23,630,21],[364,26,630,24,"drawerType"],[364,36,630,34],[364,41,630,39],[364,47,630,45],[365,8,631,4],[365,12,631,10,"containerSlide"],[365,26,631,24],[365,29,631,27,"drawerType"],[365,39,631,37],[365,44,631,42],[365,51,631,49],[367,8,633,4],[368,8,634,4],[369,8,635,4],[370,8,636,4],[371,8,637,4],[371,12,637,10,"reverseContentDirection"],[371,35,637,33],[371,38,637,36,"I18nManager"],[371,62,637,47],[371,63,637,48,"isRTL"],[371,68,637,53],[371,71,637,56,"fromLeft"],[371,79,637,64],[371,82,637,67],[371,83,637,68,"fromLeft"],[371,91,637,76],[372,8,639,4],[372,12,639,10,"dynamicDrawerStyles"],[372,31,639,29],[372,34,639,32],[373,10,640,6,"backgroundColor"],[373,25,640,21],[373,27,640,23,"drawerBackgroundColor"],[373,48,640,44],[374,10,641,6,"width"],[374,15,641,11],[374,17,641,13,"drawerWidth"],[375,8,642,4],[375,9,642,5],[376,8,643,4],[376,12,643,10,"openValue"],[376,21,643,19],[376,24,643,22,"_this"],[376,29,643,22],[376,30,643,27,"openValue"],[376,39,643,36],[377,8,644,4],[377,12,644,4,"invariant"],[377,30,644,13],[377,32,644,14,"openValue"],[377,41,644,23],[377,43,644,25],[377,58,644,40],[377,59,644,41],[378,8,646,4],[378,12,646,8,"containerStyles"],[378,27,646,23],[379,8,647,4],[379,12,647,8,"containerSlide"],[379,26,647,22],[379,28,647,24],[380,10,648,6],[380,14,648,12,"containerTranslateX"],[380,33,648,31],[380,36,648,34,"openValue"],[380,45,648,43],[380,46,648,44,"interpolate"],[380,57,648,55],[380,58,648,56],[381,12,649,8,"inputRange"],[381,22,649,18],[381,24,649,20],[381,25,649,21],[381,26,649,22],[381,28,649,24],[381,29,649,25],[381,30,649,26],[382,12,650,8,"outputRange"],[382,23,650,19],[382,25,650,21,"fromLeft"],[382,33,650,29],[382,36,650,32],[382,37,650,33],[382,38,650,34],[382,40,650,36,"drawerWidth"],[382,51,650,47],[382,52,650,49],[382,55,650,52],[382,56,650,53],[382,57,650,54],[382,59,650,56],[382,60,650,57,"drawerWidth"],[382,71,650,69],[382,72,650,70],[383,12,651,8,"extrapolate"],[383,23,651,19],[383,25,651,21],[384,10,652,6],[384,11,652,7],[384,12,652,8],[385,10,653,6,"containerStyles"],[385,25,653,21],[385,28,653,24],[386,12,654,8,"transform"],[386,21,654,17],[386,23,654,19],[386,24,654,20],[387,14,654,22,"translateX"],[387,24,654,32],[387,26,654,34,"containerTranslateX"],[388,12,654,54],[388,13,654,55],[389,10,655,6],[389,11,655,7],[390,8,656,4],[391,8,658,4],[391,12,658,8,"drawerTranslateX"],[391,28,658,56],[391,31,658,59],[391,32,658,60],[392,8,659,4],[392,12,659,8,"drawerSlide"],[392,23,659,19],[392,25,659,21],[393,10,660,6],[393,14,660,12,"closedDrawerOffset"],[393,32,660,30],[393,35,660,33,"fromLeft"],[393,43,660,41],[393,46,660,44],[393,47,660,45,"drawerWidth"],[393,58,660,57],[393,61,660,60,"drawerWidth"],[393,72,660,72],[394,10,661,6],[394,14,661,10,"_this"],[394,19,661,10],[394,20,661,15,"state"],[394,25,661,20],[394,26,661,21,"drawerState"],[394,37,661,32],[394,42,661,37,"IDLE"],[394,46,661,41],[394,48,661,43],[395,12,662,8,"drawerTranslateX"],[395,28,662,24],[395,31,662,27,"openValue"],[395,40,662,36],[395,41,662,37,"interpolate"],[395,52,662,48],[395,53,662,49],[396,14,663,10,"inputRange"],[396,24,663,20],[396,26,663,22],[396,27,663,23],[396,28,663,24],[396,30,663,26],[396,31,663,27],[396,32,663,28],[397,14,664,10,"outputRange"],[397,25,664,21],[397,27,664,23],[397,28,664,24,"closedDrawerOffset"],[397,46,664,42],[397,48,664,44],[397,49,664,45],[397,50,664,46],[398,14,665,10,"extrapolate"],[398,25,665,21],[398,27,665,23],[399,12,666,8],[399,13,666,9],[399,14,666,10],[400,10,667,6],[400,11,667,7],[400,17,667,13],[401,12,668,8,"drawerTranslateX"],[401,28,668,24],[401,31,668,27,"_this"],[401,36,668,27],[401,37,668,32,"state"],[401,42,668,37],[401,43,668,38,"drawerOpened"],[401,55,668,50],[401,58,668,53],[401,59,668,54],[401,62,668,57,"closedDrawerOffset"],[401,80,668,75],[402,10,669,6],[403,8,670,4],[404,8,671,4],[404,12,671,10,"drawerStyles"],[404,24,674,5],[404,27,674,8],[405,10,675,6,"transform"],[405,19,675,15],[405,21,675,17],[405,22,675,18],[406,12,675,20,"translateX"],[406,22,675,30],[406,24,675,32,"drawerTranslateX"],[407,10,675,49],[407,11,675,50],[407,12,675,51],[408,10,676,6,"flexDirection"],[408,23,676,19],[408,25,676,21,"reverseContentDirection"],[408,48,676,44],[408,51,676,47],[408,64,676,60],[408,67,676,63],[409,8,677,4],[409,9,677,5],[410,8,679,4],[410,28,680,6],[410,32,680,6,"_jsxRuntime"],[410,43,680,6],[410,44,680,6,"jsxs"],[410,48,680,6],[410,50,680,7,"_reactNative"],[410,62,680,7],[410,63,680,7,"Animated"],[410,71,680,15],[410,72,680,16,"View"],[410,76,680,20],[411,10,680,21,"style"],[411,15,680,26],[411,17,680,28,"styles"],[411,23,680,34],[411,24,680,35,"main"],[411,28,680,40],[412,10,680,41,"onLayout"],[412,18,680,49],[412,20,680,51,"_this"],[412,25,680,51],[412,26,680,56,"handleContainerLayout"],[412,47,680,78],[413,10,680,78,"children"],[413,18,680,78],[413,34,681,8],[413,38,681,8,"_jsxRuntime"],[413,49,681,8],[413,50,681,8,"jsxs"],[413,54,681,8],[413,56,681,9,"_reactNative"],[413,68,681,9],[413,69,681,9,"Animated"],[413,77,681,17],[413,78,681,18,"View"],[413,82,681,22],[414,12,682,10,"style"],[414,17,682,15],[414,19,682,17],[414,20,683,12,"drawerType"],[414,30,683,22],[414,35,683,27],[414,42,683,34],[414,45,684,16,"styles"],[414,51,684,22],[414,52,684,23,"containerOnBack"],[414,67,684,38],[414,70,685,16,"styles"],[414,76,685,22],[414,77,685,23,"containerInFront"],[414,93,685,39],[414,95,686,12,"containerStyles"],[414,110,686,27],[414,112,687,12,"contentContainerStyle"],[414,133,687,33],[414,134,688,12],[415,12,689,10,"importantForAccessibility"],[415,37,689,35],[415,39,690,12,"_this"],[415,44,690,12],[415,45,690,17,"drawerShown"],[415,56,690,28],[415,59,690,31],[415,80,690,52],[415,83,690,55],[415,88,691,11],[416,12,691,11,"children"],[416,20,691,11],[416,23,692,11],[416,30,692,18,"_this"],[416,35,692,18],[416,36,692,23,"props"],[416,41,692,28],[416,42,692,29,"children"],[416,50,692,37],[416,55,692,42],[416,65,692,52],[416,68,693,14,"_this"],[416,73,693,14],[416,74,693,19,"props"],[416,79,693,24],[416,80,693,25,"children"],[416,88,693,33],[416,89,693,34,"_this"],[416,94,693,34],[416,95,693,39,"openValue"],[416,104,693,48],[416,105,693,49],[416,108,694,14,"_this"],[416,113,694,14],[416,114,694,19,"props"],[416,119,694,24],[416,120,694,25,"children"],[416,128,694,33],[416,130,695,11,"_this"],[416,135,695,11],[416,136,695,16,"renderOverlay"],[416,149,695,29],[416,150,695,30],[416,151,695,31],[417,10,695,31],[417,11,696,23],[417,12,696,24],[417,27,697,8],[417,31,697,8,"_jsxRuntime"],[417,42,697,8],[417,43,697,8,"jsx"],[417,46,697,8],[417,48,697,9,"_reactNative"],[417,60,697,9],[417,61,697,9,"Animated"],[417,69,697,17],[417,70,697,18,"View"],[417,74,697,22],[418,12,698,10,"pointerEvents"],[418,25,698,23],[418,27,698,24],[418,37,698,34],[419,12,699,10,"ref"],[419,15,699,13],[419,17,699,15,"_this"],[419,22,699,15],[419,23,699,20,"accessibilityIsModalView"],[419,47,699,45],[420,12,700,10,"accessibilityViewIsModal"],[420,36,700,34],[420,38,700,36,"_this"],[420,43,700,36],[420,44,700,41,"drawerShown"],[420,55,700,53],[421,12,701,10,"style"],[421,17,701,15],[421,19,701,17],[421,20,701,18,"styles"],[421,26,701,24],[421,27,701,25,"drawerContainer"],[421,42,701,40],[421,44,701,42,"drawerStyles"],[421,56,701,54],[421,58,701,56,"drawerContainerStyle"],[421,78,701,76],[421,79,701,78],[422,12,701,78,"children"],[422,20,701,78],[422,35,702,10],[422,39,702,10,"_jsxRuntime"],[422,50,702,10],[422,51,702,10,"jsx"],[422,54,702,10],[422,56,702,11,"_reactNative"],[422,68,702,11],[422,69,702,11,"View"],[422,73,702,15],[423,14,702,16,"style"],[423,19,702,21],[423,21,702,23,"dynamicDrawerStyles"],[423,40,702,43],[424,14,702,43,"children"],[424,22,702,43],[424,24,703,13,"_this"],[424,29,703,13],[424,30,703,18,"props"],[424,35,703,23],[424,36,703,24,"renderNavigationView"],[424,56,703,44],[424,57,703,45,"_this"],[424,62,703,45],[424,63,703,50,"openValue"],[424,72,703,77],[425,12,703,78],[425,13,704,16],[426,10,704,17],[426,11,705,23],[426,12,705,24],[427,8,705,24],[427,9,706,21],[427,10,706,22],[428,6,708,2],[428,7,708,3],[429,6,708,3,"_this"],[429,11,708,3],[429,12,710,10,"setPanGestureRef"],[429,28,710,26],[429,31,710,29],[429,41,710,30,"ref"],[429,44,710,52],[429,46,710,57],[430,8,711,4],[431,8,712,4],[432,8,714,6,"_this"],[432,13,714,6],[432,14,714,11,"panGestureHandler"],[432,31,714,28],[432,32,715,6,"current"],[432,39,715,13],[432,42,715,16,"ref"],[432,45,715,19],[433,8,716,4,"_this"],[433,13,716,4],[433,14,716,9,"props"],[433,19,716,14],[433,20,716,15,"onGestureRef"],[433,32,716,27],[433,44,716,4,"_this"],[433,49,716,4],[433,50,716,9,"props"],[433,55,716,14],[433,56,716,15,"onGestureRef"],[433,68,716,27],[433,69,716,30,"ref"],[433,72,716,33],[433,73,716,34],[434,6,717,2],[434,7,717,3],[435,6,250,4],[435,10,250,10,"dragX"],[435,16,250,15],[435,19,250,18],[435,23,250,22,"Animated"],[435,44,250,30],[435,45,250,31,"Value"],[435,50,250,36],[435,51,250,37],[435,52,250,38],[435,53,250,39],[436,6,251,4],[436,10,251,10,"touchX"],[436,17,251,16],[436,20,251,19],[436,24,251,23,"Animated"],[436,45,251,31],[436,46,251,32,"Value"],[436,51,251,37],[436,52,251,38],[436,53,251,39],[436,54,251,40],[437,6,252,4],[437,10,252,10,"drawerTranslation"],[437,28,252,27],[437,31,252,30],[437,35,252,34,"Animated"],[437,56,252,42],[437,57,252,43,"Value"],[437,62,252,48],[437,63,252,49],[437,64,252,50],[437,65,252,51],[438,6,254,4,"_this"],[438,11,254,4],[438,12,254,9,"state"],[438,17,254,14],[438,20,254,17],[439,8,255,6,"dragX"],[439,13,255,11],[439,15,255,6,"dragX"],[439,21,255,11],[440,8,256,6,"touchX"],[440,14,256,12],[440,16,256,6,"touchX"],[440,23,256,12],[441,8,257,6,"drawerTranslation"],[441,25,257,23],[441,27,257,6,"drawerTranslation"],[441,45,257,23],[442,8,258,6,"containerWidth"],[442,22,258,20],[442,24,258,22],[442,25,258,23],[443,8,259,6,"drawerState"],[443,19,259,17],[443,21,259,19,"IDLE"],[443,25,259,23],[444,8,260,6,"drawerOpened"],[444,20,260,18],[444,22,260,20],[445,6,261,4],[445,7,261,5],[446,6,263,4,"_this"],[446,11,263,4],[446,12,263,9,"updateAnimatedEvent"],[446,31,263,28],[446,32,263,29,"props"],[446,38,263,34],[446,40,263,36,"_this"],[446,45,263,36],[446,46,263,41,"state"],[446,51,263,46],[446,52,263,47],[447,6,263,48],[447,13,263,48,"_this"],[447,18,263,48],[448,4,264,2],[449,4,264,3],[449,8,264,3,"_inherits2"],[449,18,264,3],[449,19,264,3,"default"],[449,26,264,3],[449,28,264,3,"DrawerLayout"],[449,40,264,3],[449,42,264,3,"_Component"],[449,52,264,3],[450,4,264,3],[450,15,264,3,"_createClass2"],[450,28,264,3],[450,29,264,3,"default"],[450,36,264,3],[450,38,264,3,"DrawerLayout"],[450,50,264,3],[451,6,264,3,"key"],[451,9,264,3],[452,6,264,3,"value"],[452,11,264,3],[452,13,266,2],[452,22,266,2,"shouldComponentUpdate"],[452,43,266,23,"shouldComponentUpdate"],[452,44,266,24,"props"],[452,49,266,48],[452,51,266,50,"state"],[452,56,266,74],[452,58,266,76],[453,8,267,4],[453,12,268,6],[453,16,268,10],[453,17,268,11,"props"],[453,22,268,16],[453,23,268,17,"drawerPosition"],[453,37,268,31],[453,42,268,36,"props"],[453,47,268,41],[453,48,268,42,"drawerPosition"],[453,62,268,56],[453,66,269,6],[453,70,269,10],[453,71,269,11,"props"],[453,76,269,16],[453,77,269,17,"drawerWidth"],[453,88,269,28],[453,93,269,33,"props"],[453,98,269,38],[453,99,269,39,"drawerWidth"],[453,110,269,50],[453,114,270,6],[453,118,270,10],[453,119,270,11,"props"],[453,124,270,16],[453,125,270,17,"drawerType"],[453,135,270,27],[453,140,270,32,"props"],[453,145,270,37],[453,146,270,38,"drawerType"],[453,156,270,48],[453,160,271,6],[453,164,271,10],[453,165,271,11,"state"],[453,170,271,16],[453,171,271,17,"containerWidth"],[453,185,271,31],[453,190,271,36,"state"],[453,195,271,41],[453,196,271,42,"containerWidth"],[453,210,271,56],[453,212,272,6],[454,10,273,6],[454,14,273,10],[454,15,273,11,"updateAnimatedEvent"],[454,34,273,30],[454,35,273,31,"props"],[454,40,273,36],[454,42,273,38,"state"],[454,47,273,43],[454,48,273,44],[455,8,274,4],[456,8,276,4],[456,15,276,11],[456,19,276,15],[457,6,277,2],[458,4,277,3],[459,6,277,3,"key"],[459,9,277,3],[460,6,277,3,"value"],[460,11,277,3],[460,13,719,2],[460,22,719,2,"render"],[460,28,719,8,"render"],[460,29,719,8],[460,31,719,11],[461,8,720,4],[461,12,720,4,"_this$props4"],[461,24,720,4],[461,27,721,6],[461,31,721,10],[461,32,721,11,"props"],[461,37,721,16],[462,10,720,12,"drawerPosition"],[462,24,720,26],[462,27,720,26,"_this$props4"],[462,39,720,26],[462,40,720,12,"drawerPosition"],[462,54,720,26],[463,10,720,28,"drawerLockMode"],[463,24,720,42],[463,27,720,42,"_this$props4"],[463,39,720,42],[463,40,720,28,"drawerLockMode"],[463,54,720,42],[464,10,720,44,"edgeWidth"],[464,19,720,53],[464,22,720,53,"_this$props4"],[464,34,720,53],[464,35,720,44,"edgeWidth"],[464,44,720,53],[465,10,720,55,"minSwipeDistance"],[465,26,720,71],[465,29,720,71,"_this$props4"],[465,41,720,71],[465,42,720,55,"minSwipeDistance"],[465,58,720,71],[466,8,723,4],[466,12,723,10,"fromLeft"],[466,20,723,18],[466,23,723,21,"drawerPosition"],[466,37,723,35],[466,42,723,40],[466,48,723,46],[468,8,725,4],[469,8,726,4],[470,8,727,4],[471,8,728,4],[471,12,728,10,"gestureOrientation"],[471,30,728,28],[471,33,729,6],[471,34,729,7,"fromLeft"],[471,42,729,15],[471,45,729,18],[471,46,729,19],[471,49,729,22],[471,50,729,23],[471,51,729,24],[471,56,729,29],[471,60,729,33],[471,61,729,34,"drawerShown"],[471,72,729,45],[471,75,729,48],[471,76,729,49],[471,77,729,50],[471,80,729,53],[471,81,729,54],[471,82,729,55],[473,8,731,4],[474,8,732,4],[475,8,733,4],[476,8,734,4],[476,12,734,10,"hitSlop"],[476,19,734,17],[476,22,734,20,"fromLeft"],[476,30,734,28],[476,33,735,8],[477,10,735,10,"left"],[477,14,735,14],[477,16,735,16],[477,17,735,17],[478,10,735,19,"width"],[478,15,735,24],[478,17,735,26],[478,21,735,30],[478,22,735,31,"drawerShown"],[478,33,735,42],[478,36,735,45,"undefined"],[478,45,735,54],[478,48,735,57,"edgeWidth"],[479,8,735,67],[479,9,735,68],[479,12,736,8],[480,10,736,10,"right"],[480,15,736,15],[480,17,736,17],[480,18,736,18],[481,10,736,20,"width"],[481,15,736,25],[481,17,736,27],[481,21,736,31],[481,22,736,32,"drawerShown"],[481,33,736,43],[481,36,736,46,"undefined"],[481,45,736,55],[481,48,736,58,"edgeWidth"],[482,8,736,68],[482,9,736,69],[483,8,738,4],[483,28,739,6],[483,32,739,6,"_jsxRuntime"],[483,43,739,6],[483,44,739,6,"jsx"],[483,47,739,6],[483,49,739,7,"_$$_REQUIRE"],[483,60,739,7],[483,61,739,7,"_dependencyMap"],[483,75,739,7],[483,114,739,7,"PanGestureHandler"],[484,8,740,8],[485,8,740,8],[486,10,741,8,"userSelect"],[486,20,741,18],[486,22,741,20],[486,26,741,24],[486,27,741,25,"props"],[486,32,741,30],[486,33,741,31,"userSelect"],[486,43,741,42],[487,10,742,8,"activeCursor"],[487,22,742,20],[487,24,742,22],[487,28,742,26],[487,29,742,27,"props"],[487,34,742,32],[487,35,742,33,"activeCursor"],[487,47,742,46],[488,10,743,8,"mouseButton"],[488,21,743,19],[488,23,743,21],[488,27,743,25],[488,28,743,26,"props"],[488,33,743,31],[488,34,743,32,"mouseButton"],[488,45,743,44],[489,10,744,8,"enableContextMenu"],[489,27,744,25],[489,29,744,27],[489,33,744,31],[489,34,744,32,"props"],[489,39,744,37],[489,40,744,38,"enableContextMenu"],[489,57,744,56],[490,10,745,8,"ref"],[490,13,745,11],[490,15,745,13],[490,19,745,17],[490,20,745,18,"setPanGestureRef"],[490,36,745,35],[491,10,746,8,"hitSlop"],[491,17,746,15],[491,19,746,17,"hitSlop"],[491,26,746,25],[492,10,747,8,"activeOffsetX"],[492,23,747,21],[492,25,747,23,"gestureOrientation"],[492,43,747,41],[492,46,747,44,"minSwipeDistance"],[492,62,747,62],[493,10,748,8,"failOffsetY"],[493,21,748,19],[493,23,748,21],[493,24,748,22],[493,25,748,23],[493,27,748,25],[493,29,748,27],[493,31,748,29],[493,32,748,31],[494,10,749,8,"onGestureEvent"],[494,24,749,22],[494,26,749,24],[494,30,749,28],[494,31,749,29,"onGestureEvent"],[494,45,749,44],[495,10,750,8,"onHandlerStateChange"],[495,30,750,28],[495,32,750,30],[495,36,750,34],[495,37,750,35,"openingHandlerStateChange"],[495,62,750,61],[496,10,751,8,"enableTrackpadTwoFingerGesture"],[496,40,751,38],[496,42,752,10],[496,46,752,14],[496,47,752,15,"props"],[496,52,752,20],[496,53,752,21,"enableTrackpadTwoFingerGesture"],[496,83,753,9],[497,10,754,8,"enabled"],[497,17,754,15],[497,19,755,10,"drawerLockMode"],[497,33,755,24],[497,38,755,29],[497,53,755,44],[497,57,755,48,"drawerLockMode"],[497,71,755,62],[497,76,755,67],[497,89,756,9],[498,10,756,9,"children"],[498,18,756,9],[498,20,757,9],[498,24,757,13],[498,25,757,14,"renderDrawer"],[498,37,757,26],[498,38,757,27],[499,8,757,28],[499,9,758,25],[499,10,758,26],[500,6,760,2],[501,4,760,3],[502,2,760,3],[502,4,231,42,"Component"],[502,20,231,51],[503,2,231,21,"DrawerLayout"],[503,14,231,33],[503,15,235,9,"defaultProps"],[503,27,235,21],[503,30,235,24],[504,4,236,4,"drawerWidth"],[504,15,236,15],[504,17,236,17],[504,20,236,20],[505,4,237,4,"drawerPosition"],[505,18,237,18],[505,20,237,20],[505,26,237,26],[506,4,238,4,"useNativeAnimations"],[506,23,238,23],[506,25,238,25],[506,29,238,29],[507,4,239,4,"drawerType"],[507,14,239,14],[507,16,239,16],[507,23,239,23],[508,4,240,4,"edgeWidth"],[508,13,240,13],[508,15,240,15],[508,17,240,17],[509,4,241,4,"minSwipeDistance"],[509,20,241,20],[509,22,241,22],[509,23,241,23],[510,4,242,4,"overlayColor"],[510,16,242,16],[510,18,242,18],[510,38,242,38],[511,4,243,4,"drawerLockMode"],[511,18,243,18],[511,20,243,20],[511,30,243,30],[512,4,244,4,"enableTrackpadTwoFingerGesture"],[512,34,244,34],[512,36,244,36],[513,2,245,2],[513,3,245,3],[514,2,231,21,"DrawerLayout"],[514,14,231,33],[514,15,288,9,"positions"],[514,24,288,18],[514,27,288,21],[515,4,289,4,"Left"],[515,8,289,8],[515,10,289,10],[515,16,289,16],[516,4,290,4,"Right"],[516,9,290,9],[516,11,290,11],[517,2,291,2],[517,3,291,3],[518,2,763,0],[518,6,763,6,"styles"],[518,12,763,12],[518,15,763,15,"StyleSheet"],[518,38,763,25],[518,39,763,26,"create"],[518,45,763,32],[518,46,763,33],[519,4,764,2,"drawerContainer"],[519,19,764,17],[519,21,764,17,"Object"],[519,27,764,17],[519,28,764,17,"assign"],[519,34,764,17],[519,39,765,7,"StyleSheet"],[519,62,765,17],[519,63,765,18,"absoluteFillObject"],[519,81,765,36],[520,6,766,4,"zIndex"],[520,12,766,10],[520,14,766,12],[520,18,766,16],[521,6,767,4,"flexDirection"],[521,19,767,17],[521,21,767,19],[522,4,767,24],[522,6,768,3],[523,4,769,2,"containerInFront"],[523,20,769,18],[523,22,769,18,"Object"],[523,28,769,18],[523,29,769,18,"assign"],[523,35,769,18],[523,40,770,7,"StyleSheet"],[523,63,770,17],[523,64,770,18,"absoluteFillObject"],[523,82,770,36],[524,6,771,4,"zIndex"],[524,12,771,10],[524,14,771,12],[525,4,771,16],[525,6,772,3],[526,4,773,2,"containerOnBack"],[526,19,773,17],[526,21,773,17,"Object"],[526,27,773,17],[526,28,773,17,"assign"],[526,34,773,17],[526,39,774,7,"StyleSheet"],[526,62,774,17],[526,63,774,18,"absoluteFillObject"],[526,81,774,36],[526,82,775,3],[527,4,776,2,"main"],[527,8,776,6],[527,10,776,8],[528,6,777,4,"flex"],[528,10,777,8],[528,12,777,10],[528,13,777,11],[529,6,778,4,"zIndex"],[529,12,778,10],[529,14,778,12],[529,15,778,13],[530,6,779,4,"overflow"],[530,14,779,12],[530,16,779,14],[531,4,780,2],[531,5,780,3],[532,4,781,2,"overlay"],[532,11,781,9],[532,13,781,9,"Object"],[532,19,781,9],[532,20,781,9,"assign"],[532,26,781,9],[532,31,782,7,"StyleSheet"],[532,54,782,17],[532,55,782,18,"absoluteFillObject"],[532,73,782,36],[533,6,783,4,"zIndex"],[533,12,783,10],[533,14,783,12],[534,4,783,16],[535,2,785,0],[535,3,785,1],[535,4,785,2],[536,0,785,3],[536,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"}},"type":"js/module"}]}